{
	"info": {
		"_postman_id": "c7830eb5-0591-44eb-80ae-a0b898823062",
		"name": "Ed-Fi Discovery API (2.0)",
		"description": "The default response when retrieving the base endpoint on an Ed-Fi implementation\nmust be a JSON document that provides information about the application version,\nsupported data model(s), and URLs for additional metadata.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29458798"
	},
  "item": [
    {
      "id": "52a50396-5c0e-4306-a4b5-28d74d73d9df",
      "name": "High-level metadata for the Ed-Fi API implementation.",
      "request": {
        "name": "High-level metadata for the Ed-Fi API implementation.",
        "description": {
          "content": "High-level metadata for the Ed-Fi API implementation.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            ""
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET"
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "e79044e8-c5ea-482d-afb3-8d23ecf8596a",
          "name": "GET response",
          "originalRequest": {
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"version\": \"occaecat nostrud sint ipsum\",\n  \"applicationName\": \"ad sit\",\n  \"dataModels\": [\n    {\n      \"name\": \"Ed-Fi\",\n      \"version\": \"5.0.0\",\n      \"informationalVersion\": \"The Ed-Fi Data Model 5.0\"\n    },\n    {\n      \"name\": \"Ed-Fi\",\n      \"version\": \"5.0.0\",\n      \"informationalVersion\": \"The Ed-Fi Data Model 5.0\"\n    }\n  ],\n  \"urls\": {\n    \"dependencies\": \"https://api.ed-fi.org/DMS/metadata/dependencies\",\n    \"openApiMetadata\": \"https://api.ed-fi.org/DMS/metadata/specifications\",\n    \"oauth\": \"https://api.ed-fi.org/DMS/oauth/token\",\n    \"dataManagementApi\": \"https://api.ed-fi.org/DMS/data\",\n    \"xsdMetadata\": \"https://api.ed-fi.org/DMS/metadata/xsd\",\n    \"changeQueries\": \"https://api.ed-fi.org/DMS/changeQueries/v1\",\n    \"identity\": \"https://api.ed-fi.org/DMS/identity/v2\"\n  },\n  \"build\": \"7.1.2250.0\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "3f3301cb-0eef-4d6b-ac1d-4698d2f2e5d7",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[GET]::/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[GET]::/ - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[GET]::/ - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"version\",\"applicationName\",\"dataModels\",\"urls\"],\"properties\":{\"version\":{\"type\":\"string\",\"example\":7.1},\"applicationName\":{\"type\":\"string\",\"example\":3},\"build\":{\"type\":\"string\",\"example\":\"7.1.2250.0\"},\"dataModels\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"name\",\"version\"],\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"Ed-Fi\"},\"version\":{\"type\":\"string\",\"example\":\"5.0.0\"},\"informationalVersion\":{\"type\":\"string\",\"example\":\"The Ed-Fi Data Model 5.0\"}}}},\"urls\":{\"type\":\"object\",\"required\":[\"dependencies\",\"openApiMetadata\",\"oauth\",\"dataManagementApi\"],\"properties\":{\"dependencies\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/metadata/dependencies\"},\"openApiMetadata\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/metadata/specifications\"},\"oauth\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/oauth/token\"},\"dataManagementApi\":{\"type\":\"string\",\"description\":\"Base path for all resources\",\"example\":\"https://api.ed-fi.org/DMS/data\"},\"xsdMetadata\":{\"type\":\"string\",\"description\":\"link for downloading XSD files\",\"example\":\"https://api.ed-fi.org/DMS/metadata/xsd\"},\"changeQueries\":{\"type\":\"string\",\"description\":\"Base path for the Change Queries API\",\"example\":\"https://api.ed-fi.org/DMS/changeQueries/v1\"},\"identity\":{\"type\":\"string\",\"description\":\"Base path for the Identity API\",\"example\":\"https://api.ed-fi.org/DMS/identity/v2\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "35cb8f58-1ac9-472b-8d48-ba4720cb354e",
      "name": "List of metadata resources",
      "request": {
        "name": "List of metadata resources",
        "description": {
          "content": "List of metadata resources",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "metadata"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET"
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "510db135-3e6d-446f-86db-7e08f1782908",
          "name": "GET response",
          "originalRequest": {
            "url": {
              "path": [
                "metadata"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"dependencies\": \"https://api.ed-fi.org/DMS/metadata/dependencies\",\n  \"specifications\": \"https://api.ed-fi.org/DMS/metadata/specifications\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c193b2ee-a8fd-4832-b252-776ab676c654",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[GET]::/metadata - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[GET]::/metadata - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[GET]::/metadata - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"dependencies\",\"specifications\"],\"properties\":{\"dependencies\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/metadata/dependencies\"},\"specifications\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/metadata/specifications\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/metadata - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "f732e0b0-2d69-4c71-87aa-8c6c21faca1c",
      "name": "OpenAPI specifications for interfaces supported by this application.",
      "request": {
        "name": "OpenAPI specifications for interfaces supported by this application.",
        "description": {
          "content": "OpenAPI specifications for interfaces supported by this application.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "metadata",
            "specifications"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET"
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "23439f28-f0df-4150-94ce-9ff2d7ada60a",
          "name": "GET response",
          "originalRequest": {
            "url": {
              "path": [
                "metadata",
                "specifications"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "[\n  {\n    \"name\": \"Resources\",\n    \"endpointUri\": \"https://api.ed-fi.org/DMS/metadata/specifications/resources-spec.json\",\n    \"prefix\": \"do venia\"\n  },\n  {\n    \"name\": \"Resources\",\n    \"endpointUri\": \"https://api.ed-fi.org/DMS/metadata/specifications/resources-spec.json\",\n    \"prefix\": \"ullamco ei\"\n  }\n]",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "0d9ebbe7-b9ac-46e5-97fb-ef90ebe6602f",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[GET]::/metadata/specifications - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[GET]::/metadata/specifications - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[GET]::/metadata/specifications - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"name\",\"endpointUri\",\"prefix\"],\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"Resources\"},\"endpointUri\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/DMS/metadata/specifications/resources-spec.json\"},\"prefix\":{\"type\":\"string\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/metadata/specifications - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    },
    {
      "id": "333b8561-2a79-42e5-98db-0792f799cc8a",
      "name": "This endpoint will provide developers with the data needed to load resources in the appropriate order.",
      "request": {
        "name": "This endpoint will provide developers with the data needed to load resources in the appropriate order.",
        "description": {
          "content": "This endpoint will provide developers with the data needed to load resources in the appropriate order.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "metadata",
            "dependencies"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "GET"
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "86076763-b5a0-46fd-97cb-c1bebfc2e139",
          "name": "GET response",
          "originalRequest": {
            "url": {
              "path": [
                "metadata",
                "dependencies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "[\n  {\n    \"resource\": \"/ed-fi/absenceEventCategoryDescriptors\",\n    \"order\": 1,\n    \"operations\": [\n      \"Create\",\n      \"Create\"\n    ]\n  },\n  {\n    \"resource\": \"/ed-fi/absenceEventCategoryDescriptors\",\n    \"order\": 1,\n    \"operations\": [\n      \"Create\",\n      \"Create\"\n    ]\n  }\n]",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4d203f93-77e1-468d-852d-b3477cf11b3b",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[GET]::/metadata/dependencies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[GET]::/metadata/dependencies - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[GET]::/metadata/dependencies - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"resource\",\"order\",\"operations\"],\"properties\":{\"resource\":{\"type\":\"string\",\"example\":\"/ed-fi/absenceEventCategoryDescriptors\"},\"order\":{\"type\":\"integer\",\"example\":1},\"operations\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"example\":\"Create\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/metadata/dependencies - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "/",
      "key": "baseUrl"
    }
  ]
}
