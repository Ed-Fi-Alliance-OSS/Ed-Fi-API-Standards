{
  "openapi": "3.0.1",
  "info": {
    "title": "Ed-Fi Operational Data Store API",
    "description": "The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. \n***\n > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.* \n***\n",
    "version": "3"
  },
  "servers": [
    {
      "url": "https://api.ed-fi.org:443/v7.1/api/data/v3"
    }
  ],
  "paths": {
    "/ed-fi/academicWeeks": {
      "get": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAcademicWeeks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "weekIdentifier",
            "in": "query",
            "description": "The school label for the week.",
            "schema": {
              "maxLength": 80,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The start date for the academic week.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the academic week.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalInstructionalDays",
            "in": "query",
            "description": "The total instructional days during the academic week.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_academicWeek"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAcademicWeek",
        "requestBody": {
          "description": "The JSON representation of the \"academicWeek\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicWeek"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicWeek"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicWeeks/{id}": {
      "get": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAcademicWeeksById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_academicWeek"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAcademicWeek",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"academicWeek\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_academicWeek"
              }
            }
          },
          "required": true,
          "x-bodyName": "academicWeek"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAcademicWeekById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicWeeks/deletes": {
      "get": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesAcademicWeeks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_academicWeekDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/academicWeeks/keyChanges": {
      "get": {
        "tags": [
          "academicWeeks"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesAcademicWeeks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_academicWeekKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountabilityRatings": {
      "get": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAccountabilityRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "ratingTitle",
            "in": "query",
            "description": "The title of the rating.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The school year for which the accountability rating is assessed.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rating",
            "in": "query",
            "description": "An accountability rating level, designation, or assessment.",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "name": "ratingDate",
            "in": "query",
            "description": "The date the rating was awarded.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ratingOrganization",
            "in": "query",
            "description": "The organization that assessed the rating.",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "name": "ratingProgram",
            "in": "query",
            "description": "The program associated with the accountability rating (e.g., NCLB, AEIS).",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_accountabilityRating"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAccountabilityRating",
        "requestBody": {
          "description": "The JSON representation of the \"accountabilityRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accountabilityRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "accountabilityRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountabilityRatings/{id}": {
      "get": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAccountabilityRatingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_accountabilityRating"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAccountabilityRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"accountabilityRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_accountabilityRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "accountabilityRating"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAccountabilityRatingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountabilityRatings/deletes": {
      "get": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesAccountabilityRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_accountabilityRatingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/accountabilityRatings/keyChanges": {
      "get": {
        "tags": [
          "accountabilityRatings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesAccountabilityRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_accountabilityRatingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessments": {
      "get": {
        "tags": [
          "assessments"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assessmentCategoryDescriptor",
            "in": "query",
            "description": "The category of an assessment based on format and content.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "adaptiveAssessment",
            "in": "query",
            "description": "Indicates that the assessment is adaptive.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "assessmentFamily",
            "in": "query",
            "description": "The assessment family this assessment is a member of.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "assessmentForm",
            "in": "query",
            "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "assessmentTitle",
            "in": "query",
            "description": "The title or name of the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "assessmentVersion",
            "in": "query",
            "description": "The version identifier for the assessment.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxRawScore",
            "in": "query",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "nomenclature",
            "in": "query",
            "description": "Reflects the specific nomenclature used for assessment.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "revisionDate",
            "in": "query",
            "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessment"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessments"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessment",
        "requestBody": {
          "description": "The JSON representation of the \"assessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessments/{id}": {
      "get": {
        "tags": [
          "assessments"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessment"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessments"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessment"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessments"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessments/deletes": {
      "get": {
        "tags": [
          "assessments"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessments/keyChanges": {
      "get": {
        "tags": [
          "assessments"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItems": {
      "get": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "identificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentItemCategoryDescriptor",
            "in": "query",
            "description": "Category or type of the assessment item.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "assessmentItemURI",
            "in": "query",
            "description": "The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "expectedTimeAssessed",
            "in": "query",
            "description": "The duration of time allotted for the assessment item.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemText",
            "in": "query",
            "description": "The text of the item.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "maxRawScore",
            "in": "query",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "nomenclature",
            "in": "query",
            "description": "Reflects the specific nomenclature used for assessment item.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentItem"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentItem",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItem\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItem"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItems/{id}": {
      "get": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentItemsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentItem"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentItem\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentItem"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItems/deletes": {
      "get": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesAssessmentItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentItemDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentItems/keyChanges": {
      "get": {
        "tags": [
          "assessmentItems"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesAssessmentItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentItemKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards": {
      "get": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getAssessmentScoreRangeLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "scoreRangeId",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "identificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "assessmentReportingMethodDescriptor",
            "in": "query",
            "description": "The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maximumScore",
            "in": "query",
            "description": "The maximum score in the score range.",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "name": "minimumScore",
            "in": "query",
            "description": "The minimum score in the score range.",
            "schema": {
              "maxLength": 35,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postAssessmentScoreRangeLearningStandard",
        "requestBody": {
          "description": "The JSON representation of the \"assessmentScoreRangeLearningStandard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentScoreRangeLearningStandard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards/{id}": {
      "get": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getAssessmentScoreRangeLearningStandardsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putAssessmentScoreRangeLearningStandard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"assessmentScoreRangeLearningStandard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
              }
            }
          },
          "required": true,
          "x-bodyName": "assessmentScoreRangeLearningStandard"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteAssessmentScoreRangeLearningStandardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards/deletes": {
      "get": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesAssessmentScoreRangeLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentScoreRangeLearningStandardDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/assessmentScoreRangeLearningStandards/keyChanges": {
      "get": {
        "tags": [
          "assessmentScoreRangeLearningStandards"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesAssessmentScoreRangeLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_assessmentScoreRangeLearningStandardKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/balanceSheetDimensions": {
      "get": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBalanceSheetDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account balance sheet dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account balance sheet dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_balanceSheetDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBalanceSheetDimension",
        "requestBody": {
          "description": "The JSON representation of the \"balanceSheetDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_balanceSheetDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "balanceSheetDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/balanceSheetDimensions/{id}": {
      "get": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBalanceSheetDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_balanceSheetDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBalanceSheetDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"balanceSheetDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_balanceSheetDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "balanceSheetDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteBalanceSheetDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/balanceSheetDimensions/deletes": {
      "get": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesBalanceSheetDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_balanceSheetDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/balanceSheetDimensions/keyChanges": {
      "get": {
        "tags": [
          "balanceSheetDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesBalanceSheetDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_balanceSheetDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/bellSchedules": {
      "get": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getBellSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "bellScheduleName",
            "in": "query",
            "description": "Name or title of the bell schedule.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "alternateDayName",
            "in": "query",
            "description": "An alternate name for the day (e.g., Red, Blue).",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "An indication of the time of day the bell schedule ends.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "An indication of the time of day the bell schedule begins.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalInstructionalTime",
            "in": "query",
            "description": "The total instructional time in minutes per day for the bell schedule.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_bellSchedule"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postBellSchedule",
        "requestBody": {
          "description": "The JSON representation of the \"bellSchedule\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_bellSchedule"
              }
            }
          },
          "required": true,
          "x-bodyName": "bellSchedule"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/bellSchedules/{id}": {
      "get": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getBellSchedulesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_bellSchedule"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putBellSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"bellSchedule\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_bellSchedule"
              }
            }
          },
          "required": true,
          "x-bodyName": "bellSchedule"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteBellScheduleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/bellSchedules/deletes": {
      "get": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesBellSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_bellScheduleDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/bellSchedules/keyChanges": {
      "get": {
        "tags": [
          "bellSchedules"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesBellSchedules",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_bellScheduleKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendars": {
      "get": {
        "tags": [
          "calendars"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendars",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "calendarCode",
            "in": "query",
            "description": "The identifier for the calendar.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year associated with the calendar.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "calendarTypeDescriptor",
            "in": "query",
            "description": "Indicates the type of calendar.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_calendar"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "calendars"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendar",
        "requestBody": {
          "description": "The JSON representation of the \"calendar\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendar"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendar"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendars/{id}": {
      "get": {
        "tags": [
          "calendars"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_calendar"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "calendars"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"calendar\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendar"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendar"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "calendars"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendars/deletes": {
      "get": {
        "tags": [
          "calendars"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCalendars",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_calendarDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendars/keyChanges": {
      "get": {
        "tags": [
          "calendars"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCalendars",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_calendarKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarDates": {
      "get": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCalendarDates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The month, day, and year of the calendar event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "calendarCode",
            "in": "query",
            "description": "The identifier for the calendar.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year associated with the calendar.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_calendarDate"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCalendarDate",
        "requestBody": {
          "description": "The JSON representation of the \"calendarDate\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarDate"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarDate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarDates/{id}": {
      "get": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCalendarDatesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_calendarDate"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCalendarDate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"calendarDate\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_calendarDate"
              }
            }
          },
          "required": true,
          "x-bodyName": "calendarDate"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCalendarDateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarDates/deletes": {
      "get": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCalendarDates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_calendarDateDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/calendarDates/keyChanges": {
      "get": {
        "tags": [
          "calendarDates"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCalendarDates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_calendarDateKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidates": {
      "get": {
        "tags": [
          "candidates"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCandidates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "candidateIdentifier",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthCountryDescriptor",
            "in": "query",
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "englishLanguageExamDescriptor",
            "in": "query",
            "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "genderDescriptor",
            "in": "query",
            "description": "The gender of the candidate.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "limitedEnglishProficiencyDescriptor",
            "in": "query",
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sexDescriptor",
            "in": "query",
            "description": "The sex of the candidate.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthSexDescriptor",
            "in": "query",
            "description": "A person's sex at birth.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthStateAbbreviationDescriptor",
            "in": "query",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthCity",
            "in": "query",
            "description": "The city the student was born in.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "birthDate",
            "in": "query",
            "description": "The month, day, and year on which an individual was born.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "birthInternationalProvince",
            "in": "query",
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "name": "dateEnteredUS",
            "in": "query",
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "displacementStatus",
            "in": "query",
            "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "economicDisadvantaged",
            "in": "query",
            "description": "An indication of inadequate financial condition of an individual's family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstGenerationStudent",
            "in": "query",
            "description": "Indicator of whether individual is a first generation college student.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "generationCodeSuffix",
            "in": "query",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "hispanicLatinoEthnicity",
            "in": "query",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastSurname",
            "in": "query",
            "description": "The name borne in common by members of a family.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "maidenName",
            "in": "query",
            "description": "The individual's maiden name.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "multipleBirthStatus",
            "in": "query",
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "personalTitlePrefix",
            "in": "query",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "preferredFirstName",
            "in": "query",
            "description": "The first name the individual prefers, if different from their legal first name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "preferredLastSurname",
            "in": "query",
            "description": "The last name the individual prefers, if different from their legal last name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_candidate"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "candidates"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCandidate",
        "requestBody": {
          "description": "The JSON representation of the \"candidate\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_candidate"
              }
            }
          },
          "required": true,
          "x-bodyName": "candidate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidates/{id}": {
      "get": {
        "tags": [
          "candidates"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCandidatesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_candidate"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "candidates"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCandidate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"candidate\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_candidate"
              }
            }
          },
          "required": true,
          "x-bodyName": "candidate"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "candidates"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCandidateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidates/deletes": {
      "get": {
        "tags": [
          "candidates"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCandidates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_candidateDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidates/keyChanges": {
      "get": {
        "tags": [
          "candidates"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCandidates",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_candidateKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations": {
      "get": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCandidateEducatorPreparationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The begin date for the association.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "candidateIdentifier",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The name of the Educator Preparation Program.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eppProgramPathwayDescriptor",
            "in": "query",
            "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "reasonExitedDescriptor",
            "in": "query",
            "description": "Reason exited for the association.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the association.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCandidateEducatorPreparationProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"candidateEducatorPreparationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "candidateEducatorPreparationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations/{id}": {
      "get": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCandidateEducatorPreparationProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCandidateEducatorPreparationProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"candidateEducatorPreparationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "candidateEducatorPreparationProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCandidateEducatorPreparationProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations/deletes": {
      "get": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCandidateEducatorPreparationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/candidateEducatorPreparationProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "candidateEducatorPreparationProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCandidateEducatorPreparationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/chartOfAccounts": {
      "get": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getChartOfAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "balanceSheetCode",
            "in": "query",
            "description": "The code representation of the account balance sheet dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "functionCode",
            "in": "query",
            "description": "The code representation of the account function dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "fundCode",
            "in": "query",
            "description": "The code representation of the account fund dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "objectCode",
            "in": "query",
            "description": "The code representation of the account object dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "operationalUnitCode",
            "in": "query",
            "description": "The code representation of the account operational unit dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "programCode",
            "in": "query",
            "description": "The code representation of the account program dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "projectCode",
            "in": "query",
            "description": "The code representation of the account project dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "sourceCode",
            "in": "query",
            "description": "The code representation of the account source dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "accountTypeDescriptor",
            "in": "query",
            "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "A descriptive name for the account.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_chartOfAccount"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postChartOfAccount",
        "requestBody": {
          "description": "The JSON representation of the \"chartOfAccount\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_chartOfAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "chartOfAccount"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/chartOfAccounts/{id}": {
      "get": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getChartOfAccountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_chartOfAccount"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putChartOfAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"chartOfAccount\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_chartOfAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "chartOfAccount"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteChartOfAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/chartOfAccounts/deletes": {
      "get": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesChartOfAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_chartOfAccountDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/chartOfAccounts/keyChanges": {
      "get": {
        "tags": [
          "chartOfAccounts"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesChartOfAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_chartOfAccountKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classPeriods": {
      "get": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getClassPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "classPeriodName",
            "in": "query",
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "officialAttendancePeriod",
            "in": "query",
            "description": "Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_classPeriod"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postClassPeriod",
        "requestBody": {
          "description": "The JSON representation of the \"classPeriod\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_classPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "classPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classPeriods/{id}": {
      "get": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getClassPeriodsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_classPeriod"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putClassPeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"classPeriod\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_classPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "classPeriod"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteClassPeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classPeriods/deletes": {
      "get": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesClassPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_classPeriodDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/classPeriods/keyChanges": {
      "get": {
        "tags": [
          "classPeriods"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesClassPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_classPeriodKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohorts": {
      "get": {
        "tags": [
          "cohorts"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCohorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "cohortIdentifier",
            "in": "query",
            "description": "The name or ID for the cohort.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "academicSubjectDescriptor",
            "in": "query",
            "description": "The academic subject associated with an academic intervention.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "cohortScopeDescriptor",
            "in": "query",
            "description": "The scope of cohort (e.g., school, district, classroom).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "cohortTypeDescriptor",
            "in": "query",
            "description": "The type of cohort (e.g., academic intervention, classroom breakout).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "cohortDescription",
            "in": "query",
            "description": "The description of the cohort and its purpose.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_cohort"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "cohorts"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCohort",
        "requestBody": {
          "description": "The JSON representation of the \"cohort\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohort"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohort"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohorts/{id}": {
      "get": {
        "tags": [
          "cohorts"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCohortsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_cohort"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "cohorts"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCohort",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"cohort\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_cohort"
              }
            }
          },
          "required": true,
          "x-bodyName": "cohort"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "cohorts"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCohortById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohorts/deletes": {
      "get": {
        "tags": [
          "cohorts"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCohorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_cohortDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/cohorts/keyChanges": {
      "get": {
        "tags": [
          "cohorts"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCohorts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_cohortKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityOrganizations": {
      "get": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "communityOrganizationId",
            "in": "query",
            "description": "The identifier assigned to a community organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_communityOrganization"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityOrganization",
        "requestBody": {
          "description": "The JSON representation of the \"communityOrganization\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityOrganization"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityOrganization"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityOrganizations/{id}": {
      "get": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityOrganizationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_communityOrganization"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"communityOrganization\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityOrganization"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityOrganization"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityOrganizations/deletes": {
      "get": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCommunityOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityOrganizationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityOrganizations/keyChanges": {
      "get": {
        "tags": [
          "communityOrganizations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCommunityOrganizations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityOrganizationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviders": {
      "get": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "communityProviderId",
            "in": "query",
            "description": "The identifier assigned to a community provider.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "communityOrganizationId",
            "in": "query",
            "description": "The identifier assigned to a community organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "providerCategoryDescriptor",
            "in": "query",
            "description": "Indicates the category of the provider.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "providerProfitabilityDescriptor",
            "in": "query",
            "description": "Indicates the profitability status of the provider.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "providerStatusDescriptor",
            "in": "query",
            "description": "Indicates the status of the provider.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "licenseExemptIndicator",
            "in": "query",
            "description": "An indication of whether the provider is exempt from having a license.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "schoolIndicator",
            "in": "query",
            "description": "An indication of whether the community provider is a school.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_communityProvider"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityProvider",
        "requestBody": {
          "description": "The JSON representation of the \"communityProvider\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityProvider"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityProvider"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviders/{id}": {
      "get": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityProvidersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_communityProvider"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"communityProvider\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityProvider"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityProvider"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityProviderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviders/deletes": {
      "get": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCommunityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviders/keyChanges": {
      "get": {
        "tags": [
          "communityProviders"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCommunityProviders",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviderLicenses": {
      "get": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCommunityProviderLicenses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "licenseIdentifier",
            "in": "query",
            "description": "The unique identifier issued by the licensing organization.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "licensingOrganization",
            "in": "query",
            "description": "The organization issuing the license.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "communityProviderId",
            "in": "query",
            "description": "The identifier assigned to a community provider.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "licenseStatusDescriptor",
            "in": "query",
            "description": "An indication of the status of the license.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "licenseTypeDescriptor",
            "in": "query",
            "description": "An indication of the category of the license.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "authorizedFacilityCapacity",
            "in": "query",
            "description": "The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licenseEffectiveDate",
            "in": "query",
            "description": "The month, day, and year on which a license is active or becomes effective.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "licenseExpirationDate",
            "in": "query",
            "description": "The month, day, and year on which a license will expire.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "licenseIssueDate",
            "in": "query",
            "description": "The month, day, and year on which an active license was issued.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "oldestAgeAuthorizedToServe",
            "in": "query",
            "description": "The oldest age of children a provider is authorized or licensed to serve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "youngestAgeAuthorizedToServe",
            "in": "query",
            "description": "The youngest age of children a provider is authorized or licensed to serve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_communityProviderLicense"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCommunityProviderLicense",
        "requestBody": {
          "description": "The JSON representation of the \"communityProviderLicense\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityProviderLicense"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityProviderLicense"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviderLicenses/{id}": {
      "get": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCommunityProviderLicensesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_communityProviderLicense"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCommunityProviderLicense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"communityProviderLicense\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_communityProviderLicense"
              }
            }
          },
          "required": true,
          "x-bodyName": "communityProviderLicense"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCommunityProviderLicenseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviderLicenses/deletes": {
      "get": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCommunityProviderLicenses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderLicenseDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/communityProviderLicenses/keyChanges": {
      "get": {
        "tags": [
          "communityProviderLicenses"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCommunityProviderLicenses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderLicenseKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyObjectives": {
      "get": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "objectiveGradeLevelDescriptor",
            "in": "query",
            "description": "The grade level for which the competency objective is targeted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "objective",
            "in": "query",
            "description": "The designated title of the competency objective.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "competencyObjectiveId",
            "in": "query",
            "description": "The Identifier for the competency objective.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the student competency objective.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "successCriteria",
            "in": "query",
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_competencyObjective"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCompetencyObjective",
        "requestBody": {
          "description": "The JSON representation of the \"competencyObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_competencyObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "competencyObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyObjectives/{id}": {
      "get": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCompetencyObjectivesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_competencyObjective"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCompetencyObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"competencyObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_competencyObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "competencyObjective"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCompetencyObjectiveById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyObjectives/deletes": {
      "get": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_competencyObjectiveDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/competencyObjectives/keyChanges": {
      "get": {
        "tags": [
          "competencyObjectives"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_competencyObjectiveKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "contactUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a contact.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "highestCompletedLevelOfEducationDescriptor",
            "in": "query",
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sexDescriptor",
            "in": "query",
            "description": "A person's birth sex.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "genderIdentity",
            "in": "query",
            "description": "The gender the contact identifies themselves as.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "generationCodeSuffix",
            "in": "query",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastSurname",
            "in": "query",
            "description": "The name borne in common by members of a family.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "loginId",
            "in": "query",
            "description": "The login ID for the user; used for security access control interface.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "maidenName",
            "in": "query",
            "description": "The individual's maiden name.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "personalTitlePrefix",
            "in": "query",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "preferredFirstName",
            "in": "query",
            "description": "The first name the individual prefers, if different from their legal first name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "preferredLastSurname",
            "in": "query",
            "description": "The last name the individual prefers, if different from their legal last name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_contact"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postContact",
        "requestBody": {
          "description": "The JSON representation of the \"contact\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contact"
              }
            }
          },
          "required": true,
          "x-bodyName": "contact"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contacts/{id}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getContactsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_contact"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "contacts"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"contact\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_contact"
              }
            }
          },
          "required": true,
          "x-bodyName": "contact"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contacts/deletes": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_contactDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/contacts/keyChanges": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_contactKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "courseCode",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a course.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "careerPathwayDescriptor",
            "in": "query",
            "description": "Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "courseDefinedByDescriptor",
            "in": "query",
            "description": "Specifies whether the course was defined by the SEA, LEA, School, or national organization.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "courseGPAApplicabilityDescriptor",
            "in": "query",
            "description": "An indicator of whether or not the course being described is included in the computation of the student's grade point average, and if so, if it is weighted differently from regular courses.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "minimumAvailableCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "maximumAvailableCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "courseDescription",
            "in": "query",
            "description": "A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "courseTitle",
            "in": "query",
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "dateCourseAdopted",
            "in": "query",
            "description": "Date the course was adopted by the education agency.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "highSchoolCourseRequirement",
            "in": "query",
            "description": "An indication that this course may satisfy high school graduation requirements in the course's subject area.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxCompletionsForCredit",
            "in": "query",
            "description": "Designates how many times the course may be taken with credit received by the student.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maximumAvailableCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maximumAvailableCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minimumAvailableCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minimumAvailableCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "numberOfParts",
            "in": "query",
            "description": "The number of parts identified for a course.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeRequiredForCompletion",
            "in": "query",
            "description": "The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_course"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourse",
        "requestBody": {
          "description": "The JSON representation of the \"course\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_course"
              }
            }
          },
          "required": true,
          "x-bodyName": "course"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courses/{id}": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCoursesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_course"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courses"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"course\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_course"
              }
            }
          },
          "required": true,
          "x-bodyName": "course"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courses"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courses/deletes": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCourses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courses/keyChanges": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCourses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseOfferings": {
      "get": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseOfferings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "courseCode",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a course.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionalTimePlanned",
            "in": "query",
            "description": "The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "localCourseTitle",
            "in": "query",
            "description": "The descriptive name given to a course of study offered in the school, if different from the course title.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseOffering"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseOffering",
        "requestBody": {
          "description": "The JSON representation of the \"courseOffering\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseOffering"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseOffering"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseOfferings/{id}": {
      "get": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseOfferingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseOffering"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseOffering",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseOffering\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseOffering"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseOffering"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseOfferingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseOfferings/deletes": {
      "get": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCourseOfferings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseOfferingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseOfferings/keyChanges": {
      "get": {
        "tags": [
          "courseOfferings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCourseOfferings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseOfferingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseTranscripts": {
      "get": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCourseTranscripts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "courseAttemptResultDescriptor",
            "in": "query",
            "description": "The result from the student's attempt to take the course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "courseCode",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a course.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "courseEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "externalEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "responsibleTeacherStaffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a responsibleteacherstaff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "courseRepeatCodeDescriptor",
            "in": "query",
            "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student's academic grade average.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "attemptedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "earnedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "whenTakenGradeLevelDescriptor",
            "in": "query",
            "description": "Student's grade level at time of course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "methodCreditEarnedDescriptor",
            "in": "query",
            "description": "The method the credits were earned.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "alternativeCourseTitle",
            "in": "query",
            "description": "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "assigningOrganizationIdentificationCode",
            "in": "query",
            "description": "The organization code or name assigning the course identification code.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "attemptedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "attemptedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "courseCatalogURL",
            "in": "query",
            "description": "The URL for the course catalog that defines the course identification code.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "courseTitle",
            "in": "query",
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "earnedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "earnedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "externalEducationOrganizationNameOfInstitution",
            "in": "query",
            "description": "Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "finalLetterGradeEarned",
            "in": "query",
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "finalNumericGradeEarned",
            "in": "query",
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_courseTranscript"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCourseTranscript",
        "requestBody": {
          "description": "The JSON representation of the \"courseTranscript\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseTranscript"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseTranscript"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseTranscripts/{id}": {
      "get": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCourseTranscriptsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_courseTranscript"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCourseTranscript",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"courseTranscript\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_courseTranscript"
              }
            }
          },
          "required": true,
          "x-bodyName": "courseTranscript"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCourseTranscriptById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseTranscripts/deletes": {
      "get": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCourseTranscripts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseTranscriptDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/courseTranscripts/keyChanges": {
      "get": {
        "tags": [
          "courseTranscripts"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCourseTranscripts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_courseTranscriptKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentials": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "stateOfIssueStateAbbreviationDescriptor",
            "in": "query",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "credentialIdentifier",
            "in": "query",
            "description": "Identifier or serial number assigned to the credential.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "credentialFieldDescriptor",
            "in": "query",
            "description": "The field of certification for the certificate (e.g., Mathematics, Music).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "credentialTypeDescriptor",
            "in": "query",
            "description": "An indication of the category of credential an individual holds.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "teachingCredentialBasisDescriptor",
            "in": "query",
            "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "teachingCredentialDescriptor",
            "in": "query",
            "description": "An indication of the category of a legal document giving authorization to perform teaching assignment services.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "effectiveDate",
            "in": "query",
            "description": "The year, month and day on which an active credential held by an individual was issued.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expirationDate",
            "in": "query",
            "description": "The month, day, and year on which an active credential held by an individual will expire.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuanceDate",
            "in": "query",
            "description": "The month, day, and year on which an active credential was issued to an individual.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the credential.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_credential"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postCredential",
        "requestBody": {
          "description": "The JSON representation of the \"credential\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credential"
              }
            }
          },
          "required": true,
          "x-bodyName": "credential"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentials/{id}": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getCredentialsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_credential"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putCredential",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"credential\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_credential"
              }
            }
          },
          "required": true,
          "x-bodyName": "credential"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteCredentialById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentials/deletes": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_credentialDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/credentials/keyChanges": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_credentialKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/descriptorMappings": {
      "get": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDescriptorMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "mappedNamespace",
            "in": "query",
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "mappedValue",
            "in": "query",
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "value",
            "in": "query",
            "description": "The descriptor value that is being mapped to another value.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_descriptorMapping"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDescriptorMapping",
        "requestBody": {
          "description": "The JSON representation of the \"descriptorMapping\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_descriptorMapping"
              }
            }
          },
          "required": true,
          "x-bodyName": "descriptorMapping"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/descriptorMappings/{id}": {
      "get": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDescriptorMappingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_descriptorMapping"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDescriptorMapping",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"descriptorMapping\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_descriptorMapping"
              }
            }
          },
          "required": true,
          "x-bodyName": "descriptorMapping"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDescriptorMappingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/descriptorMappings/deletes": {
      "get": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesDescriptorMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_descriptorMappingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/descriptorMappings/keyChanges": {
      "get": {
        "tags": [
          "descriptorMappings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesDescriptorMappings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_descriptorMappingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActions": {
      "get": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineActions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "disciplineActionIdentifier",
            "in": "query",
            "description": "Identifier assigned by the education organization to the discipline action.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "disciplineDate",
            "in": "query",
            "description": "The date of the discipline action.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "responsibilitySchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assignmentSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "disciplineActionLengthDifferenceReasonDescriptor",
            "in": "query",
            "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student's disciplinary assignment.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "actualDisciplineActionLength",
            "in": "query",
            "description": "Indicates the actual length in school days of a student's disciplinary assignment.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "disciplineActionLength",
            "in": "query",
            "description": "The length of time in school days for the discipline action (e.g. removal, detention), if applicable.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iepPlacementMeetingIndicator",
            "in": "query",
            "description": "An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student's Individualized Education Program (IEP) team to determine appropriate placement.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "relatedToZeroTolerancePolicy",
            "in": "query",
            "description": "An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disciplineAction"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineAction",
        "requestBody": {
          "description": "The JSON representation of the \"disciplineAction\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineAction"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActions/{id}": {
      "get": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineActionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disciplineAction"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineAction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disciplineAction\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineAction"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineActionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActions/deletes": {
      "get": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesDisciplineActions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_disciplineActionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineActions/keyChanges": {
      "get": {
        "tags": [
          "disciplineActions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesDisciplineActions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_disciplineActionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidents": {
      "get": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getDisciplineIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "incidentIdentifier",
            "in": "query",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "incidentLocationDescriptor",
            "in": "query",
            "description": "Identifies where the discipline incident occurred and whether or not it occurred on school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "reporterDescriptionDescriptor",
            "in": "query",
            "description": "Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., \"Counselor\" rather than \"Professional Staff\").",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "caseNumber",
            "in": "query",
            "description": "The case number assigned to the DisciplineIncident by law enforcement or other organization.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "incidentCost",
            "in": "query",
            "description": "The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "incidentDate",
            "in": "query",
            "description": "The month, day, and year on which the discipline incident occurred.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "incidentDescription",
            "in": "query",
            "description": "The description for an incident.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "incidentTime",
            "in": "query",
            "description": "An indication of the time of day the incident took place.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportedToLawEnforcement",
            "in": "query",
            "description": "Indicator of whether the incident was reported to law enforcement.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "reporterName",
            "in": "query",
            "description": "Identifies the reporter of the discipline incident by name.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_disciplineIncident"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postDisciplineIncident",
        "requestBody": {
          "description": "The JSON representation of the \"disciplineIncident\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineIncident"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineIncident"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidents/{id}": {
      "get": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getDisciplineIncidentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_disciplineIncident"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putDisciplineIncident",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"disciplineIncident\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_disciplineIncident"
              }
            }
          },
          "required": true,
          "x-bodyName": "disciplineIncident"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteDisciplineIncidentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidents/deletes": {
      "get": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesDisciplineIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_disciplineIncidentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/disciplineIncidents/keyChanges": {
      "get": {
        "tags": [
          "disciplineIncidents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesDisciplineIncidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_disciplineIncidentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationContents": {
      "get": {
        "tags": [
          "educationContents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "contentIdentifier",
            "in": "query",
            "description": "A unique identifier for the education content.",
            "schema": {
              "maxLength": 225,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "learningStandardId",
            "in": "query",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "contentClassDescriptor",
            "in": "query",
            "description": "The predominate type or kind characterizing the learning resource.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "costRateDescriptor",
            "in": "query",
            "description": "The rate by which the cost applies.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "interactivityStyleDescriptor",
            "in": "query",
            "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "additionalAuthorsIndicator",
            "in": "query",
            "description": "Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation \"et al\".",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "An amount that has to be paid or spent to buy or obtain the education content.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "An extended written representation of the education content.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "learningResourceMetadataURI",
            "in": "query",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the education content.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "publicationDate",
            "in": "query",
            "description": "The date on which this content was first published.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "publicationYear",
            "in": "query",
            "description": "The year at which this content was first published.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "publisher",
            "in": "query",
            "description": "The organization credited with publishing the resource.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "shortDescription",
            "in": "query",
            "description": "A short description or name of the entity.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "timeRequired",
            "in": "query",
            "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "useRightsURL",
            "in": "query",
            "description": "The URL where the owner specifies permissions for using the resource.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version identifier for the content.",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationContent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationContents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationContent",
        "requestBody": {
          "description": "The JSON representation of the \"educationContent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationContent"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationContent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationContents/{id}": {
      "get": {
        "tags": [
          "educationContents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationContentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationContent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationContents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationContent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationContent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationContent"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationContent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationContents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationContentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationContents/deletes": {
      "get": {
        "tags": [
          "educationContents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationContentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationContents/keyChanges": {
      "get": {
        "tags": [
          "educationContents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationContents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationContentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations": {
      "get": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationInterventionPrescriptionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "interventionPrescriptionEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "interventionPrescriptionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The begin date of the period during which the intervention prescription is available.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the period during which the intervention prescription is available.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationInterventionPrescriptionAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationInterventionPrescriptionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationInterventionPrescriptionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations/{id}": {
      "get": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationInterventionPrescriptionAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationInterventionPrescriptionAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationInterventionPrescriptionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationInterventionPrescriptionAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationInterventionPrescriptionAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations/deletes": {
      "get": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationOrganizationInterventionPrescriptionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationInterventionPrescriptionAssociations/keyChanges": {
      "get": {
        "tags": [
          "educationOrganizationInterventionPrescriptionAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationOrganizationInterventionPrescriptionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworks": {
      "get": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationNetworks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationNetworkId",
            "in": "query",
            "description": "The identifier assigned to a network of education organizations.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "networkPurposeDescriptor",
            "in": "query",
            "description": "The purpose(s) of the network (e.g., shared services, collective procurement).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationNetwork"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationNetwork",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationNetwork\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationNetwork"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationNetwork"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworks/{id}": {
      "get": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationNetworksById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationNetwork"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationNetwork",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationNetwork\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationNetwork"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationNetwork"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationNetworkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworks/deletes": {
      "get": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationOrganizationNetworks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworks/keyChanges": {
      "get": {
        "tags": [
          "educationOrganizationNetworks"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationOrganizationNetworks",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations": {
      "get": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationNetworkAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "memberEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationNetworkId",
            "in": "query",
            "description": "The identifier assigned to a network of education organizations.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The date on which the education organization joined this network.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The date on which the education organization left this network.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationNetworkAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationNetworkAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationNetworkAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations/{id}": {
      "get": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationNetworkAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationNetworkAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationNetworkAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationNetworkAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationNetworkAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations/deletes": {
      "get": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationOrganizationNetworkAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationNetworkAssociations/keyChanges": {
      "get": {
        "tags": [
          "educationOrganizationNetworkAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationOrganizationNetworkAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations": {
      "get": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationOrganizationPeerAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "peerEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationOrganizationPeerAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationOrganizationPeerAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationPeerAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationPeerAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationPeerAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations/{id}": {
      "get": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationOrganizationPeerAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationOrganizationPeerAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationOrganizationPeerAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationOrganizationPeerAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationOrganizationPeerAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationOrganizationPeerAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationOrganizationPeerAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations/deletes": {
      "get": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationOrganizationPeerAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationPeerAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationOrganizationPeerAssociations/keyChanges": {
      "get": {
        "tags": [
          "educationOrganizationPeerAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationOrganizationPeerAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationPeerAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationServiceCenters": {
      "get": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducationServiceCenters",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationServiceCenterId",
            "in": "query",
            "description": "The identifier assigned to an education service center.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "stateEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a state education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_educationServiceCenter"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducationServiceCenter",
        "requestBody": {
          "description": "The JSON representation of the \"educationServiceCenter\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationServiceCenter"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationServiceCenter"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationServiceCenters/{id}": {
      "get": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducationServiceCentersById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_educationServiceCenter"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducationServiceCenter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educationServiceCenter\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_educationServiceCenter"
              }
            }
          },
          "required": true,
          "x-bodyName": "educationServiceCenter"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducationServiceCenterById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationServiceCenters/deletes": {
      "get": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducationServiceCenters",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationServiceCenterDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/educationServiceCenters/keyChanges": {
      "get": {
        "tags": [
          "educationServiceCenters"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducationServiceCenters",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_educationServiceCenterKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/educatorPreparationPrograms": {
      "get": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEducatorPreparationPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The name of the Educator Preparation Program.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accreditationStatusDescriptor",
            "in": "query",
            "description": "The current accreditation status of the Educator Preparation Program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_educatorPreparationProgram"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEducatorPreparationProgram",
        "requestBody": {
          "description": "The JSON representation of the \"educatorPreparationProgram\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_educatorPreparationProgram"
              }
            }
          },
          "required": true,
          "x-bodyName": "educatorPreparationProgram"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/educatorPreparationPrograms/{id}": {
      "get": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEducatorPreparationProgramsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_educatorPreparationProgram"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEducatorPreparationProgram",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"educatorPreparationProgram\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_educatorPreparationProgram"
              }
            }
          },
          "required": true,
          "x-bodyName": "educatorPreparationProgram"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEducatorPreparationProgramById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/educatorPreparationPrograms/deletes": {
      "get": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEducatorPreparationPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_educatorPreparationProgramDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/educatorPreparationPrograms/keyChanges": {
      "get": {
        "tags": [
          "educatorPreparationPrograms"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEducatorPreparationPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_educatorPreparationProgramKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluations": {
      "get": {
        "tags": [
          "evaluations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTypeDescriptor",
            "in": "query",
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationDescription",
            "in": "query",
            "description": "The long description of the Evaluation.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interRaterReliabilityScore",
            "in": "query",
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the evaluation.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluation",
        "requestBody": {
          "description": "The JSON representation of the \"evaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluations/{id}": {
      "get": {
        "tags": [
          "evaluations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluations/deletes": {
      "get": {
        "tags": [
          "evaluations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluations/keyChanges": {
      "get": {
        "tags": [
          "evaluations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElements": {
      "get": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationElementTitle",
            "in": "query",
            "description": "The name or title of the evaluation element.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the evaluation Objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTypeDescriptor",
            "in": "query",
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the evaluation element.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "The sort order of this Evaluation Element.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluationElement"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationElement",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationElement\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationElement"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationElement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElements/{id}": {
      "get": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationElementsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluationElement"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationElement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationElement\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationElement"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationElement"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationElementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElements/deletes": {
      "get": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElements/keyChanges": {
      "get": {
        "tags": [
          "evaluationElements"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElementRatings": {
      "get": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationElementRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationElementTitle",
            "in": "query",
            "description": "The name or title of the evaluation element.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the evaluation Objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationDate",
            "in": "query",
            "description": "The date for the person's evaluation.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationElementRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved based upon the rating or score.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "areaOfRefinement",
            "in": "query",
            "description": "Area identified for person to refine or improve as part of the evaluation.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "areaOfReinforcement",
            "in": "query",
            "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Any comments about the performance evaluation to be captured.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "feedback",
            "in": "query",
            "description": "Feedback provided to the evaluated person.",
            "schema": {
              "maxLength": 2048,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluationElementRating"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationElementRating",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationElementRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationElementRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationElementRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElementRatings/{id}": {
      "get": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationElementRatingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluationElementRating"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationElementRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationElementRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationElementRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationElementRating"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationElementRatingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElementRatings/deletes": {
      "get": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationElementRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementRatingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationElementRatings/keyChanges": {
      "get": {
        "tags": [
          "evaluationElementRatings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationElementRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementRatingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectives": {
      "get": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the evaluation Objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTypeDescriptor",
            "in": "query",
            "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationObjectiveDescription",
            "in": "query",
            "description": "The long description of the Evaluation Objective.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the evaluation Objective.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "The sort order of this Evaluation Objective.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluationObjective"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationObjective",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectives/{id}": {
      "get": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationObjectivesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluationObjective"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationObjective"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationObjectiveById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectives/deletes": {
      "get": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectives/keyChanges": {
      "get": {
        "tags": [
          "evaluationObjectives"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectiveRatings": {
      "get": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationObjectiveRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the evaluation Objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationDate",
            "in": "query",
            "description": "The date for the person's evaluation.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "objectiveRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved based upon the rating or score.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Any comments about the performance evaluation to be captured.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluationObjectiveRating"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationObjectiveRating",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationObjectiveRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationObjectiveRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationObjectiveRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectiveRatings/{id}": {
      "get": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationObjectiveRatingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluationObjectiveRating"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationObjectiveRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationObjectiveRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationObjectiveRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationObjectiveRating"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationObjectiveRatingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectiveRatings/deletes": {
      "get": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationObjectiveRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveRatingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationObjectiveRatings/keyChanges": {
      "get": {
        "tags": [
          "evaluationObjectiveRatings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationObjectiveRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveRatingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationRatings": {
      "get": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationDate",
            "in": "query",
            "description": "The date for the person's evaluation.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "evaluationRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved based upon the rating or score.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationRatingStatusDescriptor",
            "in": "query",
            "description": "The Status of the poerformance evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_evaluationRating"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationRating",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationRatings/{id}": {
      "get": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationRatingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_evaluationRating"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_evaluationRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationRating"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationRatingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationRatings/deletes": {
      "get": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationRatingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/evaluationRatings/keyChanges": {
      "get": {
        "tags": [
          "evaluationRatings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationRatingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationRubricDimensions": {
      "get": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getEvaluationRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationRubricRating",
            "in": "query",
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationElementTitle",
            "in": "query",
            "description": "The name or title of the program evaluation element.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationPeriodDescriptor",
            "in": "query",
            "description": "The name of the period for the program evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the student program evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of program evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationRubricRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved for the evaluation rubric dimension.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationCriterionDescription",
            "in": "query",
            "description": "The evaluation criterion description for the evaluation rubric dimension.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rubricDimensionSortOrder",
            "in": "query",
            "description": "The sort order of the rubric dimension.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_evaluationRubricDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postEvaluationRubricDimension",
        "requestBody": {
          "description": "The JSON representation of the \"evaluationRubricDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_evaluationRubricDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationRubricDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationRubricDimensions/{id}": {
      "get": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getEvaluationRubricDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_evaluationRubricDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putEvaluationRubricDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"evaluationRubricDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_evaluationRubricDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "evaluationRubricDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteEvaluationRubricDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationRubricDimensions/deletes": {
      "get": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesEvaluationRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_evaluationRubricDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/evaluationRubricDimensions/keyChanges": {
      "get": {
        "tags": [
          "evaluationRubricDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesEvaluationRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_evaluationRubricDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/feederSchoolAssociations": {
      "get": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFeederSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The month, day, and year of the first day of the feeder school association.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "feederSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The month, day, and year of the last day of the feeder school association.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "feederRelationshipDescription",
            "in": "query",
            "description": "Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_feederSchoolAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFeederSchoolAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"feederSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_feederSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "feederSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/feederSchoolAssociations/{id}": {
      "get": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFeederSchoolAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_feederSchoolAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFeederSchoolAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"feederSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_feederSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "feederSchoolAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteFeederSchoolAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/feederSchoolAssociations/deletes": {
      "get": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesFeederSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_feederSchoolAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/feederSchoolAssociations/keyChanges": {
      "get": {
        "tags": [
          "feederSchoolAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesFeederSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_feederSchoolAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/financialAids": {
      "get": {
        "tags": [
          "financialAids"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFinancialAids",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "aidTypeDescriptor",
            "in": "query",
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The date the award was designated.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "aidAmount",
            "in": "query",
            "description": "The amount of financial aid awarded to a person for the term/year.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "aidConditionDescription",
            "in": "query",
            "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The date the award was removed.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pellGrantRecipient",
            "in": "query",
            "description": "Indicates a person who receives Pell Grant aid.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_financialAid"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "financialAids"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFinancialAid",
        "requestBody": {
          "description": "The JSON representation of the \"financialAid\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_financialAid"
              }
            }
          },
          "required": true,
          "x-bodyName": "financialAid"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/financialAids/{id}": {
      "get": {
        "tags": [
          "financialAids"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFinancialAidsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_financialAid"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "financialAids"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFinancialAid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"financialAid\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_financialAid"
              }
            }
          },
          "required": true,
          "x-bodyName": "financialAid"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "financialAids"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteFinancialAidById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/financialAids/deletes": {
      "get": {
        "tags": [
          "financialAids"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesFinancialAids",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_financialAidDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/financialAids/keyChanges": {
      "get": {
        "tags": [
          "financialAids"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesFinancialAids",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_financialAidKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/functionDimensions": {
      "get": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFunctionDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account function dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account function dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account function dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_functionDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFunctionDimension",
        "requestBody": {
          "description": "The JSON representation of the \"functionDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_functionDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "functionDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/functionDimensions/{id}": {
      "get": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFunctionDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_functionDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFunctionDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"functionDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_functionDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "functionDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteFunctionDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/functionDimensions/deletes": {
      "get": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesFunctionDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_functionDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/functionDimensions/keyChanges": {
      "get": {
        "tags": [
          "functionDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesFunctionDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_functionDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/fundDimensions": {
      "get": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getFundDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account fund dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account fund dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account fund dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_fundDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postFundDimension",
        "requestBody": {
          "description": "The JSON representation of the \"fundDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_fundDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "fundDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/fundDimensions/{id}": {
      "get": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getFundDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_fundDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putFundDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"fundDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_fundDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "fundDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteFundDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/fundDimensions/deletes": {
      "get": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesFundDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_fundDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/fundDimensions/keyChanges": {
      "get": {
        "tags": [
          "fundDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesFundDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_fundDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/grades": {
      "get": {
        "tags": [
          "grades"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGrades",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "gradeTypeDescriptor",
            "in": "query",
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodDescriptor",
            "in": "query",
            "description": "The state's name of the period for which grades are reported.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodName",
            "in": "query",
            "description": "The school's descriptive name of the grading period.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodSchoolYear",
            "in": "query",
            "description": "The identifier for the grading period school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceBaseConversionDescriptor",
            "in": "query",
            "description": "A conversion of the level to a standard set of performance levels.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "currentGradeAsOfDate",
            "in": "query",
            "description": "As-Of date for a grade posted as the current grade.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "currentGradeIndicator",
            "in": "query",
            "description": "An indicator that the posted grade is an interim grade for the grading period and not the final grade.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "diagnosticStatement",
            "in": "query",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "gradeEarnedDescription",
            "in": "query",
            "description": "A description of the grade earned by the learner.",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "letterGradeEarned",
            "in": "query",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "numericGradeEarned",
            "in": "query",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_grade"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "grades"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGrade",
        "requestBody": {
          "description": "The JSON representation of the \"grade\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_grade"
              }
            }
          },
          "required": true,
          "x-bodyName": "grade"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/grades/{id}": {
      "get": {
        "tags": [
          "grades"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_grade"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "grades"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putGrade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"grade\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_grade"
              }
            }
          },
          "required": true,
          "x-bodyName": "grade"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "grades"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/grades/deletes": {
      "get": {
        "tags": [
          "grades"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesGrades",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradeDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/grades/keyChanges": {
      "get": {
        "tags": [
          "grades"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesGrades",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradeKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntries": {
      "get": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "gradebookEntryIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace URI for the source of the gradebook entry.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodDescriptor",
            "in": "query",
            "description": "The state's name of the period for which grades are reported.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "gradingPeriodName",
            "in": "query",
            "description": "The school's descriptive name of the grading period.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "gradebookEntryTypeDescriptor",
            "in": "query",
            "description": "The type of the gradebook entry.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "dateAssigned",
            "in": "query",
            "description": "The date the assignment, homework, or assessment was assigned or executed.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "A description of the assignment, homework, or classroom assessment.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "in": "query",
            "description": "The date the assignment, homework, or assessment is due.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dueTime",
            "in": "query",
            "description": "The time the assignment, homework, or assessment is due.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxPoints",
            "in": "query",
            "description": "The maximum number of points  that can be earned for the submission.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sourceSectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The name or title of the activity to be recorded in the gradebook entry.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradebookEntry"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradebookEntry",
        "requestBody": {
          "description": "The JSON representation of the \"gradebookEntry\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradebookEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradebookEntry"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntries/{id}": {
      "get": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradebookEntriesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradebookEntry"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putGradebookEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradebookEntry\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradebookEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradebookEntry"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradebookEntryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntries/deletes": {
      "get": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradebookEntryDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradebookEntries/keyChanges": {
      "get": {
        "tags": [
          "gradebookEntries"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradebookEntryKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriods": {
      "get": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGradingPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "gradingPeriodDescriptor",
            "in": "query",
            "description": "The state's name of the period for which grades are reported.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodName",
            "in": "query",
            "description": "The school's descriptive name of the grading period.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the grading period school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the first day of the grading period.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day, and year of the last day of the grading period.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodSequence",
            "in": "query",
            "description": "The sequential order of this period relative to other periods.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "totalInstructionalDays",
            "in": "query",
            "description": "Total days available for educational instruction during the grading period.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_gradingPeriod"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGradingPeriod",
        "requestBody": {
          "description": "The JSON representation of the \"gradingPeriod\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradingPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradingPeriod"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriods/{id}": {
      "get": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGradingPeriodsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_gradingPeriod"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGradingPeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"gradingPeriod\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_gradingPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "gradingPeriod"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGradingPeriodById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriods/deletes": {
      "get": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesGradingPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradingPeriodDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/gradingPeriods/keyChanges": {
      "get": {
        "tags": [
          "gradingPeriods"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesGradingPeriods",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_gradingPeriodKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlans": {
      "get": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getGraduationPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "graduationPlanTypeDescriptor",
            "in": "query",
            "description": "The type of academic plan the student is following for graduation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "graduationSchoolYear",
            "in": "query",
            "description": "The school year the student is expected to graduate.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "totalRequiredCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "individualPlan",
            "in": "query",
            "description": "An indicator of whether the graduation plan is tailored for an individual.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "totalRequiredCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "totalRequiredCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_graduationPlan"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postGraduationPlan",
        "requestBody": {
          "description": "The JSON representation of the \"graduationPlan\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_graduationPlan"
              }
            }
          },
          "required": true,
          "x-bodyName": "graduationPlan"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlans/{id}": {
      "get": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getGraduationPlansById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_graduationPlan"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putGraduationPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"graduationPlan\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_graduationPlan"
              }
            }
          },
          "required": true,
          "x-bodyName": "graduationPlan"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteGraduationPlanById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlans/deletes": {
      "get": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesGraduationPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_graduationPlanDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/graduationPlans/keyChanges": {
      "get": {
        "tags": [
          "graduationPlans"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesGraduationPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_graduationPlanKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventions": {
      "get": {
        "tags": [
          "interventions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "interventionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "deliveryMethodDescriptor",
            "in": "query",
            "description": "The way in which an intervention was implemented.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "interventionClassDescriptor",
            "in": "query",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The start date for the intervention implementation.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the intervention implementation.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxDosage",
            "in": "query",
            "description": "The maximum duration of time in minutes that may be assigned for the intervention.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minDosage",
            "in": "query",
            "description": "The minimum duration of time in minutes that may be assigned for the intervention.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the intervention.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_intervention"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interventions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postIntervention",
        "requestBody": {
          "description": "The JSON representation of the \"intervention\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_intervention"
              }
            }
          },
          "required": true,
          "x-bodyName": "intervention"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventions/{id}": {
      "get": {
        "tags": [
          "interventions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_intervention"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interventions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putIntervention",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"intervention\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_intervention"
              }
            }
          },
          "required": true,
          "x-bodyName": "intervention"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interventions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventions/deletes": {
      "get": {
        "tags": [
          "interventions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesInterventions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventions/keyChanges": {
      "get": {
        "tags": [
          "interventions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesInterventions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionPrescriptions": {
      "get": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionPrescriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "interventionPrescriptionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "deliveryMethodDescriptor",
            "in": "query",
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "interventionClassDescriptor",
            "in": "query",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxDosage",
            "in": "query",
            "description": "The maximum duration of time in minutes that is recommended for the intervention.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minDosage",
            "in": "query",
            "description": "The minimum duration of time in minutes that is recommended for the intervention.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the intervention.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_interventionPrescription"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionPrescription",
        "requestBody": {
          "description": "The JSON representation of the \"interventionPrescription\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionPrescription"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionPrescription"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionPrescriptions/{id}": {
      "get": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionPrescriptionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_interventionPrescription"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionPrescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"interventionPrescription\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionPrescription"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionPrescription"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionPrescriptionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionPrescriptions/deletes": {
      "get": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesInterventionPrescriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionPrescriptionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionPrescriptions/keyChanges": {
      "get": {
        "tags": [
          "interventionPrescriptions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesInterventionPrescriptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionPrescriptionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionStudies": {
      "get": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getInterventionStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "interventionStudyIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "interventionPrescriptionEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "interventionPrescriptionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "deliveryMethodDescriptor",
            "in": "query",
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "interventionClassDescriptor",
            "in": "query",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participants",
            "in": "query",
            "description": "The number of participants observed in the study.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_interventionStudy"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postInterventionStudy",
        "requestBody": {
          "description": "The JSON representation of the \"interventionStudy\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionStudy"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionStudy"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionStudies/{id}": {
      "get": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getInterventionStudiesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_interventionStudy"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putInterventionStudy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"interventionStudy\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_interventionStudy"
              }
            }
          },
          "required": true,
          "x-bodyName": "interventionStudy"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteInterventionStudyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionStudies/deletes": {
      "get": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesInterventionStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionStudyDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/interventionStudies/keyChanges": {
      "get": {
        "tags": [
          "interventionStudies"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesInterventionStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_interventionStudyKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandards": {
      "get": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "learningStandardId",
            "in": "query",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "parentLearningStandardId",
            "in": "query",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "learningStandardCategoryDescriptor",
            "in": "query",
            "description": "An additional classification of the type of a specific learning standard.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "learningStandardScopeDescriptor",
            "in": "query",
            "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "courseTitle",
            "in": "query",
            "description": "The official course title with which this learning standard is associated.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The text of the statement. The textual content that either describes a specific competency such as \"Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\" or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \"Understand and apply the Pythagorean Theorem,\" or \"Geometry\".",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "learningStandardItemCode",
            "in": "query",
            "description": "A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "successCriteria",
            "in": "query",
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "name": "uri",
            "in": "query",
            "description": "An unambiguous reference to the statement using a network-resolvable URI.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_learningStandard"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandard",
        "requestBody": {
          "description": "The JSON representation of the \"learningStandard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandard"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandards/{id}": {
      "get": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_learningStandard"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"learningStandard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandard"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandard"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandards/deletes": {
      "get": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandards/keyChanges": {
      "get": {
        "tags": [
          "learningStandards"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLearningStandards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations": {
      "get": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLearningStandardEquivalenceAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "The namespace of the organization that has created and owns the association.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceLearningStandardId",
            "in": "query",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "targetLearningStandardId",
            "in": "query",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "learningStandardEquivalenceStrengthDescriptor",
            "in": "query",
            "description": "A measure that indicates the strength or quality of the equivalence relationship.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "effectiveDate",
            "in": "query",
            "description": "The date that the association is considered to be applicable or effective.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "learningStandardEquivalenceStrengthDescription",
            "in": "query",
            "description": "Captures supplemental information on the relationship. Recommended for use only when the match is partial.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLearningStandardEquivalenceAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardEquivalenceAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardEquivalenceAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations/{id}": {
      "get": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLearningStandardEquivalenceAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLearningStandardEquivalenceAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"learningStandardEquivalenceAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "learningStandardEquivalenceAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLearningStandardEquivalenceAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations/deletes": {
      "get": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLearningStandardEquivalenceAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardEquivalenceAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/learningStandardEquivalenceAssociations/keyChanges": {
      "get": {
        "tags": [
          "learningStandardEquivalenceAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLearningStandardEquivalenceAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardEquivalenceAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localAccounts": {
      "get": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "chartOfAccountIdentifier",
            "in": "query",
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "chartOfAccountEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "A descriptive name for the account.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localAccount"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalAccount",
        "requestBody": {
          "description": "The JSON representation of the \"localAccount\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "localAccount"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localAccounts/{id}": {
      "get": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalAccountsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localAccount"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localAccount\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "localAccount"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localAccounts/deletes": {
      "get": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localAccountDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localAccounts/keyChanges": {
      "get": {
        "tags": [
          "localAccounts"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalAccounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localAccountKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localActuals": {
      "get": {
        "tags": [
          "localActuals"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalActuals",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "asOfDate",
            "in": "query",
            "description": "The date of the reported amount for the account.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "financialCollectionDescriptor",
            "in": "query",
            "description": "The accounting period or grouping for which the amount is collected.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Current balance for the account.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localActual"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localActuals"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalActual",
        "requestBody": {
          "description": "The JSON representation of the \"localActual\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localActual"
              }
            }
          },
          "required": true,
          "x-bodyName": "localActual"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localActuals/{id}": {
      "get": {
        "tags": [
          "localActuals"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalActualsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localActual"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localActuals"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalActual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localActual\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localActual"
              }
            }
          },
          "required": true,
          "x-bodyName": "localActual"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localActuals"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalActualById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localActuals/deletes": {
      "get": {
        "tags": [
          "localActuals"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalActuals",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localActualDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localActuals/keyChanges": {
      "get": {
        "tags": [
          "localActuals"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalActuals",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localActualKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localBudgets": {
      "get": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalBudgets",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "asOfDate",
            "in": "query",
            "description": "The date of the reported amount for the account.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "financialCollectionDescriptor",
            "in": "query",
            "description": "The accounting period or grouping for which the amount is collected.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Current balance for the account.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localBudget"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalBudget",
        "requestBody": {
          "description": "The JSON representation of the \"localBudget\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localBudget"
              }
            }
          },
          "required": true,
          "x-bodyName": "localBudget"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localBudgets/{id}": {
      "get": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalBudgetsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localBudget"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalBudget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localBudget\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localBudget"
              }
            }
          },
          "required": true,
          "x-bodyName": "localBudget"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalBudgetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localBudgets/deletes": {
      "get": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalBudgets",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localBudgetDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localBudgets/keyChanges": {
      "get": {
        "tags": [
          "localBudgets"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalBudgets",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localBudgetKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localContractedStaffs": {
      "get": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalContractedStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "asOfDate",
            "in": "query",
            "description": "The date of the reported amount for the account.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "financialCollectionDescriptor",
            "in": "query",
            "description": "The accounting period or grouping for which the amount is collected.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Current balance for the account.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localContractedStaff"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalContractedStaff",
        "requestBody": {
          "description": "The JSON representation of the \"localContractedStaff\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localContractedStaff"
              }
            }
          },
          "required": true,
          "x-bodyName": "localContractedStaff"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localContractedStaffs/{id}": {
      "get": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalContractedStaffsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localContractedStaff"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalContractedStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localContractedStaff\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localContractedStaff"
              }
            }
          },
          "required": true,
          "x-bodyName": "localContractedStaff"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalContractedStaffById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localContractedStaffs/deletes": {
      "get": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalContractedStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localContractedStaffDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localContractedStaffs/keyChanges": {
      "get": {
        "tags": [
          "localContractedStaffs"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalContractedStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localContractedStaffKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencies": {
      "get": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "localEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a local education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationServiceCenterId",
            "in": "query",
            "description": "The identifier assigned to an education service center.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parentLocalEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a local education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "stateEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a state education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "charterStatusDescriptor",
            "in": "query",
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "localEducationAgencyCategoryDescriptor",
            "in": "query",
            "description": "The category of local education agency/district.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localEducationAgency"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEducationAgency",
        "requestBody": {
          "description": "The JSON representation of the \"localEducationAgency\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEducationAgency"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEducationAgency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencies/{id}": {
      "get": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEducationAgenciesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localEducationAgency"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEducationAgency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localEducationAgency\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEducationAgency"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEducationAgency"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEducationAgencyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencies/deletes": {
      "get": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localEducationAgencyDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEducationAgencies/keyChanges": {
      "get": {
        "tags": [
          "localEducationAgencies"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localEducationAgencyKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEncumbrances": {
      "get": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalEncumbrances",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "asOfDate",
            "in": "query",
            "description": "The date of the reported amount for the account.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "financialCollectionDescriptor",
            "in": "query",
            "description": "The accounting period or grouping for which the amount is collected.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Current balance for the account.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localEncumbrance"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalEncumbrance",
        "requestBody": {
          "description": "The JSON representation of the \"localEncumbrance\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEncumbrance"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEncumbrance"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEncumbrances/{id}": {
      "get": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalEncumbrancesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localEncumbrance"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalEncumbrance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localEncumbrance\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localEncumbrance"
              }
            }
          },
          "required": true,
          "x-bodyName": "localEncumbrance"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalEncumbranceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEncumbrances/deletes": {
      "get": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalEncumbrances",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localEncumbranceDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localEncumbrances/keyChanges": {
      "get": {
        "tags": [
          "localEncumbrances"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalEncumbrances",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localEncumbranceKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localPayrolls": {
      "get": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocalPayrolls",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "asOfDate",
            "in": "query",
            "description": "The date of the reported amount for the account.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for the account.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "financialCollectionDescriptor",
            "in": "query",
            "description": "The accounting period or grouping for which the amount is collected.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Current balance for the account.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_localPayroll"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocalPayroll",
        "requestBody": {
          "description": "The JSON representation of the \"localPayroll\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localPayroll"
              }
            }
          },
          "required": true,
          "x-bodyName": "localPayroll"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localPayrolls/{id}": {
      "get": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocalPayrollsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_localPayroll"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putLocalPayroll",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"localPayroll\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_localPayroll"
              }
            }
          },
          "required": true,
          "x-bodyName": "localPayroll"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocalPayrollById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localPayrolls/deletes": {
      "get": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocalPayrolls",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localPayrollDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/localPayrolls/keyChanges": {
      "get": {
        "tags": [
          "localPayrolls"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocalPayrolls",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_localPayrollKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/locations": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "classroomIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maximumNumberOfSeats",
            "in": "query",
            "description": "The most number of seats the class can maintain.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "optimalNumberOfSeats",
            "in": "query",
            "description": "The number of seats that is most favorable to the class.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_location"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postLocation",
        "requestBody": {
          "description": "The JSON representation of the \"location\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_location"
              }
            }
          },
          "required": true,
          "x-bodyName": "location"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/locations/{id}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getLocationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_location"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "locations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"location\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_location"
              }
            }
          },
          "required": true,
          "x-bodyName": "location"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteLocationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/locations/deletes": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_locationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/locations/keyChanges": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_locationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectDimensions": {
      "get": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getObjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account object dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account object dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account object dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_objectDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postObjectDimension",
        "requestBody": {
          "description": "The JSON representation of the \"objectDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_objectDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "objectDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectDimensions/{id}": {
      "get": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getObjectDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_objectDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putObjectDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"objectDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_objectDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "objectDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteObjectDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectDimensions/deletes": {
      "get": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesObjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_objectDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectDimensions/keyChanges": {
      "get": {
        "tags": [
          "objectDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesObjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_objectDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectiveAssessments": {
      "get": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getObjectiveAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "identificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "parentIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "academicSubjectDescriptor",
            "in": "query",
            "description": "The subject area of the objective assessment.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the objective assessment (e.g., vocabulary, measurement, or geometry).",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxRawScore",
            "in": "query",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "nomenclature",
            "in": "query",
            "description": "Reflects the specific nomenclature used for this level of objective assessment.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "percentOfAssessment",
            "in": "query",
            "description": "The percentage of the assessment that tests this objective.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_objectiveAssessment"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postObjectiveAssessment",
        "requestBody": {
          "description": "The JSON representation of the \"objectiveAssessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_objectiveAssessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "objectiveAssessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectiveAssessments/{id}": {
      "get": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getObjectiveAssessmentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_objectiveAssessment"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putObjectiveAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"objectiveAssessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_objectiveAssessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "objectiveAssessment"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteObjectiveAssessmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectiveAssessments/deletes": {
      "get": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesObjectiveAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_objectiveAssessmentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/objectiveAssessments/keyChanges": {
      "get": {
        "tags": [
          "objectiveAssessments"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesObjectiveAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_objectiveAssessmentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/openStaffPositions": {
      "get": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOpenStaffPositions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "requisitionNumber",
            "in": "query",
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "employmentStatusDescriptor",
            "in": "query",
            "description": "Reflects the type of employment or contract desired for the position.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "postingResultDescriptor",
            "in": "query",
            "description": "Indication of whether the OpenStaffPosition was filled or retired without filling.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "programAssignmentDescriptor",
            "in": "query",
            "description": "The name of the program for which the open staff position will be assigned.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "staffClassificationDescriptor",
            "in": "query",
            "description": "The titles of employment, official status, or rank of education staff.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "datePosted",
            "in": "query",
            "description": "Date the open staff position was posted.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "datePostingRemoved",
            "in": "query",
            "description": "The date the posting was removed or filled.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionTitle",
            "in": "query",
            "description": "The descriptive name of an individual's position.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_openStaffPosition"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOpenStaffPosition",
        "requestBody": {
          "description": "The JSON representation of the \"openStaffPosition\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_openStaffPosition"
              }
            }
          },
          "required": true,
          "x-bodyName": "openStaffPosition"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/openStaffPositions/{id}": {
      "get": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOpenStaffPositionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_openStaffPosition"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOpenStaffPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"openStaffPosition\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_openStaffPosition"
              }
            }
          },
          "required": true,
          "x-bodyName": "openStaffPosition"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteOpenStaffPositionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/openStaffPositions/deletes": {
      "get": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesOpenStaffPositions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_openStaffPositionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/openStaffPositions/keyChanges": {
      "get": {
        "tags": [
          "openStaffPositions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesOpenStaffPositions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_openStaffPositionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalUnitDimensions": {
      "get": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOperationalUnitDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account operational unit dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account operational unit dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_operationalUnitDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOperationalUnitDimension",
        "requestBody": {
          "description": "The JSON representation of the \"operationalUnitDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_operationalUnitDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "operationalUnitDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalUnitDimensions/{id}": {
      "get": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOperationalUnitDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_operationalUnitDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOperationalUnitDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"operationalUnitDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_operationalUnitDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "operationalUnitDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteOperationalUnitDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalUnitDimensions/deletes": {
      "get": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesOperationalUnitDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_operationalUnitDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/operationalUnitDimensions/keyChanges": {
      "get": {
        "tags": [
          "operationalUnitDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesOperationalUnitDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_operationalUnitDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/organizationDepartments": {
      "get": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getOrganizationDepartments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "organizationDepartmentId",
            "in": "query",
            "description": "The unique identification code for the organization department.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "parentEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "academicSubjectDescriptor",
            "in": "query",
            "description": "The intended major subject area of the department.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_organizationDepartment"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postOrganizationDepartment",
        "requestBody": {
          "description": "The JSON representation of the \"organizationDepartment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_organizationDepartment"
              }
            }
          },
          "required": true,
          "x-bodyName": "organizationDepartment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/organizationDepartments/{id}": {
      "get": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getOrganizationDepartmentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_organizationDepartment"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putOrganizationDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"organizationDepartment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_organizationDepartment"
              }
            }
          },
          "required": true,
          "x-bodyName": "organizationDepartment"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteOrganizationDepartmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/organizationDepartments/deletes": {
      "get": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesOrganizationDepartments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_organizationDepartmentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/organizationDepartments/keyChanges": {
      "get": {
        "tags": [
          "organizationDepartments"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesOrganizationDepartments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_organizationDepartmentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluations": {
      "get": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "academicSubjectDescriptor",
            "in": "query",
            "description": "The description of the content or subject area of a performance evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performanceEvaluationDescription",
            "in": "query",
            "description": "The long description of the Performance Evaluation.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_performanceEvaluation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceEvaluation",
        "requestBody": {
          "description": "The JSON representation of the \"performanceEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_performanceEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluations/{id}": {
      "get": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceEvaluationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_performanceEvaluation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"performanceEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_performanceEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceEvaluation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceEvaluationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluations/deletes": {
      "get": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPerformanceEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluations/keyChanges": {
      "get": {
        "tags": [
          "performanceEvaluations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPerformanceEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluationRatings": {
      "get": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPerformanceEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "coteachingStyleObservedDescriptor",
            "in": "query",
            "description": "A type of co-teaching observed as part of the performance evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "performanceEvaluationRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved based upon the rating or score.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "actualDate",
            "in": "query",
            "description": "The month, day, and year on which the performance evaluation was conducted.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "actualDuration",
            "in": "query",
            "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "actualTime",
            "in": "query",
            "description": "An indication of the the time at which the performance evaluation was conducted.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "announced",
            "in": "query",
            "description": "An indicator of whether the performance evaluation was announced or not.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Any comments about the performance evaluation to be captured.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleDate",
            "in": "query",
            "description": "The month, day, and year on which the performance evaluation was scheduled.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_performanceEvaluationRating"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerformanceEvaluationRating",
        "requestBody": {
          "description": "The JSON representation of the \"performanceEvaluationRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_performanceEvaluationRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceEvaluationRating"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluationRatings/{id}": {
      "get": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPerformanceEvaluationRatingsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_performanceEvaluationRating"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerformanceEvaluationRating",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"performanceEvaluationRating\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_performanceEvaluationRating"
              }
            }
          },
          "required": true,
          "x-bodyName": "performanceEvaluationRating"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePerformanceEvaluationRatingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluationRatings/deletes": {
      "get": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPerformanceEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationRatingDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/performanceEvaluationRatings/keyChanges": {
      "get": {
        "tags": [
          "performanceEvaluationRatings"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPerformanceEvaluationRatings",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationRatingKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/people": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPeople",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_person"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "people"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPerson",
        "requestBody": {
          "description": "The JSON representation of the \"person\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_person"
              }
            }
          },
          "required": true,
          "x-bodyName": "person"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/people/{id}": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPeopleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_person"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "people"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPerson",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"person\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_person"
              }
            }
          },
          "required": true,
          "x-bodyName": "person"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "people"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePersonById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/people/deletes": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPeople",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_personDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/people/keyChanges": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPeople",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_personKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEvents": {
      "get": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "postSecondaryEventCategoryDescriptor",
            "in": "query",
            "description": "The post secondary event that is logged.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "The date the event occurred or was recorded.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "postSecondaryInstitutionId",
            "in": "query",
            "description": "The ID of the post secondary institution.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_postSecondaryEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryEvent",
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEvents/{id}": {
      "get": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_postSecondaryEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEvents/deletes": {
      "get": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPostSecondaryEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryEvents/keyChanges": {
      "get": {
        "tags": [
          "postSecondaryEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPostSecondaryEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutions": {
      "get": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPostSecondaryInstitutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "postSecondaryInstitutionId",
            "in": "query",
            "description": "The ID of the post secondary institution.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "administrativeFundingControlDescriptor",
            "in": "query",
            "description": "A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "postSecondaryInstitutionLevelDescriptor",
            "in": "query",
            "description": "A classification of whether a post secondary institution's highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_postSecondaryInstitution"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postPostSecondaryInstitution",
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryInstitution\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryInstitution"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryInstitution"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutions/{id}": {
      "get": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getPostSecondaryInstitutionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_postSecondaryInstitution"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putPostSecondaryInstitution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"postSecondaryInstitution\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_postSecondaryInstitution"
              }
            }
          },
          "required": true,
          "x-bodyName": "postSecondaryInstitution"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deletePostSecondaryInstitutionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutions/deletes": {
      "get": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPostSecondaryInstitutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryInstitutionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/postSecondaryInstitutions/keyChanges": {
      "get": {
        "tags": [
          "postSecondaryInstitutions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPostSecondaryInstitutions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryInstitutionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programs": {
      "get": {
        "tags": [
          "programs"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programId",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_program"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programs"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgram",
        "requestBody": {
          "description": "The JSON representation of the \"program\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_program"
              }
            }
          },
          "required": true,
          "x-bodyName": "program"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programs/{id}": {
      "get": {
        "tags": [
          "programs"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_program"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programs"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgram",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"program\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_program"
              }
            }
          },
          "required": true,
          "x-bodyName": "program"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programs"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programs/deletes": {
      "get": {
        "tags": [
          "programs"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programs/keyChanges": {
      "get": {
        "tags": [
          "programs"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesPrograms",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programDimensions": {
      "get": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account program dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account program dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account program dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramDimension",
        "requestBody": {
          "description": "The JSON representation of the \"programDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "programDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programDimensions/{id}": {
      "get": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "programDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programDimensions/deletes": {
      "get": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesProgramDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programDimensions/keyChanges": {
      "get": {
        "tags": [
          "programDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesProgramDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluations": {
      "get": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programEvaluationPeriodDescriptor",
            "in": "query",
            "description": "The name of the period for the program evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of program evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the student program evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationMaxNumericRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the program evaluation.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "evaluationMinNumericRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programEvaluationDescription",
            "in": "query",
            "description": "The long description of the program evaluation.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programEvaluation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluation",
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluations/{id}": {
      "get": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programEvaluation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluations/deletes": {
      "get": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluations/keyChanges": {
      "get": {
        "tags": [
          "programEvaluations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationElements": {
      "get": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programEvaluationElementTitle",
            "in": "query",
            "description": "The name or title of the program evaluation element.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationPeriodDescriptor",
            "in": "query",
            "description": "The name of the period for the program evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the student program evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of program evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the program evaluation objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "elementMaxNumericRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the program evaluation element.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "elementMinNumericRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "elementSortOrder",
            "in": "query",
            "description": "The sort order of this program evaluation element.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programEvaluationElementDescription",
            "in": "query",
            "description": "The long description of the program evaluation element.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programEvaluationElement"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationElement",
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationElement\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationElement"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationElement"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationElements/{id}": {
      "get": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationElementsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programEvaluationElement"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationElement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationElement\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationElement"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationElement"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationElementById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationElements/deletes": {
      "get": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesProgramEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationElementDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationElements/keyChanges": {
      "get": {
        "tags": [
          "programEvaluationElements"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesProgramEvaluationElements",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationElementKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationObjectives": {
      "get": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProgramEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programEvaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the program evaluation objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationPeriodDescriptor",
            "in": "query",
            "description": "The name of the period for the program evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the student program evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of program evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectiveMaxNumericRating",
            "in": "query",
            "description": "The maximum summary numerical rating or score for the program evaluation objective.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "objectiveMinNumericRating",
            "in": "query",
            "description": "The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "objectiveSortOrder",
            "in": "query",
            "description": "The sort order of this program evaluation objective.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "programEvaluationObjectiveDescription",
            "in": "query",
            "description": "The long description of the program evaluation objective.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_programEvaluationObjective"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProgramEvaluationObjective",
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationObjectives/{id}": {
      "get": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProgramEvaluationObjectivesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_programEvaluationObjective"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProgramEvaluationObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"programEvaluationObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_programEvaluationObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "programEvaluationObjective"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProgramEvaluationObjectiveById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationObjectives/deletes": {
      "get": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesProgramEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationObjectiveDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/programEvaluationObjectives/keyChanges": {
      "get": {
        "tags": [
          "programEvaluationObjectives"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesProgramEvaluationObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationObjectiveKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/projectDimensions": {
      "get": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getProjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account project dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account project dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account project dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_projectDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postProjectDimension",
        "requestBody": {
          "description": "The JSON representation of the \"projectDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_projectDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "projectDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/projectDimensions/{id}": {
      "get": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getProjectDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_projectDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putProjectDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"projectDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_projectDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "projectDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteProjectDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/projectDimensions/deletes": {
      "get": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesProjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_projectDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/projectDimensions/keyChanges": {
      "get": {
        "tags": [
          "projectDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesProjectDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_projectDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportCards": {
      "get": {
        "tags": [
          "reportCards"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getReportCards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodDescriptor",
            "in": "query",
            "description": "The state's name of the period for which grades are reported.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodName",
            "in": "query",
            "description": "The school's descriptive name of the grading period.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodSchoolYear",
            "in": "query",
            "description": "The identifier for the grading period school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberOfDaysAbsent",
            "in": "query",
            "description": "The number of days an individual is absent when school is in session during a given reporting period.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "numberOfDaysInAttendance",
            "in": "query",
            "description": "The number of days an individual is present when school is in session during a given reporting period.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "numberOfDaysTardy",
            "in": "query",
            "description": "The number of days an individual is tardy during a given reporting period.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_reportCard"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "reportCards"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postReportCard",
        "requestBody": {
          "description": "The JSON representation of the \"reportCard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reportCard"
              }
            }
          },
          "required": true,
          "x-bodyName": "reportCard"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportCards/{id}": {
      "get": {
        "tags": [
          "reportCards"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getReportCardsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_reportCard"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "reportCards"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putReportCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"reportCard\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_reportCard"
              }
            }
          },
          "required": true,
          "x-bodyName": "reportCard"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "reportCards"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteReportCardById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportCards/deletes": {
      "get": {
        "tags": [
          "reportCards"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesReportCards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_reportCardDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/reportCards/keyChanges": {
      "get": {
        "tags": [
          "reportCards"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesReportCards",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_reportCardKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEvents": {
      "get": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRestraintEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "restraintEventIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting where the RestraintEvent was exercised.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Month, day, and year of the restraint event.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_restraintEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRestraintEvent",
        "requestBody": {
          "description": "The JSON representation of the \"restraintEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_restraintEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "restraintEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEvents/{id}": {
      "get": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRestraintEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_restraintEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRestraintEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"restraintEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_restraintEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "restraintEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRestraintEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEvents/deletes": {
      "get": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesRestraintEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_restraintEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/restraintEvents/keyChanges": {
      "get": {
        "tags": [
          "restraintEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesRestraintEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_restraintEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/rubricDimensions": {
      "get": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "rubricRating",
            "in": "query",
            "description": "The rating achieved for the rubric dimension.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationElementTitle",
            "in": "query",
            "description": "The name or title of the evaluation element.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationObjectiveTitle",
            "in": "query",
            "description": "The name or title of the evaluation Objective.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationPeriodDescriptor",
            "in": "query",
            "description": "The period for the evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "evaluationTitle",
            "in": "query",
            "description": "The name or title of the evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the performance evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "performanceEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of performance evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "rubricRatingLevelDescriptor",
            "in": "query",
            "description": "The rating level achieved for the rubric dimension.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "criterionDescription",
            "in": "query",
            "description": "The criterion description for the rubric dimension.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "dimensionOrder",
            "in": "query",
            "description": "The order for the rubric dimension.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_rubricDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postRubricDimension",
        "requestBody": {
          "description": "The JSON representation of the \"rubricDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_rubricDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "rubricDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/rubricDimensions/{id}": {
      "get": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getRubricDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_rubricDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putRubricDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"rubricDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_rubricDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "rubricDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteRubricDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/rubricDimensions/deletes": {
      "get": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_rubricDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/rubricDimensions/keyChanges": {
      "get": {
        "tags": [
          "rubricDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesRubricDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_rubricDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schools": {
      "get": {
        "tags": [
          "schools"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a local education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "charterApprovalSchoolYear",
            "in": "query",
            "description": "The school year in which a charter school was initially approved.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "administrativeFundingControlDescriptor",
            "in": "query",
            "description": "The type of education institution as classified by its funding source, for example public or private.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "charterApprovalAgencyTypeDescriptor",
            "in": "query",
            "description": "The type of agency that approved the establishment or continuation of a charter school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "charterStatusDescriptor",
            "in": "query",
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "internetAccessDescriptor",
            "in": "query",
            "description": "The type of Internet access available.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "magnetSpecialProgramEmphasisSchoolDescriptor",
            "in": "query",
            "description": "A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "schoolTypeDescriptor",
            "in": "query",
            "description": "The type of education institution as classified by its primary focus.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "titleIPartASchoolDesignationDescriptor",
            "in": "query",
            "description": "Denotes the Title I Part A designation for the school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_school"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schools"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchool",
        "requestBody": {
          "description": "The JSON representation of the \"school\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_school"
              }
            }
          },
          "required": true,
          "x-bodyName": "school"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schools/{id}": {
      "get": {
        "tags": [
          "schools"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_school"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schools"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchool",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"school\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_school"
              }
            }
          },
          "required": true,
          "x-bodyName": "school"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schools"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schools/deletes": {
      "get": {
        "tags": [
          "schools"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_schoolDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schools/keyChanges": {
      "get": {
        "tags": [
          "schools"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_schoolKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolYearTypes": {
      "get": {
        "tags": [
          "schoolYearTypes"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSchoolYearTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "Key for School Year",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "currentSchoolYear",
            "in": "query",
            "description": "The code for the current school year.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schoolYearDescription",
            "in": "query",
            "description": "The description for the SchoolYear type.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_schoolYearType"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "schoolYearTypes"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSchoolYearType",
        "requestBody": {
          "description": "The JSON representation of the \"schoolYearType\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolYearType"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolYearType"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/schoolYearTypes/{id}": {
      "get": {
        "tags": [
          "schoolYearTypes"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSchoolYearTypesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_schoolYearType"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "schoolYearTypes"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSchoolYearType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"schoolYearType\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_schoolYearType"
              }
            }
          },
          "required": true,
          "x-bodyName": "schoolYearType"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "schoolYearTypes"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSchoolYearTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sections": {
      "get": {
        "tags": [
          "sections"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "locationClassroomIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "locationSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "availableCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting in which a student receives education and related services.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "instructionLanguageDescriptor",
            "in": "query",
            "description": "The primary language of instruction. If omitted, English is assumed.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "mediumOfInstructionDescriptor",
            "in": "query",
            "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "populationServedDescriptor",
            "in": "query",
            "description": "The type of students the section is offered and tailored to.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sectionTypeDescriptor",
            "in": "query",
            "description": "Specifies whether the section is for attendance only, credit only, or both.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "availableCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "availableCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "officialAttendancePeriod",
            "in": "query",
            "description": "Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sectionName",
            "in": "query",
            "description": "A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "sequenceOfCourse",
            "in": "query",
            "description": "When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_section"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sections"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSection",
        "requestBody": {
          "description": "The JSON representation of the \"section\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_section"
              }
            }
          },
          "required": true,
          "x-bodyName": "section"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sections/{id}": {
      "get": {
        "tags": [
          "sections"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_section"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sections"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putSection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"section\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_section"
              }
            }
          },
          "required": true,
          "x-bodyName": "section"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "sections"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sections/deletes": {
      "get": {
        "tags": [
          "sections"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sectionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sections/keyChanges": {
      "get": {
        "tags": [
          "sections"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sectionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents": {
      "get": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSectionAttendanceTakenEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "calendarCode",
            "in": "query",
            "description": "The identifier for the calendar.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "date",
            "in": "query",
            "description": "The month, day, and year of the calendar event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "The date the section attendance taken event was submitted, which could be a different date than the instructional day.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sectionAttendanceTakenEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSectionAttendanceTakenEvent",
        "requestBody": {
          "description": "The JSON representation of the \"sectionAttendanceTakenEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionAttendanceTakenEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionAttendanceTakenEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents/{id}": {
      "get": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSectionAttendanceTakenEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sectionAttendanceTakenEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSectionAttendanceTakenEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sectionAttendanceTakenEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sectionAttendanceTakenEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "sectionAttendanceTakenEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSectionAttendanceTakenEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents/deletes": {
      "get": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSectionAttendanceTakenEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sectionAttendanceTakenEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sectionAttendanceTakenEvents/keyChanges": {
      "get": {
        "tags": [
          "sectionAttendanceTakenEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSectionAttendanceTakenEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sectionAttendanceTakenEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "A descriptor value to indicate the term that the session is associated with.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the first day of the session.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day and year of the last day of the session.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalInstructionalDays",
            "in": "query",
            "description": "The total number of instructional days in the school calendar.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_session"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSession",
        "requestBody": {
          "description": "The JSON representation of the \"session\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_session"
              }
            }
          },
          "required": true,
          "x-bodyName": "session"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sessions/{id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSessionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_session"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sessions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"session\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_session"
              }
            }
          },
          "required": true,
          "x-bodyName": "session"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSessionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sessions/deletes": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sessionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sessions/keyChanges": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sessionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceDimensions": {
      "get": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSourceDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "code",
            "in": "query",
            "description": "The code representation of the account source dimension.",
            "schema": {
              "maxLength": 16,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "fiscalYear",
            "in": "query",
            "description": "The fiscal year for which the account source dimension is valid.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "codeName",
            "in": "query",
            "description": "A description of the account source dimension.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_sourceDimension"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSourceDimension",
        "requestBody": {
          "description": "The JSON representation of the \"sourceDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sourceDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "sourceDimension"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceDimensions/{id}": {
      "get": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSourceDimensionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_sourceDimension"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSourceDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"sourceDimension\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_sourceDimension"
              }
            }
          },
          "required": true,
          "x-bodyName": "sourceDimension"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSourceDimensionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceDimensions/deletes": {
      "get": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSourceDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sourceDimensionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/sourceDimensions/keyChanges": {
      "get": {
        "tags": [
          "sourceDimensions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSourceDimensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_sourceDimensionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffs": {
      "get": {
        "tags": [
          "staffs"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "citizenshipStatusDescriptor",
            "in": "query",
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "highestCompletedLevelOfEducationDescriptor",
            "in": "query",
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sexDescriptor",
            "in": "query",
            "description": "The birth sex of the staff member.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthDate",
            "in": "query",
            "description": "The month, day, and year on which an individual was born.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "genderIdentity",
            "in": "query",
            "description": "The gender the staff member identifies themselves as.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "generationCodeSuffix",
            "in": "query",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "highlyQualifiedTeacher",
            "in": "query",
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hispanicLatinoEthnicity",
            "in": "query",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastSurname",
            "in": "query",
            "description": "The name borne in common by members of a family.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "loginId",
            "in": "query",
            "description": "The login ID for the user; used for security access control interface.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "maidenName",
            "in": "query",
            "description": "The individual's maiden name.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "personalTitlePrefix",
            "in": "query",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "preferredFirstName",
            "in": "query",
            "description": "The first name the individual prefers, if different from their legal first name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "preferredLastSurname",
            "in": "query",
            "description": "The last name the individual prefers, if different from their legal last name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "yearsOfPriorProfessionalExperience",
            "in": "query",
            "description": "The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "yearsOfPriorTeachingExperience",
            "in": "query",
            "description": "The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staff"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffs"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaff",
        "requestBody": {
          "description": "The JSON representation of the \"staff\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staff"
              }
            }
          },
          "required": true,
          "x-bodyName": "staff"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffs/{id}": {
      "get": {
        "tags": [
          "staffs"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staff"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffs"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staff\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staff"
              }
            }
          },
          "required": true,
          "x-bodyName": "staff"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffs"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffs/deletes": {
      "get": {
        "tags": [
          "staffs"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffs/keyChanges": {
      "get": {
        "tags": [
          "staffs"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffs",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffAbsenceEvents": {
      "get": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffAbsenceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "absenceEventCategoryDescriptor",
            "in": "query",
            "description": "The code describing the type of absence.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Date for this leave event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "absenceEventReason",
            "in": "query",
            "description": "Expanded reason for the staff absence.",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "name": "hoursAbsent",
            "in": "query",
            "description": "The hours the staff was absent, if not the entire working day.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffAbsenceEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffAbsenceEvent",
        "requestBody": {
          "description": "The JSON representation of the \"staffAbsenceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffAbsenceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffAbsenceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffAbsenceEvents/{id}": {
      "get": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffAbsenceEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffAbsenceEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffAbsenceEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffAbsenceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffAbsenceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffAbsenceEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffAbsenceEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffAbsenceEvents/deletes": {
      "get": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffAbsenceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffAbsenceEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffAbsenceEvents/keyChanges": {
      "get": {
        "tags": [
          "staffAbsenceEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffAbsenceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffAbsenceEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffCohortAssociations": {
      "get": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Start date for the association of staff to this cohort.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "cohortIdentifier",
            "in": "query",
            "description": "The name or ID for the cohort.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for the association of staff to this cohort.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "studentRecordAccess",
            "in": "query",
            "description": "Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffCohortAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffCohortAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffCohortAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffCohortAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffCohortAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffCohortAssociations/{id}": {
      "get": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffCohortAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffCohortAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffCohortAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffCohortAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffCohortAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffCohortAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffCohortAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffCohortAssociations/deletes": {
      "get": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffCohortAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffCohortAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffCohortAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffCohortAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations": {
      "get": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffDisciplineIncidentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "incidentIdentifier",
            "in": "query",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffDisciplineIncidentAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffDisciplineIncidentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffDisciplineIncidentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations/{id}": {
      "get": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffDisciplineIncidentAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffDisciplineIncidentAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffDisciplineIncidentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffDisciplineIncidentAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffDisciplineIncidentAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations/deletes": {
      "get": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffDisciplineIncidentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffDisciplineIncidentAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffDisciplineIncidentAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffDisciplineIncidentAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffDisciplineIncidentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffDisciplineIncidentAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations": {
      "get": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationAssignmentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "staffClassificationDescriptor",
            "in": "query",
            "description": "The titles of employment, official status, or rank of education staff.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the education organization.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "credentialIdentifier",
            "in": "query",
            "description": "Identifier or serial number assigned to the credential.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "stateOfIssueStateAbbreviationDescriptor",
            "in": "query",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "employmentEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "employmentStatusDescriptor",
            "in": "query",
            "description": "Reflects the type of employment or contract.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "employmentHireDate",
            "in": "query",
            "description": "The month, day, and year on which an individual was hired for a position.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day, and year of the end or termination date of a staff member's employment, contract, or relationship with the education organization.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fullTimeEquivalency",
            "in": "query",
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderOfAssignment",
            "in": "query",
            "description": "Describes whether the assignment is this the staff member's primary assignment, secondary assignment, etc.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "positionTitle",
            "in": "query",
            "description": "The descriptive name of an individual's position.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationAssignmentAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationAssignmentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationAssignmentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations/{id}": {
      "get": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationAssignmentAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationAssignmentAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationAssignmentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationAssignmentAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationAssignmentAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations/deletes": {
      "get": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffEducationOrganizationAssignmentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationAssignmentAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffEducationOrganizationAssignmentAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffEducationOrganizationAssignmentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations": {
      "get": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "contactTitle",
            "in": "query",
            "description": "The title of the contact in the context of the education organization.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "contactTypeDescriptor",
            "in": "query",
            "description": "Indicates the type for the contact information.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "electronicMailAddress",
            "in": "query",
            "description": "The email for the contact associated with the education organization.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationContactAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationContactAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationContactAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations/{id}": {
      "get": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationContactAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationContactAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationContactAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationContactAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationContactAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations/deletes": {
      "get": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffEducationOrganizationContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationContactAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationContactAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffEducationOrganizationContactAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffEducationOrganizationContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationContactAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations": {
      "get": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffEducationOrganizationEmploymentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "employmentStatusDescriptor",
            "in": "query",
            "description": "Reflects the type of employment or contract.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "hireDate",
            "in": "query",
            "description": "The month, day, and year on which an individual was hired for a position.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "credentialIdentifier",
            "in": "query",
            "description": "Identifier or serial number assigned to the credential.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "stateOfIssueStateAbbreviationDescriptor",
            "in": "query",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "separationDescriptor",
            "in": "query",
            "description": "Type of employment separation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "separationReasonDescriptor",
            "in": "query",
            "description": "Reason for terminating the employment.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "annualWage",
            "in": "query",
            "description": "Annual wage associated with the employment position being reported.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The department or suborganization the employee/contractor is associated with in the education organization.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fullTimeEquivalency",
            "in": "query",
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "hourlyWage",
            "in": "query",
            "description": "Hourly wage associated with the employment position being reported.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerDate",
            "in": "query",
            "description": "Date at which the staff member was made an official offer for this employment.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffEducationOrganizationEmploymentAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationEmploymentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationEmploymentAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations/{id}": {
      "get": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffEducationOrganizationEmploymentAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffEducationOrganizationEmploymentAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffEducationOrganizationEmploymentAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffEducationOrganizationEmploymentAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffEducationOrganizationEmploymentAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations/deletes": {
      "get": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffEducationOrganizationEmploymentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffEducationOrganizationEmploymentAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffEducationOrganizationEmploymentAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffEducationOrganizationEmploymentAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaves": {
      "get": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffLeaves",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "staffLeaveEventCategoryDescriptor",
            "in": "query",
            "description": "The code describing the type of leave taken.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The begin date of the staff leave.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the staff leave.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Expanded reason for the staff leave.",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "name": "substituteAssigned",
            "in": "query",
            "description": "Indicator of whether a substitute was assigned during the period of staff leave.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffLeave"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffLeave",
        "requestBody": {
          "description": "The JSON representation of the \"staffLeave\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffLeave"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffLeave"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaves/{id}": {
      "get": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffLeavesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffLeave"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffLeave\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffLeave"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffLeave"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffLeaveById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaves/deletes": {
      "get": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffLeaves",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffLeaveDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffLeaves/keyChanges": {
      "get": {
        "tags": [
          "staffLeaves"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffLeaves",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffLeaveKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffProgramAssociations": {
      "get": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Start date for the association of staff to this program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for the association of staff to this program.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "studentRecordAccess",
            "in": "query",
            "description": "Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffProgramAssociations/{id}": {
      "get": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffProgramAssociations/deletes": {
      "get": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSchoolAssociations": {
      "get": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "programAssignmentDescriptor",
            "in": "query",
            "description": "The name of the program for which the individual is assigned.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "calendarCode",
            "in": "query",
            "description": "The identifier for the calendar.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "Identifier for a school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffSchoolAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffSchoolAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSchoolAssociations/{id}": {
      "get": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffSchoolAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffSchoolAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffSchoolAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffSchoolAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffSchoolAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSchoolAssociations/deletes": {
      "get": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffSchoolAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSchoolAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffSchoolAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffSchoolAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSectionAssociations": {
      "get": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStaffSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of a teacher's assignment to the section.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "classroomPositionDescriptor",
            "in": "query",
            "description": "The type of position the staff member holds in the specific class/section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day, and year of the last day of a staff member's assignment to the section.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "highlyQualifiedTeacher",
            "in": "query",
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "percentageContribution",
            "in": "query",
            "description": "Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "teacherStudentDataLinkExclusion",
            "in": "query",
            "description": "Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_staffSectionAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStaffSectionAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"staffSectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffSectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffSectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSectionAssociations/{id}": {
      "get": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStaffSectionAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_staffSectionAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStaffSectionAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"staffSectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_staffSectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "staffSectionAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStaffSectionAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSectionAssociations/deletes": {
      "get": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStaffSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffSectionAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/staffSectionAssociations/keyChanges": {
      "get": {
        "tags": [
          "staffSectionAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStaffSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_staffSectionAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateEducationAgencies": {
      "get": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStateEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "stateEducationAgencyId",
            "in": "query",
            "description": "The identifier assigned to a state education agency.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_stateEducationAgency"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStateEducationAgency",
        "requestBody": {
          "description": "The JSON representation of the \"stateEducationAgency\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_stateEducationAgency"
              }
            }
          },
          "required": true,
          "x-bodyName": "stateEducationAgency"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateEducationAgencies/{id}": {
      "get": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStateEducationAgenciesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_stateEducationAgency"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStateEducationAgency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"stateEducationAgency\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_stateEducationAgency"
              }
            }
          },
          "required": true,
          "x-bodyName": "stateEducationAgency"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStateEducationAgencyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateEducationAgencies/deletes": {
      "get": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStateEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_stateEducationAgencyDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/stateEducationAgencies/keyChanges": {
      "get": {
        "tags": [
          "stateEducationAgencies"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStateEducationAgencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_stateEducationAgencyKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/students": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "citizenshipStatusDescriptor",
            "in": "query",
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthCountryDescriptor",
            "in": "query",
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthSexDescriptor",
            "in": "query",
            "description": "A person's sex at birth.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthStateAbbreviationDescriptor",
            "in": "query",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "birthCity",
            "in": "query",
            "description": "The city the student was born in.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "birthDate",
            "in": "query",
            "description": "The month, day, and year on which an individual was born.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "birthInternationalProvince",
            "in": "query",
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "schema": {
              "maxLength": 150,
              "type": "string"
            }
          },
          {
            "name": "dateEnteredUS",
            "in": "query",
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "generationCodeSuffix",
            "in": "query",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastSurname",
            "in": "query",
            "description": "The name borne in common by members of a family.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "maidenName",
            "in": "query",
            "description": "The individual's maiden name.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "multipleBirthStatus",
            "in": "query",
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "personalTitlePrefix",
            "in": "query",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "preferredFirstName",
            "in": "query",
            "description": "The first name the individual prefers, if different from their legal first name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "preferredLastSurname",
            "in": "query",
            "description": "The last name the individual prefers, if different from their legal last name",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_student"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "students"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudent",
        "requestBody": {
          "description": "The JSON representation of the \"student\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_student"
              }
            }
          },
          "required": true,
          "x-bodyName": "student"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/students/{id}": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_student"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "students"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"student\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_student"
              }
            }
          },
          "required": true,
          "x-bodyName": "student"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "students"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/students/deletes": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/students/keyChanges": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAcademicRecords": {
      "get": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAcademicRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "termDescriptor",
            "in": "query",
            "description": "The term for the session during the school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "cumulativeEarnedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "cumulativeAttemptedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sessionEarnedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sessionAttemptedCreditTypeDescriptor",
            "in": "query",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "cumulativeAttemptedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "cumulativeAttemptedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "cumulativeEarnedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "cumulativeEarnedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectedGraduationDate",
            "in": "query",
            "description": "The month and year the student is projected to graduate.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sessionAttemptedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sessionAttemptedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sessionEarnedCreditConversion",
            "in": "query",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sessionEarnedCredits",
            "in": "query",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentAcademicRecord"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAcademicRecord",
        "requestBody": {
          "description": "The JSON representation of the \"studentAcademicRecord\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAcademicRecord"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAcademicRecord"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAcademicRecords/{id}": {
      "get": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAcademicRecordsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentAcademicRecord"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAcademicRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentAcademicRecord\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAcademicRecord"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAcademicRecord"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAcademicRecordById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAcademicRecords/deletes": {
      "get": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentAcademicRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAcademicRecordDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAcademicRecords/keyChanges": {
      "get": {
        "tags": [
          "studentAcademicRecords"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentAcademicRecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAcademicRecordKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessments": {
      "get": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "studentAssessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "reportedSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "administrationEnvironmentDescriptor",
            "in": "query",
            "description": "The environment in which the test was administered.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "eventCircumstanceDescriptor",
            "in": "query",
            "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "whenAssessedGradeLevelDescriptor",
            "in": "query",
            "description": "The grade level of a student when assessed.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "administrationLanguageDescriptor",
            "in": "query",
            "description": "The language in which an assessment is written and/or administered.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "platformTypeDescriptor",
            "in": "query",
            "description": "The platform with which the assessment was delivered to the student during the assessment session.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "reasonNotTestedDescriptor",
            "in": "query",
            "description": "The primary reason student is not tested.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "retestIndicatorDescriptor",
            "in": "query",
            "description": "Indicator if the test was a retake.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "administrationDate",
            "in": "query",
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "administrationEndDate",
            "in": "query",
            "description": "The date and time an assessment administration ended.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "assessedMinutes",
            "in": "query",
            "description": "Reported time student was assessed in minutes.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eventDescription",
            "in": "query",
            "description": "Describes special events that occur before during or after the assessment session that may impact use of results.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportedSchoolIdentifier",
            "in": "query",
            "description": "A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "serialNumber",
            "in": "query",
            "description": "The unique number for the assessment form or answer document.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentAssessment"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessment",
        "requestBody": {
          "description": "The JSON representation of the \"studentAssessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAssessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAssessment"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessments/{id}": {
      "get": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentAssessment"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentAssessment\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAssessment"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAssessment"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessments/deletes": {
      "get": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessments/keyChanges": {
      "get": {
        "tags": [
          "studentAssessments"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentAssessments",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations": {
      "get": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentAssessmentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationAssociationTypeDescriptor",
            "in": "query",
            "description": "The type of association being represented.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the assessment.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentAssessmentIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The school year associated with the association..",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentAssessmentEducationOrganizationAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentAssessmentEducationOrganizationAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentAssessmentEducationOrganizationAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAssessmentEducationOrganizationAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAssessmentEducationOrganizationAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations/{id}": {
      "get": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentAssessmentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentAssessmentEducationOrganizationAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentAssessmentEducationOrganizationAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentAssessmentEducationOrganizationAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentAssessmentEducationOrganizationAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentAssessmentEducationOrganizationAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentAssessmentEducationOrganizationAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations/deletes": {
      "get": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentAssessmentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentAssessmentEducationOrganizationAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentAssessmentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentAssessmentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCohortAssociations": {
      "get": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The month, day, and year on which the student was first identified as part of the cohort.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "cohortIdentifier",
            "in": "query",
            "description": "The name or ID for the cohort.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The month, day, and year on which the student was removed as part of the cohort.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentCohortAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCohortAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentCohortAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCohortAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCohortAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCohortAssociations/{id}": {
      "get": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCohortAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentCohortAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCohortAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentCohortAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCohortAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCohortAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCohortAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCohortAssociations/deletes": {
      "get": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCohortAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCohortAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentCohortAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentCohortAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCohortAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCompetencyObjectives": {
      "get": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "objectiveEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "objective",
            "in": "query",
            "description": "The designated title of the competency objective.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "objectiveGradeLevelDescriptor",
            "in": "query",
            "description": "The grade level for which the competency objective is targeted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodDescriptor",
            "in": "query",
            "description": "The state's name of the period for which grades are reported.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodName",
            "in": "query",
            "description": "The school's descriptive name of the grading period.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "gradingPeriodSchoolYear",
            "in": "query",
            "description": "The identifier for the grading period school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "competencyLevelDescriptor",
            "in": "query",
            "description": "The competency level assessed for the student for the referenced competency objective.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "diagnosticStatement",
            "in": "query",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentCompetencyObjective"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCompetencyObjective",
        "requestBody": {
          "description": "The JSON representation of the \"studentCompetencyObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCompetencyObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCompetencyObjective"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCompetencyObjectives/{id}": {
      "get": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCompetencyObjectivesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentCompetencyObjective"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCompetencyObjective",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentCompetencyObjective\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCompetencyObjective"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCompetencyObjective"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCompetencyObjectiveById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCompetencyObjectives/deletes": {
      "get": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCompetencyObjectiveDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCompetencyObjectives/keyChanges": {
      "get": {
        "tags": [
          "studentCompetencyObjectives"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentCompetencyObjectives",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCompetencyObjectiveKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentContactAssociations": {
      "get": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "contactUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a contact.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "relationDescriptor",
            "in": "query",
            "description": "The nature of an individual's relationship to a student, primarily used to capture family relationships.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "contactPriority",
            "in": "query",
            "description": "The numeric order of the preferred sequence or priority of contact.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contactRestrictions",
            "in": "query",
            "description": "Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
            "schema": {
              "maxLength": 250,
              "type": "string"
            }
          },
          {
            "name": "emergencyContactStatus",
            "in": "query",
            "description": "Indicator of whether the person is a designated emergency contact for the student.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legalGuardian",
            "in": "query",
            "description": "Indicator of whether the person is a legal guardian for the student.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "livesWith",
            "in": "query",
            "description": "Indicator of whether the student lives with the associated contact.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "primaryContactStatus",
            "in": "query",
            "description": "Indicator of whether the person is a primary contact for the student.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentContactAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentContactAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentContactAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentContactAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentContactAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentContactAssociations/{id}": {
      "get": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentContactAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentContactAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentContactAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentContactAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentContactAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentContactAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentContactAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentContactAssociations/deletes": {
      "get": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentContactAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentContactAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentContactAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentContactAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentContactAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCTEProgramAssociations": {
      "get": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentCTEProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "technicalSkillsAssessmentDescriptor",
            "in": "query",
            "description": "Results of technical skills assessment aligned with industry recognized standards.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "nonTraditionalGenderStatus",
            "in": "query",
            "description": "Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "privateCTEProgram",
            "in": "query",
            "description": "Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentCTEProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentCTEProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentCTEProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCTEProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCTEProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCTEProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentCTEProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentCTEProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentCTEProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentCTEProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentCTEProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentCTEProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentCTEProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCTEProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentCTEProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCTEProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentCTEProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentCTEProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentCTEProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentCTEProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations": {
      "get": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentDisciplineIncidentBehaviorAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "behaviorDescriptor",
            "in": "query",
            "description": "Describes behavior by category.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "incidentIdentifier",
            "in": "query",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "behaviorDetailedDescription",
            "in": "query",
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentDisciplineIncidentBehaviorAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentDisciplineIncidentBehaviorAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentDisciplineIncidentBehaviorAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations/{id}": {
      "get": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentDisciplineIncidentBehaviorAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentDisciplineIncidentBehaviorAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentDisciplineIncidentBehaviorAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentDisciplineIncidentBehaviorAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentDisciplineIncidentBehaviorAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations/deletes": {
      "get": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentDisciplineIncidentBehaviorAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentBehaviorAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentDisciplineIncidentBehaviorAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentDisciplineIncidentBehaviorAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations": {
      "get": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentDisciplineIncidentNonOffenderAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "incidentIdentifier",
            "in": "query",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentDisciplineIncidentNonOffenderAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentDisciplineIncidentNonOffenderAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentDisciplineIncidentNonOffenderAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations/{id}": {
      "get": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentDisciplineIncidentNonOffenderAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentDisciplineIncidentNonOffenderAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentDisciplineIncidentNonOffenderAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentDisciplineIncidentNonOffenderAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentDisciplineIncidentNonOffenderAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations/deletes": {
      "get": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentDisciplineIncidentNonOffenderAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentDisciplineIncidentNonOffenderAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentDisciplineIncidentNonOffenderAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentDisciplineIncidentNonOffenderAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations": {
      "get": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "barrierToInternetAccessInResidenceDescriptor",
            "in": "query",
            "description": "An indication of the barrier to having internet access in the student s primary place of residence.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "internetAccessTypeInResidenceDescriptor",
            "in": "query",
            "description": "The primary type of internet service used in the student s primary place of residence.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "internetPerformanceInResidenceDescriptor",
            "in": "query",
            "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "limitedEnglishProficiencyDescriptor",
            "in": "query",
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "primaryLearningDeviceAccessDescriptor",
            "in": "query",
            "description": "An indication of whether the primary learning device is shared or not shared with another individual.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "primaryLearningDeviceAwayFromSchoolDescriptor",
            "in": "query",
            "description": "The type of device the student uses most often to complete learning activities away from school.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "primaryLearningDeviceProviderDescriptor",
            "in": "query",
            "description": "The provider of the primary learning device.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "sexDescriptor",
            "in": "query",
            "description": "The student's birth sex as reported to the education organization.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "supporterMilitaryConnectionDescriptor",
            "in": "query",
            "description": "Military connection of the person/people whom the student is a dependent of.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "genderIdentity",
            "in": "query",
            "description": "The student's gender as last reported to the education organization.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "hispanicLatinoEthnicity",
            "in": "query",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "internetAccessInResidence",
            "in": "query",
            "description": "An indication of whether the student is able to access the internet in their primary place of residence.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loginId",
            "in": "query",
            "description": "The login ID for the user; used for security access control interface.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "profileThumbnail",
            "in": "query",
            "description": "Locator reference for the student photo. The specification for that reference is left to local definition.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentEducationOrganizationAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentEducationOrganizationAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentEducationOrganizationAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations/{id}": {
      "get": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentEducationOrganizationAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentEducationOrganizationAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentEducationOrganizationAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentEducationOrganizationAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentEducationOrganizationAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations/deletes": {
      "get": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentEducationOrganizationAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentEducationOrganizationAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations": {
      "get": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentEducationOrganizationResponsibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "responsibilityDescriptor",
            "in": "query",
            "description": "Indications of an education organization's responsibility for a student, such as accountability, attendance, funding, etc.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the start date of an education organization's responsibility for a student.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day, and year of the end date of an education organization's responsibility for a student.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentEducationOrganizationResponsibilityAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentEducationOrganizationResponsibilityAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentEducationOrganizationResponsibilityAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations/{id}": {
      "get": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentEducationOrganizationResponsibilityAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentEducationOrganizationResponsibilityAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentEducationOrganizationResponsibilityAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentEducationOrganizationResponsibilityAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentEducationOrganizationResponsibilityAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations/deletes": {
      "get": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentEducationOrganizationResponsibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentEducationOrganizationResponsibilityAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentEducationOrganizationResponsibilityAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentEducationOrganizationResponsibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentGradebookEntries": {
      "get": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "gradebookEntryIdentifier",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace URI for the source of the gradebook entry.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "assignmentLateStatusDescriptor",
            "in": "query",
            "description": "Status of whether the assignment was submitted after the due date and/or marked as.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "competencyLevelDescriptor",
            "in": "query",
            "description": "The competency level assessed for the student for the referenced learning objective.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "submissionStatusDescriptor",
            "in": "query",
            "description": "The status of the student's submission.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "dateFulfilled",
            "in": "query",
            "description": "The date an assignment was turned in or the date of an assessment.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "diagnosticStatement",
            "in": "query",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "letterGradeEarned",
            "in": "query",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "numericGradeEarned",
            "in": "query",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pointsEarned",
            "in": "query",
            "description": "The points earned for the submission. With extra credit, the points earned may exceed the max points.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "timeFulfilled",
            "in": "query",
            "description": "The time an assignment was turned in on the date fulfilled.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentGradebookEntry"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentGradebookEntry",
        "requestBody": {
          "description": "The JSON representation of the \"studentGradebookEntry\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentGradebookEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentGradebookEntry"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentGradebookEntries/{id}": {
      "get": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentGradebookEntriesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentGradebookEntry"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentGradebookEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentGradebookEntry\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentGradebookEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentGradebookEntry"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentGradebookEntryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentGradebookEntries/deletes": {
      "get": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentGradebookEntryDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentGradebookEntries/keyChanges": {
      "get": {
        "tags": [
          "studentGradebookEntries"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentGradebookEntries",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentGradebookEntryKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentHomelessProgramAssociations": {
      "get": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentHomelessProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "homelessPrimaryNighttimeResidenceDescriptor",
            "in": "query",
            "description": "The primary nighttime residence of the student at the time the student is identified as homeless.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "awaitingFosterCare",
            "in": "query",
            "description": "State defined definition for awaiting foster care.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "homelessUnaccompaniedYouth",
            "in": "query",
            "description": "A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentHomelessProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentHomelessProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentHomelessProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentHomelessProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentHomelessProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentHomelessProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentHomelessProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentHomelessProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentHomelessProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentHomelessProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentHomelessProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentHomelessProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentHomelessProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentHomelessProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentHomelessProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentHomelessProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentHomelessProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentHomelessProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentHomelessProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentHomelessProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAssociations": {
      "get": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentInterventionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "interventionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "cohortIdentifier",
            "in": "query",
            "description": "The name or ID for the cohort.",
            "schema": {
              "maxLength": 36,
              "type": "string"
            }
          },
          {
            "name": "cohortEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "diagnosticStatement",
            "in": "query",
            "description": "A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "dosage",
            "in": "query",
            "description": "The duration of time in minutes for which the student was assigned to participate in the intervention.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentInterventionAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentInterventionAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentInterventionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentInterventionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentInterventionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAssociations/{id}": {
      "get": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentInterventionAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentInterventionAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentInterventionAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentInterventionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentInterventionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentInterventionAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentInterventionAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAssociations/deletes": {
      "get": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentInterventionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentInterventionAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentInterventionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents": {
      "get": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentInterventionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "attendanceEventCategoryDescriptor",
            "in": "query",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Date for this attendance event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "interventionIdentificationCode",
            "in": "query",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "attendanceEventReason",
            "in": "query",
            "description": "The reported reason for a student's absence.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "eventDuration",
            "in": "query",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interventionDuration",
            "in": "query",
            "description": "The duration in minutes in which the student participated in the intervention during this instance.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentInterventionAttendanceEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentInterventionAttendanceEvent",
        "requestBody": {
          "description": "The JSON representation of the \"studentInterventionAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentInterventionAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentInterventionAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents/{id}": {
      "get": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentInterventionAttendanceEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentInterventionAttendanceEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentInterventionAttendanceEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentInterventionAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentInterventionAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentInterventionAttendanceEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentInterventionAttendanceEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents/deletes": {
      "get": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentInterventionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAttendanceEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentInterventionAttendanceEvents/keyChanges": {
      "get": {
        "tags": [
          "studentInterventionAttendanceEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentInterventionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAttendanceEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations": {
      "get": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentLanguageInstructionProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "dosage",
            "in": "query",
            "description": "The duration of time in minutes for which the student was assigned to participate in the program.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "englishLearnerParticipation",
            "in": "query",
            "description": "An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentLanguageInstructionProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentLanguageInstructionProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentLanguageInstructionProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentLanguageInstructionProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentLanguageInstructionProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentLanguageInstructionProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentLanguageInstructionProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentLanguageInstructionProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentLanguageInstructionProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentLanguageInstructionProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentLanguageInstructionProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentLanguageInstructionProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentLanguageInstructionProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentLanguageInstructionProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations": {
      "get": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentMigrantEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "continuationOfServicesReasonDescriptor",
            "in": "query",
            "description": "The \"continuation of services\" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "eligibilityExpirationDate",
            "in": "query",
            "description": "The eligibility expiration date is used to determine end of eligibility and to account for a child's eligibility expiring earlier than 36 months from the child's QAD. A child's eligibility would end earlier than 36 months from the child's QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states' requirements), or if the child passes away.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "lastQualifyingMove",
            "in": "query",
            "description": "Date the last qualifying move occurred; used to compute MEP status.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "priorityForServices",
            "in": "query",
            "description": "Report migratory children who are classified as having \"priority for services\" because they are failing, or most at risk of failing to meet the state's challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "qualifyingArrivalDate",
            "in": "query",
            "description": "The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child's eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "stateResidencyDate",
            "in": "query",
            "description": "The verified state residency for the student.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "usInitialEntry",
            "in": "query",
            "description": "The month, day, and year on which the student first entered the U.S.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "usInitialSchoolEntry",
            "in": "query",
            "description": "The month, day, and year on which the student first entered a U.S. school.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "usMostRecentEntry",
            "in": "query",
            "description": "The month, day, and year of the student's most recent entry into the U.S.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentMigrantEducationProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentMigrantEducationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentMigrantEducationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentMigrantEducationProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentMigrantEducationProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentMigrantEducationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentMigrantEducationProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentMigrantEducationProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentMigrantEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentMigrantEducationProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentMigrantEducationProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentMigrantEducationProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentMigrantEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentMigrantEducationProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations": {
      "get": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentNeglectedOrDelinquentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "neglectedOrDelinquentProgramDescriptor",
            "in": "query",
            "description": "The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "elaProgressLevelDescriptor",
            "in": "query",
            "description": "The progress measured from pre- to post- test for ELA.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "mathematicsProgressLevelDescriptor",
            "in": "query",
            "description": "The progress measured from pre- to post-test for Mathematics.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentNeglectedOrDelinquentProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentNeglectedOrDelinquentProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentNeglectedOrDelinquentProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentNeglectedOrDelinquentProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentNeglectedOrDelinquentProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentNeglectedOrDelinquentProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentNeglectedOrDelinquentProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentNeglectedOrDelinquentProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentNeglectedOrDelinquentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentNeglectedOrDelinquentProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentNeglectedOrDelinquentProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentNeglectedOrDelinquentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAssociations": {
      "get": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAttendanceEvents": {
      "get": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "attendanceEventCategoryDescriptor",
            "in": "query",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Date for this attendance event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "attendanceEventReason",
            "in": "query",
            "description": "The reported reason for a student's absence.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "eventDuration",
            "in": "query",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "programAttendanceDuration",
            "in": "query",
            "description": "The duration in minutes of the program attendance event.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentProgramAttendanceEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramAttendanceEvent",
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAttendanceEvents/{id}": {
      "get": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramAttendanceEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentProgramAttendanceEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramAttendanceEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramAttendanceEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramAttendanceEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAttendanceEvents/deletes": {
      "get": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentProgramAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAttendanceEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramAttendanceEvents/keyChanges": {
      "get": {
        "tags": [
          "studentProgramAttendanceEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentProgramAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAttendanceEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramEvaluations": {
      "get": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "evaluationDate",
            "in": "query",
            "description": "The month, day, and year on which the evaluation was conducted.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationPeriodDescriptor",
            "in": "query",
            "description": "The name of the period for the program evaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTitle",
            "in": "query",
            "description": "An assigned unique identifier for the student program evaluation.",
            "schema": {
              "maxLength": 50,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEvaluationTypeDescriptor",
            "in": "query",
            "description": "The type of program evaluation conducted.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "staffEvaluatorStaffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staffevaluatorstaff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "summaryEvaluationRatingLevelDescriptor",
            "in": "query",
            "description": "The summary rating level achieved based upon the rating or score.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationDuration",
            "in": "query",
            "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "summaryEvaluationComment",
            "in": "query",
            "description": "Any comments about the summary evaluation to be captured.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "summaryEvaluationNumericRating",
            "in": "query",
            "description": "The numerical summary rating or score for the evaluation.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentProgramEvaluation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentProgramEvaluation",
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramEvaluation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramEvaluations/{id}": {
      "get": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentProgramEvaluationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentProgramEvaluation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentProgramEvaluation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentProgramEvaluation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentProgramEvaluation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentProgramEvaluation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentProgramEvaluationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramEvaluations/deletes": {
      "get": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramEvaluationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentProgramEvaluations/keyChanges": {
      "get": {
        "tags": [
          "studentProgramEvaluations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentProgramEvaluations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramEvaluationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAssociations": {
      "get": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "calendarCode",
            "in": "query",
            "description": "The identifier for the calendar.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The school year associated with the student's enrollment.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "graduationPlanTypeDescriptor",
            "in": "query",
            "description": "The type of academic plan the student is following for graduation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "graduationSchoolYear",
            "in": "query",
            "description": "The school year the student is expected to graduate.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "nextYearSchoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "classOfSchoolYear",
            "in": "query",
            "description": "Projected high school graduation year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "enrollmentTypeDescriptor",
            "in": "query",
            "description": "The type of enrollment reflected by the StudentSchoolAssociation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "entryGradeLevelReasonDescriptor",
            "in": "query",
            "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "entryTypeDescriptor",
            "in": "query",
            "description": "The process by which a student enters a school during a given academic session.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "exitWithdrawTypeDescriptor",
            "in": "query",
            "description": "The circumstances under which the student exited from membership in an educational institution.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "entryGradeLevelDescriptor",
            "in": "query",
            "description": "The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "nextYearGradeLevelDescriptor",
            "in": "query",
            "description": "The anticipated grade level for the student for the next school year.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "residencyStatusDescriptor",
            "in": "query",
            "description": "An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "schoolChoiceBasisDescriptor",
            "in": "query",
            "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "employedWhileEnrolled",
            "in": "query",
            "description": "An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "exitWithdrawDate",
            "in": "query",
            "description": "The recorded exit or withdraw date for the student.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fullTimeEquivalency",
            "in": "query",
            "description": "The full-time equivalent ratio for the student s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "primarySchool",
            "in": "query",
            "description": "Indicates if a given enrollment record should be considered the primary record for a student.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "repeatGradeIndicator",
            "in": "query",
            "description": "An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "schoolChoice",
            "in": "query",
            "description": "An indication of whether the student enrolled in this school under the provisions for public school choice",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "schoolChoiceTransfer",
            "in": "query",
            "description": "An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.",
            "schema": {
              "type": "boolean"
            },
            "x-Ed-Fi-isDeprecated": true,
            "x-Ed-Fi-deprecatedReasons": "Will be removed in Data Standard v7.0"
          },
          {
            "name": "termCompletionIndicator",
            "in": "query",
            "description": "Idicates whether or not a student completed the most recent school term.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSchoolAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAssociations/{id}": {
      "get": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSchoolAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putStudentSchoolAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAssociations/deletes": {
      "get": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentSchoolAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSchoolAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents": {
      "get": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "attendanceEventCategoryDescriptor",
            "in": "query",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Date for this attendance event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "arrivalTime",
            "in": "query",
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attendanceEventReason",
            "in": "query",
            "description": "The reported reason for a student's absence.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "departureTime",
            "in": "query",
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventDuration",
            "in": "query",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "schoolAttendanceDuration",
            "in": "query",
            "description": "The duration in minutes of the school attendance event.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSchoolAttendanceEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolAttendanceEvent",
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents/{id}": {
      "get": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolAttendanceEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSchoolAttendanceEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSchoolAttendanceEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolAttendanceEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolAttendanceEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents/deletes": {
      "get": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSchoolAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAttendanceEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolAttendanceEvents/keyChanges": {
      "get": {
        "tags": [
          "studentSchoolAttendanceEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSchoolAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAttendanceEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations": {
      "get": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSchoolFoodServiceProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "directCertification",
            "in": "query",
            "description": "Indicates that the student's National School Lunch Program (NSLP) eligibility has been determined through direct certification.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSchoolFoodServiceProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolFoodServiceProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolFoodServiceProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSchoolFoodServiceProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSchoolFoodServiceProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSchoolFoodServiceProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSchoolFoodServiceProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSchoolFoodServiceProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSchoolFoodServiceProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSchoolFoodServiceProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentSchoolFoodServiceProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSchoolFoodServiceProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAssociations": {
      "get": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "attemptStatusDescriptor",
            "in": "query",
            "description": "An indication of the student's completion status for the section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "repeatIdentifierDescriptor",
            "in": "query",
            "description": "An indication as to whether a student has previously taken a given course.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Month, day, and year of the withdrawal or exit of the student from the section.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "homeroomIndicator",
            "in": "query",
            "description": "Indicates the section is the student's homeroom. Homeroom period may the convention for taking daily attendance.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teacherStudentDataLinkExclusion",
            "in": "query",
            "description": "Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSectionAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSectionAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentSectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAssociations/{id}": {
      "get": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSectionAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSectionAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, if natural key values are being updated by the JSON body, those changes will be applied to the resource and will also cascade through to dependent resources.",
        "operationId": "putStudentSectionAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSectionAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        },
        "x-Ed-Fi-isUpdatable": true
      },
      "delete": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSectionAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAssociations/deletes": {
      "get": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentSectionAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAttendanceEvents": {
      "get": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSectionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "attendanceEventCategoryDescriptor",
            "in": "query",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eventDate",
            "in": "query",
            "description": "Date for this attendance event.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationalEnvironmentDescriptor",
            "in": "query",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "arrivalTime",
            "in": "query",
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attendanceEventReason",
            "in": "query",
            "description": "The reported reason for a student's absence.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "departureTime",
            "in": "query",
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventDuration",
            "in": "query",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionAttendanceDuration",
            "in": "query",
            "description": "The duration in minutes of the section attendance event.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSectionAttendanceEvent"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSectionAttendanceEvent",
        "requestBody": {
          "description": "The JSON representation of the \"studentSectionAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSectionAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSectionAttendanceEvent"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAttendanceEvents/{id}": {
      "get": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSectionAttendanceEventsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSectionAttendanceEvent"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSectionAttendanceEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSectionAttendanceEvent\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSectionAttendanceEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSectionAttendanceEvent"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSectionAttendanceEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAttendanceEvents/deletes": {
      "get": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSectionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAttendanceEventDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSectionAttendanceEvents/keyChanges": {
      "get": {
        "tags": [
          "studentSectionAttendanceEvents"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSectionAttendanceEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAttendanceEventKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSpecialEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "specialEducationExitReasonDescriptor",
            "in": "query",
            "description": "The reason why a person stops receiving special education services.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "specialEducationSettingDescriptor",
            "in": "query",
            "description": "The major instructional setting (more than 50 percent of a student's special education program).",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "ideaEligibility",
            "in": "query",
            "description": "Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "iepBeginDate",
            "in": "query",
            "description": "The effective date of the most recent IEP.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "iepEndDate",
            "in": "query",
            "description": "The end date of the most recent IEP.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "iepReviewDate",
            "in": "query",
            "description": "The date of the last IEP review.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "lastEvaluationDate",
            "in": "query",
            "description": "The date of the last special education evaluation.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "medicallyFragile",
            "in": "query",
            "description": "Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "multiplyDisabled",
            "in": "query",
            "description": "Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "schoolHoursPerWeek",
            "in": "query",
            "description": "Indicate the total number of hours of instructional time per week for the school that the student attends.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "specialEducationExitDate",
            "in": "query",
            "description": "The  month, day and year on which a person stops receiving special education services.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "specialEducationExitExplained",
            "in": "query",
            "description": "Explanation on why a person stops receiving special education services.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "specialEducationHoursPerWeek",
            "in": "query",
            "description": "The number of hours per week for special education instruction and therapy.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSpecialEducationProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentSpecialEducationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSpecialEducationProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSpecialEducationProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSpecialEducationProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSpecialEducationProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSpecialEducationProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSpecialEducationProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSpecialEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSpecialEducationProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentSpecialEducationProgramEligibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "consentToEvaluationReceivedDate",
            "in": "query",
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student's parent or guardian. This is the first day of the evaluation timeframe.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "eligibilityDelayReasonDescriptor",
            "in": "query",
            "description": "The reason why the eligibility determination was completed beyond the required timeframe.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "eligibilityEvaluationTypeDescriptor",
            "in": "query",
            "description": "Indicates if this is an initial evaluation or a reevaluation.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "evaluationDelayReasonDescriptor",
            "in": "query",
            "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "ideaPartDescriptor",
            "in": "query",
            "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "consentToEvaluationDate",
            "in": "query",
            "description": "The date on which the student's parent gave a consent (Parent Consent Date).",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "eligibilityConferenceDate",
            "in": "query",
            "description": "The month, day, and year when the eligibility conference is held between the parent(s)/guardian(s) and the educational organization responsible staff member(s) to review and make decision on special education related services eligibility.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "eligibilityDeterminationDate",
            "in": "query",
            "description": "Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child's eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "eligibilityEvaluationDate",
            "in": "query",
            "description": "Indicates the month, day, and year when the written individual evaluation report was completed.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "evaluationCompleteIndicator",
            "in": "query",
            "description": "Indicates the evaluation completed status.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "evaluationDelayDays",
            "in": "query",
            "description": "Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "evaluationLateReason",
            "in": "query",
            "description": "Refers to additional information for delay in doing the evaluation.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ideaIndicator",
            "in": "query",
            "description": "Indicates whether or not the student was determined eligible as a result of an evaluation.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "originalECIServicesDate",
            "in": "query",
            "description": "The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transitionConferenceDate",
            "in": "query",
            "description": "Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child's potential eligibility for early childhood special education (ECSE) services.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transitionNotificationDate",
            "in": "query",
            "description": "Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramEligibilityAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentSpecialEducationProgramEligibilityAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentSpecialEducationProgramEligibilityAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramEligibilityAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSpecialEducationProgramEligibilityAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations/{id}": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentSpecialEducationProgramEligibilityAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramEligibilityAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentSpecialEducationProgramEligibilityAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentSpecialEducationProgramEligibilityAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramEligibilityAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentSpecialEducationProgramEligibilityAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentSpecialEducationProgramEligibilityAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations/deletes": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentSpecialEducationProgramEligibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentSpecialEducationProgramEligibilityAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentSpecialEducationProgramEligibilityAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentSpecialEducationProgramEligibilityAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations": {
      "get": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getStudentTitleIPartAProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "beginDate",
            "in": "query",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programEducationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "titleIPartAParticipantDescriptor",
            "in": "query",
            "description": "An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postStudentTitleIPartAProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"studentTitleIPartAProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentTitleIPartAProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations/{id}": {
      "get": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getStudentTitleIPartAProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putStudentTitleIPartAProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"studentTitleIPartAProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "studentTitleIPartAProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteStudentTitleIPartAProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations/deletes": {
      "get": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesStudentTitleIPartAProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentTitleIPartAProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/studentTitleIPartAProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "studentTitleIPartAProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesStudentTitleIPartAProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_studentTitleIPartAProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveys": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The school year associated with the survey.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "surveyCategoryDescriptor",
            "in": "query",
            "description": "The category or type of survey.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numberAdministered",
            "in": "query",
            "description": "Number of persons to whom this survey was administered.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "surveyTitle",
            "in": "query",
            "description": "The title of the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_survey"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveys"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurvey",
        "requestBody": {
          "description": "The JSON representation of the \"survey\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_survey"
              }
            }
          },
          "required": true,
          "x-bodyName": "survey"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveys/{id}": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveysById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_survey"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveys"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurvey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"survey\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_survey"
              }
            }
          },
          "required": true,
          "x-bodyName": "survey"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveys"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveys/deletes": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveys/keyChanges": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCourseAssociations": {
      "get": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyCourseAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "courseCode",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a course.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyCourseAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyCourseAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveyCourseAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyCourseAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyCourseAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCourseAssociations/{id}": {
      "get": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyCourseAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyCourseAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyCourseAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyCourseAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyCourseAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyCourseAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyCourseAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCourseAssociations/deletes": {
      "get": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyCourseAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyCourseAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyCourseAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveyCourseAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyCourseAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyCourseAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyProgramAssociations": {
      "get": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programName",
            "in": "query",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "programTypeDescriptor",
            "in": "query",
            "description": "The type of program.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyProgramAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyProgramAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveyProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyProgramAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyProgramAssociations/{id}": {
      "get": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyProgramAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyProgramAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyProgramAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyProgramAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyProgramAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyProgramAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyProgramAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyProgramAssociations/deletes": {
      "get": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyProgramAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyProgramAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveyProgramAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyProgramAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyProgramAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestions": {
      "get": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "questionCode",
            "in": "query",
            "description": "The identifying code for the question, unique for the survey.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "questionFormDescriptor",
            "in": "query",
            "description": "The form or type of question.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "questionText",
            "in": "query",
            "description": "The text of the question.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyQuestion"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyQuestion",
        "requestBody": {
          "description": "The JSON representation of the \"surveyQuestion\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyQuestion"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyQuestion"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestions/{id}": {
      "get": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyQuestionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyQuestion"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyQuestion\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyQuestion"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyQuestion"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyQuestionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestions/deletes": {
      "get": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestions/keyChanges": {
      "get": {
        "tags": [
          "surveyQuestions"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyQuestions",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestionResponses": {
      "get": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyQuestionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "questionCode",
            "in": "query",
            "description": "The identifying code for the question, unique for the survey.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Additional information provided by the responder about the question in the survey.",
            "schema": {
              "maxLength": 1024,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noResponse",
            "in": "query",
            "description": "Indicates there was no response to the question.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyQuestionResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyQuestionResponse",
        "requestBody": {
          "description": "The JSON representation of the \"surveyQuestionResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyQuestionResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyQuestionResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestionResponses/{id}": {
      "get": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyQuestionResponsesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyQuestionResponse"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyQuestionResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyQuestionResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyQuestionResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyQuestionResponse"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyQuestionResponseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestionResponses/deletes": {
      "get": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyQuestionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionResponseDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyQuestionResponses/keyChanges": {
      "get": {
        "tags": [
          "surveyQuestionResponses"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyQuestionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionResponseKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponses": {
      "get": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "contactUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a contact.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "studentUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a student.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            }
          },
          {
            "name": "electronicMailAddress",
            "in": "query",
            "description": "Email address of the respondent.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "fullName",
            "in": "query",
            "description": "Full name of the respondent.",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location of the respondent, often a city, district, or school.",
            "schema": {
              "maxLength": 75,
              "type": "string"
            }
          },
          {
            "name": "responseDate",
            "in": "query",
            "description": "Date of the survey response.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "responseTime",
            "in": "query",
            "description": "The amount of time (in seconds) it took for the respondent to complete the survey.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponse",
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponses/{id}": {
      "get": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponsesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyResponse"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponse"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponses/deletes": {
      "get": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponses/keyChanges": {
      "get": {
        "tags": [
          "surveyResponses"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations": {
      "get": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponseEducationOrganizationTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponseEducationOrganizationTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponseEducationOrganizationTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponseEducationOrganizationTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponseEducationOrganizationTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseEducationOrganizationTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveyResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations": {
      "get": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponsePersonTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponsePersonTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponsePersonTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponsePersonTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponsePersonTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponsePersonTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponsePersonTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_surveyResponsePersonTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveyResponsePersonTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveyResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_surveyResponsePersonTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations": {
      "get": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveyResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveyResponseStaffTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponseStaffTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponseStaffTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveyResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveyResponseStaffTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveyResponseStaffTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveyResponseStaffTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveyResponseStaffTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveyResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseStaffTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveyResponseStaffTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveyResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveyResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseStaffTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySections": {
      "get": {
        "tags": [
          "surveySections"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveySection"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySections"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySection",
        "requestBody": {
          "description": "The JSON representation of the \"surveySection\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySection"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySection"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySections/{id}": {
      "get": {
        "tags": [
          "surveySections"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveySection"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySections"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySection\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySection"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySection"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySections"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySections/deletes": {
      "get": {
        "tags": [
          "surveySections"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySections/keyChanges": {
      "get": {
        "tags": [
          "surveySections"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySections",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionAssociations": {
      "get": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "localCourseCode",
            "in": "query",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolId",
            "in": "query",
            "description": "The identifier assigned to a school.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "schoolYear",
            "in": "query",
            "description": "The identifier for the school year.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sectionIdentifier",
            "in": "query",
            "description": "The local identifier assigned to a section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sessionName",
            "in": "query",
            "description": "The identifier for the calendar for the academic session.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveySectionAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionAssociations/{id}": {
      "get": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveySectionAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionAssociations/deletes": {
      "get": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveySectionAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySectionAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponses": {
      "get": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionRating",
            "in": "query",
            "description": "Numeric rating computed from the survey responses for the section.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveySectionResponse"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponse",
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponses/{id}": {
      "get": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponsesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveySectionResponse"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponse",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponse\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponse"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponse"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponses/deletes": {
      "get": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySectionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponses/keyChanges": {
      "get": {
        "tags": [
          "surveySectionResponses"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySectionResponses",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations": {
      "get": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "educationOrganizationId",
            "in": "query",
            "description": "The identifier assigned to an education organization.",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponseEducationOrganizationTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponseEducationOrganizationTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponseEducationOrganizationTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponseEducationOrganizationTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponseEducationOrganizationTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponseEducationOrganizationTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponseEducationOrganizationTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySectionResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseEducationOrganizationTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveySectionResponseEducationOrganizationTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySectionResponseEducationOrganizationTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations": {
      "get": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "personId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a person.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "sourceSystemDescriptor",
            "in": "query",
            "description": "This descriptor defines the originating record source system for the person.",
            "schema": {
              "maxLength": 306,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponsePersonTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponsePersonTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponsePersonTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponsePersonTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponsePersonTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponsePersonTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponsePersonTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponsePersonTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySectionResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tpdm/surveySectionResponsePersonTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveySectionResponsePersonTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySectionResponsePersonTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations": {
      "get": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves specific resources using the resource's property values (using the \"Get\" pattern).",
        "description": "This GET operation provides access to resources using the \"Get\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
        "operationId": "getSurveySectionResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "staffUniqueId",
            "in": "query",
            "description": "A unique alphanumeric code assigned to a staff.",
            "schema": {
              "maxLength": 32,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Namespace for the survey.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyIdentifier",
            "in": "query",
            "description": "The unique survey identifier from the survey tool.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveyResponseIdentifier",
            "in": "query",
            "description": "The identifier of the survey typically from the survey application.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "surveySectionTitle",
            "in": "query",
            "description": "The title or label for the survey section.",
            "schema": {
              "maxLength": 255,
              "type": "string"
            },
            "x-Ed-Fi-isIdentity": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
        "description": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update). Clients should NOT include the resource \"id\" in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.",
        "operationId": "postSurveySectionResponseStaffTargetAssociation",
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponseStaffTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponseStaffTargetAssociation"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Updated"
          },
          "201": {
            "$ref": "#/components/responses/Created"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations/{id}": {
      "get": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSurveySectionResponseStaffTargetAssociationsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/If-None-Match"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "put": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Updates a resource based on the resource identifier.",
        "description": "The PUT operation is used to update a resource by identifier. If the resource identifier (\"id\") is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation, so the recommendation is to use POST as that supports upsert behavior.",
        "operationId": "putSurveySectionResponseStaffTargetAssociation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON representation of the \"surveySectionResponseStaffTargetAssociation\" resource to be created or updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
              }
            }
          },
          "required": true,
          "x-bodyName": "surveySectionResponseStaffTargetAssociation"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/Updated"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Deletes an existing resource using the resource identifier.",
        "description": "The DELETE operation is used to delete an existing resource by identifier. If the resource doesn't exist, an error will result (the resource will not be found).",
        "operationId": "deleteSurveySectionResponseStaffTargetAssociationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier that uniquely identifies the resource.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "description": "Method Is Not Allowed. When the Use-Snapshot header is set to true, the method is not allowed."
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "412": {
            "$ref": "#/components/responses/PreconditionFailed"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations/deletes": {
      "get": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves deleted resources based on change version.",
        "description": "This operation is used to retrieve identifying information about resources that have been deleted.",
        "operationId": "deletesSurveySectionResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseStaffTargetAssociationDelete"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/ed-fi/surveySectionResponseStaffTargetAssociations/keyChanges": {
      "get": {
        "tags": [
          "surveySectionResponseStaffTargetAssociations"
        ],
        "summary": "Retrieves resources key changes based on change version.",
        "description": "This operation is used to retrieve identifying information about resources whose key values have been changed.",
        "operationId": "keyChangesSurveySectionResponseStaffTargetAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/MinChangeVersion"
          },
          {
            "$ref": "#/components/parameters/MaxChangeVersion"
          },
          {
            "$ref": "#/components/parameters/totalCount"
          },
          {
            "name": "Use-Snapshot",
            "in": "header",
            "description": "Indicates if the configured Snapshot should be used.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKeyChange"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundUseSnapshot"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "credentialExtensions": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_credentialExtension"
          }
        }
      },
      "edFi_academicWeek": {
        "required": [
          "weekIdentifier",
          "beginDate",
          "endDate",
          "totalInstructionalDays",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "weekIdentifier": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string",
            "description": "The school label for the week.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "beginDate": {
            "type": "string",
            "description": "The start date for the academic week.",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the academic week.",
            "format": "date"
          },
          "totalInstructionalDays": {
            "minimum": 0,
            "type": "integer",
            "description": "The total instructional days during the academic week.",
            "format": "int32"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_academicWeekReference": {
        "required": [
          "schoolId",
          "weekIdentifier"
        ],
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "weekIdentifier": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string",
            "description": "The school label for the week.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_accountabilityRating": {
        "required": [
          "ratingTitle",
          "rating",
          "educationOrganizationReference",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "ratingTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the rating.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "rating": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "An accountability rating level, designation, or assessment."
          },
          "ratingDate": {
            "type": "string",
            "description": "The date the rating was awarded.",
            "format": "date",
            "x-nullable": true
          },
          "ratingOrganization": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The organization that assessed the rating.",
            "x-nullable": true
          },
          "ratingProgram": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The program associated with the accountability rating (e.g., NCLB, AEIS).",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessment": {
        "required": [
          "assessmentIdentifier",
          "namespace",
          "assessmentTitle",
          "academicSubjects"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentAcademicSubject"
            },
            "description": "An unordered collection of assessmentAcademicSubjects. The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment."
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "adaptiveAssessment": {
            "type": "boolean",
            "description": "Indicates that the assessment is adaptive.",
            "x-nullable": true
          },
          "assessedGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentAssessedGradeLevel"
            },
            "description": "An unordered collection of assessmentAssessedGradeLevels. The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level."
          },
          "assessmentCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of an assessment based on format and content.",
            "x-nullable": true
          },
          "assessmentFamily": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The assessment family this assessment is a member of.",
            "x-nullable": true
          },
          "assessmentForm": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.",
            "x-nullable": true
          },
          "assessmentTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or name of the assessment."
          },
          "assessmentVersion": {
            "type": "integer",
            "description": "The version identifier for the assessment.",
            "format": "int32",
            "x-nullable": true
          },
          "contentStandard": {
            "$ref": "#/components/schemas/edFi_assessmentContentStandard"
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentIdentificationCode"
            },
            "description": "An unordered collection of assessmentIdentificationCodes. A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity."
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentLanguage"
            },
            "description": "An unordered collection of assessmentLanguages. An indication of the languages in which the assessment is designed."
          },
          "maxRawScore": {
            "type": "number",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "x-nullable": true
          },
          "nomenclature": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Reflects the specific nomenclature used for assessment.",
            "x-nullable": true
          },
          "performanceLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentPerformanceLevel"
            },
            "description": "An unordered collection of assessmentPerformanceLevels. Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores."
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentPeriod"
            },
            "description": "An unordered collection of assessmentPeriods. The period or window in which an assessment is supposed to be administered."
          },
          "platformTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentPlatformType"
            },
            "description": "An unordered collection of assessmentPlatformTypes. The platforms with which the assessment may be delivered."
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentProgram"
            },
            "description": "An unordered collection of assessmentPrograms. The programs associated with the assessment."
          },
          "revisionDate": {
            "type": "string",
            "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.",
            "format": "date",
            "x-nullable": true
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentScore"
            },
            "description": "An unordered collection of assessmentScores. Definition of the scores to be expected from this assessment."
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentSection"
            },
            "description": "An unordered collection of assessmentSections. The Section(s) to which the assessment is associated."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_assessmentAssessedGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_assessmentContentStandard": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "publicationStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The beginning of the period during which this learning standard document is intended for use.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The end of the period during which this learning standard document is intended for use.",
            "format": "date",
            "x-nullable": true
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this content was first published.",
            "format": "date",
            "x-nullable": true
          },
          "publicationYear": {
            "type": "integer",
            "description": "The year at which this content was first published.",
            "format": "int32",
            "x-nullable": true
          },
          "title": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name of the content standard, for example Common Core."
          },
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "An unambiguous reference to the standards using a network-resolvable URI.",
            "x-nullable": true
          },
          "version": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The version identifier for the content.",
            "x-nullable": true
          },
          "mandatingEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentContentStandardAuthor"
            },
            "description": "An unordered collection of assessmentContentStandardAuthors. The person or organization chiefly responsible for the intellectual content of the standard."
          }
        }
      },
      "edFi_assessmentContentStandardAuthor": {
        "required": [
          "author"
        ],
        "type": "object",
        "properties": {
          "author": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The person or organization chiefly responsible for the intellectual content of the standard.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_assessmentIdentificationCode": {
        "required": [
          "assessmentIdentificationSystemDescriptor",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "assessmentIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the assessment identification code.",
            "x-nullable": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity."
          }
        }
      },
      "edFi_assessmentItem": {
        "required": [
          "identificationCode",
          "assessmentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/edFi_assessmentReference"
          },
          "assessmentItemCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Category or type of the assessment item.",
            "x-nullable": true
          },
          "assessmentItemURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.",
            "x-nullable": true
          },
          "expectedTimeAssessed": {
            "maxLength": 30,
            "type": "string",
            "description": "The duration of time allotted for the assessment item.",
            "x-nullable": true
          },
          "itemText": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The text of the item.",
            "x-nullable": true
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentItemLearningStandard"
            },
            "description": "An unordered collection of assessmentItemLearningStandards. Learning standard tested by this item."
          },
          "maxRawScore": {
            "type": "number",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "x-nullable": true
          },
          "nomenclature": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Reflects the specific nomenclature used for assessment item.",
            "x-nullable": true
          },
          "possibleResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentItemPossibleResponse"
            },
            "description": "An unordered collection of assessmentItemPossibleResponses. A possible response to an assessment item."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentItemLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_assessmentItemPossibleResponse": {
        "required": [
          "responseValue"
        ],
        "type": "object",
        "properties": {
          "responseValue": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).",
            "x-Ed-Fi-isIdentity": true
          },
          "correctResponse": {
            "type": "boolean",
            "description": "Indicates the response is correct.",
            "x-nullable": true
          },
          "responseDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Additional text provided to define the response value.",
            "x-nullable": true
          }
        }
      },
      "edFi_assessmentItemReference": {
        "required": [
          "assessmentIdentifier",
          "identificationCode",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_assessmentLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the languages in which the assessment is designed.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_assessmentPerformanceLevel": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "performanceLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The performance level(s) defined for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score to make the indicated level of performance.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score required to make the indicated level of performance.",
            "x-nullable": true
          },
          "performanceLevelIndicatorName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "x-nullable": true
          }
        }
      },
      "edFi_assessmentPeriod": {
        "required": [
          "assessmentPeriodDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the assessment is to be administered.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the assessment is to be administered.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_assessmentPlatformType": {
        "required": [
          "platformTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "platformTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The platforms with which the assessment may be delivered.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_assessmentProgram": {
        "required": [
          "programReference"
        ],
        "type": "object",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_assessmentReference": {
        "required": [
          "assessmentIdentifier",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_assessmentScore": {
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score possible on the assessment.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score possible on the assessment.",
            "x-nullable": true
          }
        }
      },
      "edFi_assessmentScoreRangeLearningStandard": {
        "required": [
          "scoreRangeId",
          "maximumScore",
          "minimumScore",
          "learningStandards",
          "assessmentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_assessmentScoreRangeLearningStandardLearningStandard"
            },
            "description": "An unordered collection of assessmentScoreRangeLearningStandardLearningStandards. Learning standard associated with the score range."
          },
          "scoreRangeId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/edFi_assessmentReference"
          },
          "objectiveAssessmentReference": {
            "$ref": "#/components/schemas/edFi_objectiveAssessmentReference"
          },
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score in the score range."
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score in the score range."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_assessmentScoreRangeLearningStandardLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_assessmentSection": {
        "required": [
          "sectionReference"
        ],
        "type": "object",
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          }
        }
      },
      "edFi_balanceSheetDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account balance sheet dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account balance sheet dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_balanceSheetDimensionReportingTag"
            },
            "description": "An unordered collection of balanceSheetDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_balanceSheetDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account balance sheet dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_balanceSheetDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_bellSchedule": {
        "required": [
          "bellScheduleName",
          "classPeriods",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "bellScheduleName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Name or title of the bell schedule.",
            "x-Ed-Fi-isIdentity": true
          },
          "classPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_bellScheduleClassPeriod"
            },
            "description": "An unordered collection of bellScheduleClassPeriods. The class periods that compose this bell schedule."
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "alternateDayName": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "An alternate name for the day (e.g., Red, Blue).",
            "x-nullable": true
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_bellScheduleDate"
            },
            "description": "An unordered collection of bellScheduleDates. The dates for which the bell schedule applies."
          },
          "endTime": {
            "type": "string",
            "description": "An indication of the time of day the bell schedule ends.",
            "x-nullable": true
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_bellScheduleGradeLevel"
            },
            "description": "An unordered collection of bellScheduleGradeLevels. The grade levels the particular bell schedule applies to."
          },
          "startTime": {
            "type": "string",
            "description": "An indication of the time of day the bell schedule begins.",
            "x-nullable": true
          },
          "totalInstructionalTime": {
            "type": "integer",
            "description": "The total instructional time in minutes per day for the bell schedule.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_bellScheduleClassPeriod": {
        "required": [
          "classPeriodReference"
        ],
        "type": "object",
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/edFi_classPeriodReference"
          }
        }
      },
      "edFi_bellScheduleDate": {
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The dates for which the bell schedule applies.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_bellScheduleGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels the particular bell schedule applies to.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_calendar": {
        "required": [
          "calendarCode",
          "calendarTypeDescriptor",
          "schoolReference",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "calendarTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the type of calendar."
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_calendarGradeLevel"
            },
            "description": "An unordered collection of calendarGradeLevels. Indicates the grade level associated with the calendar."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_calendarDate": {
        "required": [
          "date",
          "calendarEvents",
          "calendarReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "calendarEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_calendarDateCalendarEvent"
            },
            "description": "An unordered collection of calendarDateCalendarEvents. The type of scheduled or unscheduled event for the day."
          },
          "date": {
            "type": "string",
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "calendarReference": {
            "$ref": "#/components/schemas/edFi_calendarReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_calendarDateCalendarEvent": {
        "required": [
          "calendarEventDescriptor"
        ],
        "type": "object",
        "properties": {
          "calendarEventDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of scheduled or unscheduled event for the day.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_calendarDateReference": {
        "required": [
          "calendarCode",
          "date",
          "schoolId",
          "schoolYear"
        ],
        "type": "object",
        "properties": {
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "date": {
            "type": "string",
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year associated with the calendar.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_calendarGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the grade level associated with the calendar.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_calendarReference": {
        "required": [
          "calendarCode",
          "schoolId",
          "schoolYear"
        ],
        "type": "object",
        "properties": {
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year associated with the calendar.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_chartOfAccount": {
        "required": [
          "accountIdentifier",
          "fiscalYear",
          "accountTypeDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "balanceSheetDimensionReference": {
            "$ref": "#/components/schemas/edFi_balanceSheetDimensionReference"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "functionDimensionReference": {
            "$ref": "#/components/schemas/edFi_functionDimensionReference"
          },
          "fundDimensionReference": {
            "$ref": "#/components/schemas/edFi_fundDimensionReference"
          },
          "objectDimensionReference": {
            "$ref": "#/components/schemas/edFi_objectDimensionReference"
          },
          "operationalUnitDimensionReference": {
            "$ref": "#/components/schemas/edFi_operationalUnitDimensionReference"
          },
          "programDimensionReference": {
            "$ref": "#/components/schemas/edFi_programDimensionReference"
          },
          "projectDimensionReference": {
            "$ref": "#/components/schemas/edFi_projectDimensionReference"
          },
          "sourceDimensionReference": {
            "$ref": "#/components/schemas/edFi_sourceDimensionReference"
          },
          "accountName": {
            "maxLength": 100,
            "type": "string",
            "description": "A descriptive name for the account.",
            "x-nullable": true
          },
          "accountTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of account used in accounting such as revenue, expenditure, or balance sheet."
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_chartOfAccountReportingTag"
            },
            "description": "An unordered collection of chartOfAccountReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_chartOfAccountReference": {
        "required": [
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_chartOfAccountReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.",
            "x-Ed-Fi-isIdentity": true
          },
          "tagValue": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The value associated with the reporting tag.",
            "x-nullable": true
          }
        }
      },
      "edFi_classPeriod": {
        "required": [
          "classPeriodName",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "classPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "meetingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_classPeriodMeetingTime"
            },
            "description": "An unordered collection of classPeriodMeetingTimes. The meeting time(s) for a class period."
          },
          "officialAttendancePeriod": {
            "type": "boolean",
            "description": "Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_classPeriodMeetingTime": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "endTime": {
            "type": "string",
            "description": "An indication of the time of day the meeting time ends.",
            "x-Ed-Fi-isIdentity": true
          },
          "startTime": {
            "type": "string",
            "description": "An indication of the time of day the meeting time begins.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_classPeriodReference": {
        "required": [
          "classPeriodName",
          "schoolId"
        ],
        "type": "object",
        "properties": {
          "classPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_cohort": {
        "required": [
          "cohortIdentifier",
          "cohortTypeDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "cohortIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The name or ID for the cohort.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The academic subject associated with an academic intervention.",
            "x-nullable": true
          },
          "cohortDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The description of the cohort and its purpose.",
            "x-nullable": true
          },
          "cohortScopeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The scope of cohort (e.g., school, district, classroom).",
            "x-nullable": true
          },
          "cohortTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of cohort (e.g., academic intervention, classroom breakout)."
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_cohortProgram"
            },
            "description": "An unordered collection of cohortPrograms. The (optional) program associated with this cohort (e.g., special education)."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_cohortProgram": {
        "required": [
          "programReference"
        ],
        "type": "object",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_cohortReference": {
        "required": [
          "cohortIdentifier",
          "educationOrganizationId"
        ],
        "type": "object",
        "properties": {
          "cohortIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The name or ID for the cohort.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_communityOrganization": {
        "required": [
          "communityOrganizationId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "communityOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to a community organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_communityOrganizationReference": {
        "required": [
          "communityOrganizationId"
        ],
        "type": "object",
        "properties": {
          "communityOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to a community organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_communityProvider": {
        "required": [
          "communityProviderId",
          "nameOfInstitution",
          "providerCategoryDescriptor",
          "providerStatusDescriptor",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "communityProviderId": {
            "type": "integer",
            "description": "The identifier assigned to a community provider.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "communityOrganizationReference": {
            "$ref": "#/components/schemas/edFi_communityOrganizationReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "licenseExemptIndicator": {
            "type": "boolean",
            "description": "An indication of whether the provider is exempt from having a license.",
            "x-nullable": true
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "providerCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the category of the provider."
          },
          "providerProfitabilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the profitability status of the provider.",
            "x-nullable": true
          },
          "providerStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the status of the provider."
          },
          "schoolIndicator": {
            "type": "boolean",
            "description": "An indication of whether the community provider is a school.",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_communityProviderLicense": {
        "required": [
          "licenseIdentifier",
          "licensingOrganization",
          "licenseTypeDescriptor",
          "licenseEffectiveDate",
          "communityProviderReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "licenseIdentifier": {
            "maxLength": 36,
            "type": "string",
            "description": "The unique identifier issued by the licensing organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "licensingOrganization": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The organization issuing the license.",
            "x-Ed-Fi-isIdentity": true
          },
          "communityProviderReference": {
            "$ref": "#/components/schemas/edFi_communityProviderReference"
          },
          "authorizedFacilityCapacity": {
            "type": "integer",
            "description": "The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.",
            "format": "int32",
            "x-nullable": true
          },
          "licenseEffectiveDate": {
            "type": "string",
            "description": "The month, day, and year on which a license is active or becomes effective.",
            "format": "date"
          },
          "licenseExpirationDate": {
            "type": "string",
            "description": "The month, day, and year on which a license will expire.",
            "format": "date",
            "x-nullable": true
          },
          "licenseIssueDate": {
            "type": "string",
            "description": "The month, day, and year on which an active license was issued.",
            "format": "date",
            "x-nullable": true
          },
          "licenseStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the status of the license.",
            "x-nullable": true
          },
          "licenseTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the category of the license."
          },
          "oldestAgeAuthorizedToServe": {
            "type": "integer",
            "description": "The oldest age of children a provider is authorized or licensed to serve.",
            "format": "int32",
            "x-nullable": true
          },
          "youngestAgeAuthorizedToServe": {
            "type": "integer",
            "description": "The youngest age of children a provider is authorized or licensed to serve.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_communityProviderReference": {
        "required": [
          "communityProviderId"
        ],
        "type": "object",
        "properties": {
          "communityProviderId": {
            "type": "integer",
            "description": "The identifier assigned to a community provider.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_competencyObjective": {
        "required": [
          "objectiveGradeLevelDescriptor",
          "objective",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "objective": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The designated title of the competency objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level for which the competency objective is targeted.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "competencyObjectiveId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The Identifier for the competency objective.",
            "x-nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The description of the student competency objective.",
            "x-nullable": true
          },
          "successCriteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_competencyObjectiveReference": {
        "required": [
          "educationOrganizationId",
          "objective",
          "objectiveGradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The designated title of the competency objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level for which the competency objective is targeted.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_contact": {
        "required": [
          "contactUniqueId",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "contactUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a contact.",
            "x-Ed-Fi-isIdentity": true
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactAddress"
            },
            "description": "An unordered collection of contactAddresses. Contact's address, if different from the student address."
          },
          "electronicMails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactElectronicMail"
            },
            "description": "An unordered collection of contactElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs."
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "genderIdentity": {
            "maxLength": 60,
            "type": "string",
            "description": "The gender the contact identifies themselves as.",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "highestCompletedLevelOfEducationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "x-nullable": true
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactInternationalAddress"
            },
            "description": "An unordered collection of contactInternationalAddresses. The set of elements that describes an international address."
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactLanguage"
            },
            "description": "An unordered collection of contactLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes."
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "loginId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The login ID for the user; used for security access control interface.",
            "x-nullable": true
          },
          "maidenName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The individual's maiden name.",
            "x-nullable": true
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "otherNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactOtherName"
            },
            "description": "An unordered collection of contactOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person."
          },
          "personalIdentificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactPersonalIdentificationDocument"
            },
            "description": "An unordered collection of contactPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc."
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          },
          "preferredFirstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The first name the individual prefers, if different from their legal first name",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The last name the individual prefers, if different from their legal last name",
            "x-nullable": true
          },
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A person's birth sex.",
            "x-nullable": true
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactTelephone"
            },
            "description": "An unordered collection of contactTelephones. The 10-digit telephone number, including the area code, for the person."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_contactAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactAddressPeriod"
            },
            "description": "An unordered collection of contactAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "edFi_contactAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_contactElectronicMail": {
        "required": [
          "electronicMailTypeDescriptor",
          "electronicMailAddress"
        ],
        "type": "object",
        "properties": {
          "electronicMailTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic email address should not be published.",
            "x-nullable": true
          },
          "primaryEmailAddressIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "x-nullable": true
          }
        }
      },
      "edFi_contactInternationalAddress": {
        "required": [
          "addressTypeDescriptor",
          "countryDescriptor",
          "addressLine1"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "countryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes."
          },
          "addressLine1": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The second line of the address.",
            "x-nullable": true
          },
          "addressLine3": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The third line of the address.",
            "x-nullable": true
          },
          "addressLine4": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The fourth line of the address.",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.",
            "format": "date",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          }
        }
      },
      "edFi_contactLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which written or spoken communication is being used.",
            "x-Ed-Fi-isIdentity": true
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_contactLanguageUse"
            },
            "description": "An unordered collection of contactLanguageUses. A description of how the language is used (e.g. Home Language, Native Language, Spoken Language)."
          }
        }
      },
      "edFi_contactLanguageUse": {
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_contactOtherName": {
        "required": [
          "otherNameTypeDescriptor",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "otherNameTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The types of alternate names for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          }
        }
      },
      "edFi_contactPersonalIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "edFi_contactReference": {
        "required": [
          "contactUniqueId"
        ],
        "type": "object",
        "properties": {
          "contactUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a contact.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_contactTelephone": {
        "required": [
          "telephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "telephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number should not be published.",
            "x-nullable": true
          },
          "orderOfPriority": {
            "minimum": 1,
            "type": "integer",
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "textMessageCapabilityIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "x-nullable": true
          }
        }
      },
      "edFi_course": {
        "required": [
          "courseCode",
          "courseTitle",
          "numberOfParts",
          "identificationCodes",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "courseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseIdentificationCode"
            },
            "description": "An unordered collection of courseIdentificationCodes. The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students."
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseAcademicSubject"
            },
            "description": "An unordered collection of courseAcademicSubjects. The intended major subject/s area of the course."
          },
          "careerPathwayDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.",
            "x-nullable": true
          },
          "competencyLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseCompetencyLevel"
            },
            "description": "An unordered collection of courseCompetencyLevels. The competency levels defined to rate the student for the course."
          },
          "courseDefinedByDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Specifies whether the course was defined by the SEA, LEA, School, or national organization.",
            "x-nullable": true
          },
          "courseDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.",
            "x-nullable": true
          },
          "courseGPAApplicabilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indicator of whether or not the course being described is included in the computation of the student's grade point average, and if so, if it is weighted differently from regular courses.",
            "x-nullable": true
          },
          "courseTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts)."
          },
          "dateCourseAdopted": {
            "type": "string",
            "description": "Date the course was adopted by the education agency.",
            "format": "date",
            "x-nullable": true
          },
          "highSchoolCourseRequirement": {
            "type": "boolean",
            "description": "An indication that this course may satisfy high school graduation requirements in the course's subject area.",
            "x-nullable": true
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseLearningStandard"
            },
            "description": "An unordered collection of courseLearningStandards. Learning standard(s) to be taught by the course."
          },
          "levelCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseLevelCharacteristic"
            },
            "description": "An unordered collection of courseLevelCharacteristics. The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE)."
          },
          "maxCompletionsForCredit": {
            "minimum": 1,
            "type": "integer",
            "description": "Designates how many times the course may be taken with credit received by the student.",
            "format": "int32",
            "x-nullable": true
          },
          "maximumAvailableCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "maximumAvailableCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "maximumAvailableCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "minimumAvailableCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "minimumAvailableCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "minimumAvailableCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "numberOfParts": {
            "maximum": 8,
            "minimum": 1,
            "type": "integer",
            "description": "The number of parts identified for a course.",
            "format": "int32"
          },
          "offeredGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseOfferedGradeLevel"
            },
            "description": "An unordered collection of courseOfferedGradeLevels. The grade levels in which the course is offered."
          },
          "timeRequiredForCompletion": {
            "minimum": 1,
            "type": "integer",
            "description": "The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The intended major subject/s area of the course.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseCompetencyLevel": {
        "required": [
          "competencyLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "competencyLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The competency levels defined to rate the student for the course.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseIdentificationCode": {
        "required": [
          "courseIdentificationSystemDescriptor",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "courseIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the Identification Code.",
            "x-nullable": true
          },
          "courseCatalogURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URL for the course catalog that defines the course identification code.",
            "x-nullable": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a \"/\". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1."
          }
        }
      },
      "edFi_courseLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_courseLevelCharacteristic": {
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseOfferedGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels in which the course is offered.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseOffering": {
        "required": [
          "localCourseCode",
          "courseReference",
          "schoolReference",
          "sessionReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "courseReference": {
            "$ref": "#/components/schemas/edFi_courseReference"
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "sessionReference": {
            "$ref": "#/components/schemas/edFi_sessionReference"
          },
          "courseLevelCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseOfferingCourseLevelCharacteristic"
            },
            "description": "An unordered collection of courseOfferingCourseLevelCharacteristics. The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level."
          },
          "curriculumUseds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseOfferingCurriculumUsed"
            },
            "description": "An unordered collection of courseOfferingCurriculumUseds. The type of curriculum used in an early learning classroom or group."
          },
          "instructionalTimePlanned": {
            "minimum": 1,
            "type": "integer",
            "description": "The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.",
            "format": "int32",
            "x-nullable": true
          },
          "localCourseTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name given to a course of study offered in the school, if different from the course title.",
            "x-nullable": true
          },
          "offeredGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseOfferingOfferedGradeLevel"
            },
            "description": "An unordered collection of courseOfferingOfferedGradeLevels. The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseOfferingCourseLevelCharacteristic": {
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseOfferingCurriculumUsed": {
        "required": [
          "curriculumUsedDescriptor"
        ],
        "type": "object",
        "properties": {
          "curriculumUsedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of curriculum used in an early learning classroom or group.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseOfferingOfferedGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseOfferingReference": {
        "required": [
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sessionName"
        ],
        "type": "object",
        "properties": {
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_courseReference": {
        "required": [
          "courseCode",
          "educationOrganizationId"
        ],
        "type": "object",
        "properties": {
          "courseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_courseTranscript": {
        "required": [
          "courseAttemptResultDescriptor",
          "courseReference",
          "studentAcademicRecordReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "courseAttemptResultDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The result from the student's attempt to take the course.",
            "x-Ed-Fi-isIdentity": true
          },
          "courseReference": {
            "$ref": "#/components/schemas/edFi_courseReference"
          },
          "externalEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "responsibleTeacherStaffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "studentAcademicRecordReference": {
            "$ref": "#/components/schemas/edFi_studentAcademicRecordReference"
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptAcademicSubject"
            },
            "description": "An unordered collection of courseTranscriptAcademicSubjects. The subject area for the course transcript credits awarded in the course transcript."
          },
          "alternativeCourseIdentificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptAlternativeCourseIdentificationCode"
            },
            "description": "An unordered collection of courseTranscriptAlternativeCourseIdentificationCodes. The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code."
          },
          "alternativeCourseTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name given to a course of study offered in the school, if different from the CourseTitle.",
            "x-nullable": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the course identification code.",
            "x-nullable": true
          },
          "attemptedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "attemptedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "attemptedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "courseCatalogURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URL for the course catalog that defines the course identification code.",
            "x-nullable": true
          },
          "coursePrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptCourseProgram"
            },
            "description": "An unordered collection of courseTranscriptCoursePrograms. The program(s) that the student participated in the context of the course."
          },
          "courseRepeatCodeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student's academic grade average.",
            "x-nullable": true
          },
          "courseTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).",
            "x-nullable": true
          },
          "creditCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptCreditCategory"
            },
            "description": "An unordered collection of courseTranscriptCreditCategories. A categorization for the course transcript credits awarded in the course transcript."
          },
          "earnedAdditionalCredits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptEarnedAdditionalCredits"
            },
            "description": "An unordered collection of courseTranscriptEarnedAdditionalCredits. The number of additional credits a student attempted and could earn for successfully completing a given course."
          },
          "earnedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "earnedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "earnedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "externalEducationOrganizationNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.",
            "x-nullable": true
          },
          "finalLetterGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "x-nullable": true
          },
          "finalNumericGradeEarned": {
            "type": "number",
            "description": "The final indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "x-nullable": true
          },
          "methodCreditEarnedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method the credits were earned.",
            "x-nullable": true
          },
          "partialCourseTranscriptAwards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptPartialCourseTranscriptAwards"
            },
            "description": "An unordered collection of courseTranscriptPartialCourseTranscriptAwards. A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental."
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_courseTranscriptSection"
            },
            "description": "An unordered collection of courseTranscriptSections. The section(s) associated with the course transcript."
          },
          "whenTakenGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Student's grade level at time of course.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_courseTranscriptAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The subject area for the course transcript credits awarded in the course transcript.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseTranscriptAlternativeCourseIdentificationCode": {
        "required": [
          "courseIdentificationSystemDescriptor",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "courseIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the Identification Code.",
            "x-nullable": true
          },
          "courseCatalogURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URL for the course catalog that defines the course identification code.",
            "x-nullable": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a \"/\". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1."
          }
        }
      },
      "edFi_courseTranscriptCourseProgram": {
        "required": [
          "courseProgramReference"
        ],
        "type": "object",
        "properties": {
          "courseProgramReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_courseTranscriptCreditCategory": {
        "required": [
          "creditCategoryDescriptor"
        ],
        "type": "object",
        "properties": {
          "creditCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A categorization for the course transcript credits awarded in the course transcript.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_courseTranscriptEarnedAdditionalCredits": {
        "required": [
          "additionalCreditTypeDescriptor",
          "credits"
        ],
        "type": "object",
        "properties": {
          "additionalCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "credits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course",
            "format": "double"
          }
        }
      },
      "edFi_courseTranscriptPartialCourseTranscriptAwards": {
        "required": [
          "awardDate",
          "earnedCredits"
        ],
        "type": "object",
        "properties": {
          "awardDate": {
            "type": "string",
            "description": "The date the partial credits and/or grades were awarded or earned.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "methodCreditEarnedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method the credits were earned.",
            "x-nullable": true
          },
          "earnedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The number of credits a student earned for completing a given course.",
            "format": "double"
          },
          "letterGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The indicator of student performance as submitted by the instructor.",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The indicator of student performance as submitted by the instructor.",
            "x-nullable": true
          }
        }
      },
      "edFi_courseTranscriptSection": {
        "required": [
          "sectionReference"
        ],
        "type": "object",
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          }
        }
      },
      "edFi_credential": {
        "required": [
          "stateOfIssueStateAbbreviationDescriptor",
          "credentialIdentifier",
          "credentialTypeDescriptor",
          "issuanceDate",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "credentialIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Identifier or serial number assigned to the credential.",
            "x-Ed-Fi-isIdentity": true
          },
          "stateOfIssueStateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "x-Ed-Fi-isIdentity": true
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_credentialAcademicSubject"
            },
            "description": "An unordered collection of credentialAcademicSubjects. The academic subjects to which the credential pertains."
          },
          "credentialFieldDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The field of certification for the certificate (e.g., Mathematics, Music).",
            "x-nullable": true
          },
          "credentialTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the category of credential an individual holds."
          },
          "effectiveDate": {
            "type": "string",
            "description": "The year, month and day on which an active credential held by an individual was issued.",
            "format": "date",
            "x-nullable": true
          },
          "endorsements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_credentialEndorsement"
            },
            "description": "An unordered collection of credentialEndorsements. Endorsements are attachments to teaching certificates and indicate areas of specialization."
          },
          "expirationDate": {
            "type": "string",
            "description": "The month, day, and year on which an active credential held by an individual will expire.",
            "format": "date",
            "x-nullable": true
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_credentialGradeLevel"
            },
            "description": "An unordered collection of credentialGradeLevels. The grade level(s) certified for teaching."
          },
          "issuanceDate": {
            "type": "string",
            "description": "The month, day, and year on which an active credential was issued to an individual.",
            "format": "date"
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the credential."
          },
          "teachingCredentialBasisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the pre-determined criteria for granting the teaching credential that an individual holds.",
            "x-nullable": true
          },
          "teachingCredentialDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the category of a legal document giving authorization to perform teaching assignment services.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          },
          "_ext": {
            "$ref": "#/components/schemas/credentialExtensions"
          }
        }
      },
      "edFi_credentialAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The academic subjects to which the credential pertains.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_credentialEndorsement": {
        "required": [
          "credentialEndorsement"
        ],
        "type": "object",
        "properties": {
          "credentialEndorsement": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Endorsements are attachments to teaching certificates and indicate areas of specialization.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_credentialGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level(s) certified for teaching.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_credentialReference": {
        "required": [
          "credentialIdentifier",
          "stateOfIssueStateAbbreviationDescriptor"
        ],
        "type": "object",
        "properties": {
          "credentialIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Identifier or serial number assigned to the credential.",
            "x-Ed-Fi-isIdentity": true
          },
          "stateOfIssueStateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_descriptorMapping": {
        "required": [
          "mappedNamespace",
          "mappedValue",
          "namespace",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "mappedNamespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "x-Ed-Fi-isIdentity": true
          },
          "mappedValue": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "x-Ed-Fi-isIdentity": true
          },
          "value": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The descriptor value that is being mapped to another value.",
            "x-Ed-Fi-isIdentity": true
          },
          "modelEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_descriptorMappingModelEntity"
            },
            "description": "An unordered collection of descriptorMappingModelEntities. The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_descriptorMappingModelEntity": {
        "required": [
          "modelEntityDescriptor"
        ],
        "type": "object",
        "properties": {
          "modelEntityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_disciplineAction": {
        "required": [
          "disciplineActionIdentifier",
          "disciplineDate",
          "disciplines",
          "responsibilitySchoolReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "disciplineActionIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Identifier assigned by the education organization to the discipline action.",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplineDate": {
            "type": "string",
            "description": "The date of the discipline action.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineActionDiscipline"
            },
            "description": "An unordered collection of disciplineActionDisciplines. Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident."
          },
          "assignmentSchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "responsibilitySchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "actualDisciplineActionLength": {
            "minimum": 0.0,
            "type": "number",
            "description": "Indicates the actual length in school days of a student's disciplinary assignment.",
            "format": "double",
            "x-nullable": true
          },
          "disciplineActionLength": {
            "minimum": 0.0,
            "type": "number",
            "description": "The length of time in school days for the discipline action (e.g. removal, detention), if applicable.",
            "format": "double",
            "x-nullable": true
          },
          "disciplineActionLengthDifferenceReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the reason for the difference, if any, between the official and actual lengths of a student's disciplinary assignment.",
            "x-nullable": true
          },
          "iepPlacementMeetingIndicator": {
            "type": "boolean",
            "description": "An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student's Individualized Education Program (IEP) team to determine appropriate placement.",
            "x-nullable": true
          },
          "relatedToZeroTolerancePolicy": {
            "type": "boolean",
            "description": "An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.",
            "x-nullable": true
          },
          "staffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineActionStaff"
            },
            "description": "An unordered collection of disciplineActionStaffs. The staff responsible for enforcing the discipline action."
          },
          "studentDisciplineIncidentBehaviorAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineActionStudentDisciplineIncidentBehaviorAssociation"
            },
            "description": "An unordered collection of disciplineActionStudentDisciplineIncidentBehaviorAssociations. A reference to the behavior(s) by the student that led or contributed to this specific action."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disciplineActionDiscipline": {
        "required": [
          "disciplineDescriptor"
        ],
        "type": "object",
        "properties": {
          "disciplineDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_disciplineActionStaff": {
        "required": [
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          }
        }
      },
      "edFi_disciplineActionStudentDisciplineIncidentBehaviorAssociation": {
        "required": [
          "studentDisciplineIncidentBehaviorAssociationReference"
        ],
        "type": "object",
        "properties": {
          "studentDisciplineIncidentBehaviorAssociationReference": {
            "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociationReference"
          }
        }
      },
      "edFi_disciplineIncident": {
        "required": [
          "incidentIdentifier",
          "incidentDate",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "behaviors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineIncidentBehavior"
            },
            "description": "An unordered collection of disciplineIncidentBehaviors. Describes behavior by category and provides a detailed description."
          },
          "caseNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The case number assigned to the DisciplineIncident by law enforcement or other organization.",
            "x-nullable": true
          },
          "externalParticipants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineIncidentExternalParticipant"
            },
            "description": "An unordered collection of disciplineIncidentExternalParticipants. Information on an individual involved in the discipline incident."
          },
          "incidentCost": {
            "type": "number",
            "description": "The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.",
            "format": "double",
            "x-nullable": true
          },
          "incidentDate": {
            "type": "string",
            "description": "The month, day, and year on which the discipline incident occurred.",
            "format": "date"
          },
          "incidentDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The description for an incident.",
            "x-nullable": true
          },
          "incidentLocationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Identifies where the discipline incident occurred and whether or not it occurred on school.",
            "x-nullable": true
          },
          "incidentTime": {
            "type": "string",
            "description": "An indication of the time of day the incident took place.",
            "x-nullable": true
          },
          "reportedToLawEnforcement": {
            "type": "boolean",
            "description": "Indicator of whether the incident was reported to law enforcement.",
            "x-nullable": true
          },
          "reporterDescriptionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., \"Counselor\" rather than \"Professional Staff\").",
            "x-nullable": true
          },
          "reporterName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the reporter of the discipline incident by name.",
            "x-nullable": true
          },
          "weapons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_disciplineIncidentWeapon"
            },
            "description": "An unordered collection of disciplineIncidentWeapons. Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_disciplineIncidentBehavior": {
        "required": [
          "behaviorDescriptor"
        ],
        "type": "object",
        "properties": {
          "behaviorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Describes behavior by category and provides a detailed description.",
            "x-Ed-Fi-isIdentity": true
          },
          "behaviorDetailedDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "x-nullable": true
          }
        }
      },
      "edFi_disciplineIncidentExternalParticipant": {
        "required": [
          "disciplineIncidentParticipationCodeDescriptor",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The role or type of participation of an individual in the discipline incident.",
            "x-Ed-Fi-isIdentity": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "x-Ed-Fi-isIdentity": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_disciplineIncidentReference": {
        "required": [
          "incidentIdentifier",
          "schoolId"
        ],
        "type": "object",
        "properties": {
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_disciplineIncidentWeapon": {
        "required": [
          "weaponDescriptor"
        ],
        "type": "object",
        "properties": {
          "weaponDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContent": {
        "required": [
          "contentIdentifier",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "contentIdentifier": {
            "maxLength": 225,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifier for the education content.",
            "x-Ed-Fi-isIdentity": true
          },
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          },
          "additionalAuthorsIndicator": {
            "type": "boolean",
            "description": "Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation \"et al\".",
            "x-nullable": true
          },
          "appropriateGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentAppropriateGradeLevel"
            },
            "description": "An unordered collection of educationContentAppropriateGradeLevels. Grade levels for which this education content is applicable. If omitted, considered generally applicable."
          },
          "appropriateSexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentAppropriateSex"
            },
            "description": "An unordered collection of educationContentAppropriateSexes. Sexes for which this education content is applicable. If omitted, considered generally applicable."
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentAuthor"
            },
            "description": "An unordered collection of educationContentAuthors. The individual credited with the creation of the resource."
          },
          "contentClassDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The predominate type or kind characterizing the learning resource.",
            "x-nullable": true
          },
          "cost": {
            "type": "number",
            "description": "An amount that has to be paid or spent to buy or obtain the education content.",
            "format": "double",
            "x-nullable": true
          },
          "costRateDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rate by which the cost applies.",
            "x-nullable": true
          },
          "derivativeSourceEducationContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentDerivativeSourceEducationContent"
            },
            "description": "An unordered collection of educationContentDerivativeSourceEducationContents. Relates the education content source to the education content."
          },
          "derivativeSourceLearningResourceMetadataURIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentDerivativeSourceLearningResourceMetadataURI"
            },
            "description": "An unordered collection of educationContentDerivativeSourceLearningResourceMetadataURIs. The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item."
          },
          "derivativeSourceURIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentDerivativeSourceURI"
            },
            "description": "An unordered collection of educationContentDerivativeSourceURIs. The URI (typical a URL) pointing to an education content item."
          },
          "description": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "An extended written representation of the education content.",
            "x-nullable": true
          },
          "interactivityStyleDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.",
            "x-nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationContentLanguage"
            },
            "description": "An unordered collection of educationContentLanguages. An indication of the languages in which the Education Content is designed."
          },
          "learningResourceMetadataURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "x-nullable": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the education content."
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this content was first published.",
            "format": "date",
            "x-nullable": true
          },
          "publicationYear": {
            "type": "integer",
            "description": "The year at which this content was first published.",
            "format": "int32",
            "x-nullable": true
          },
          "publisher": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The organization credited with publishing the resource.",
            "x-nullable": true
          },
          "shortDescription": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short description or name of the entity.",
            "x-nullable": true
          },
          "timeRequired": {
            "maxLength": 30,
            "type": "string",
            "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.",
            "x-nullable": true
          },
          "useRightsURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URL where the owner specifies permissions for using the resource.",
            "x-nullable": true
          },
          "version": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "The version identifier for the content.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationContentAppropriateGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade levels for which this education content is applicable. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentAppropriateSex": {
        "required": [
          "sexDescriptor"
        ],
        "type": "object",
        "properties": {
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Sexes for which this education content is applicable. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentAuthor": {
        "required": [
          "author"
        ],
        "type": "object",
        "properties": {
          "author": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The individual credited with the creation of the resource.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentDerivativeSourceEducationContent": {
        "required": [
          "derivativeSourceEducationContentReference"
        ],
        "type": "object",
        "properties": {
          "derivativeSourceEducationContentReference": {
            "$ref": "#/components/schemas/edFi_educationContentReference"
          }
        }
      },
      "edFi_educationContentDerivativeSourceLearningResourceMetadataURI": {
        "required": [
          "derivativeSourceLearningResourceMetadataURI"
        ],
        "type": "object",
        "properties": {
          "derivativeSourceLearningResourceMetadataURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentDerivativeSourceURI": {
        "required": [
          "derivativeSourceURI"
        ],
        "type": "object",
        "properties": {
          "derivativeSourceURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to an education content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the languages in which the Education Content is designed.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationContentReference": {
        "required": [
          "contentIdentifier"
        ],
        "type": "object",
        "properties": {
          "contentIdentifier": {
            "maxLength": 225,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifier for the education content.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_educationOrganizationAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddressPeriod"
            },
            "description": "An unordered collection of educationOrganizationAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "edFi_educationOrganizationAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_educationOrganizationCategory": {
        "required": [
          "educationOrganizationCategoryDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_educationOrganizationIdentificationCode": {
        "required": [
          "educationOrganizationIdentificationSystemDescriptor",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The school system, state, or agency assigning the identification code.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity."
          }
        }
      },
      "edFi_educationOrganizationIndicator": {
        "required": [
          "indicatorDescriptor"
        ],
        "type": "object",
        "properties": {
          "indicatorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name or code for the indicator or metric.",
            "x-Ed-Fi-isIdentity": true
          },
          "indicatorGroupDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name for a group of indicators.",
            "x-nullable": true
          },
          "indicatorLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is \"not submitted.\"",
            "x-nullable": true
          },
          "designatedBy": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The person, organization, or department that defined the metric.",
            "x-nullable": true
          },
          "indicatorValue": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The value of the indicator or metric. The semantics of an empty value is \"not submitted.\"",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicatorPeriod"
            },
            "description": "An unordered collection of educationOrganizationIndicatorPeriods. The time period or as-of date for the indicator."
          }
        }
      },
      "edFi_educationOrganizationIndicatorPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_educationOrganizationInstitutionTelephone": {
        "required": [
          "institutionTelephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "institutionTelephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable."
          }
        }
      },
      "edFi_educationOrganizationInternationalAddress": {
        "required": [
          "addressTypeDescriptor",
          "countryDescriptor",
          "addressLine1"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "countryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes."
          },
          "addressLine1": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The second line of the address.",
            "x-nullable": true
          },
          "addressLine3": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The third line of the address.",
            "x-nullable": true
          },
          "addressLine4": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The fourth line of the address.",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.",
            "format": "date",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          }
        }
      },
      "edFi_educationOrganizationInterventionPrescriptionAssociation": {
        "required": [
          "educationOrganizationReference",
          "interventionPrescriptionReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/edFi_interventionPrescriptionReference"
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date of the period during which the intervention prescription is available.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the period during which the intervention prescription is available.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationNetwork": {
        "required": [
          "educationOrganizationNetworkId",
          "nameOfInstitution",
          "networkPurposeDescriptor",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "educationOrganizationNetworkId": {
            "type": "integer",
            "description": "The identifier assigned to a network of education organizations.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "networkPurposeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The purpose(s) of the network (e.g., shared services, collective procurement)."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationNetworkAssociation": {
        "required": [
          "memberEducationOrganizationReference",
          "educationOrganizationNetworkReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationNetworkReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationNetworkReference"
          },
          "memberEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "beginDate": {
            "type": "string",
            "description": "The date on which the education organization joined this network.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date on which the education organization left this network.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationNetworkReference": {
        "required": [
          "educationOrganizationNetworkId"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationNetworkId": {
            "type": "integer",
            "description": "The identifier assigned to a network of education organizations.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_educationOrganizationPeerAssociation": {
        "required": [
          "educationOrganizationReference",
          "peerEducationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "peerEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationOrganizationReference": {
        "required": [
          "educationOrganizationId"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_educationServiceCenter": {
        "required": [
          "educationServiceCenterId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "educationServiceCenterId": {
            "type": "integer",
            "description": "The identifier assigned to an education service center.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "stateEducationAgencyReference": {
            "$ref": "#/components/schemas/edFi_stateEducationAgencyReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_educationServiceCenterReference": {
        "required": [
          "educationServiceCenterId"
        ],
        "type": "object",
        "properties": {
          "educationServiceCenterId": {
            "type": "integer",
            "description": "The identifier assigned to an education service center.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_evaluationRubricDimension": {
        "required": [
          "evaluationRubricRating",
          "evaluationCriterionDescription",
          "programEvaluationElementReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationRubricRating": {
            "type": "integer",
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationElementReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationElementReference"
          },
          "evaluationCriterionDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The evaluation criterion description for the evaluation rubric dimension."
          },
          "evaluationRubricRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved for the evaluation rubric dimension.",
            "x-nullable": true
          },
          "rubricDimensionSortOrder": {
            "type": "integer",
            "description": "The sort order of the rubric dimension.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_feederSchoolAssociation": {
        "required": [
          "beginDate",
          "feederSchoolReference",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year of the first day of the feeder school association.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "feederSchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year of the last day of the feeder school association.",
            "format": "date",
            "x-nullable": true
          },
          "feederRelationshipDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_functionDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account function dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account function dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account function dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_functionDimensionReportingTag"
            },
            "description": "An unordered collection of functionDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_functionDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account function dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account function dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_functionDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_fundDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account fund dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account fund dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account fund dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_fundDimensionReportingTag"
            },
            "description": "An unordered collection of fundDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_fundDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account fund dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account fund dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_fundDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_generalStudentProgramAssociationProgramParticipationStatus": {
        "required": [
          "participationStatusDescriptor",
          "statusBeginDate"
        ],
        "type": "object",
        "properties": {
          "participationStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The student's program participation status.",
            "x-Ed-Fi-isIdentity": true
          },
          "statusBeginDate": {
            "type": "string",
            "description": "The date the student's program participation status began.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "designatedBy": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The person, organization, or department that designated the participation status.",
            "x-nullable": true
          },
          "statusEndDate": {
            "type": "string",
            "description": "The date the student's program participation status ended.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_generalStudentProgramAssociationReference": {
        "required": [
          "beginDate",
          "educationOrganizationId",
          "programEducationOrganizationId",
          "programName",
          "programTypeDescriptor",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_grade": {
        "required": [
          "gradeTypeDescriptor",
          "gradingPeriodReference",
          "studentSectionAssociationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "gradeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/edFi_gradingPeriodReference"
          },
          "studentSectionAssociationReference": {
            "$ref": "#/components/schemas/edFi_studentSectionAssociationReference"
          },
          "currentGradeAsOfDate": {
            "type": "string",
            "description": "As-Of date for a grade posted as the current grade.",
            "format": "date",
            "x-nullable": true
          },
          "currentGradeIndicator": {
            "type": "boolean",
            "description": "An indicator that the posted grade is an interim grade for the grading period and not the final grade.",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "x-nullable": true
          },
          "gradeEarnedDescription": {
            "maxLength": 64,
            "type": "string",
            "description": "A description of the grade earned by the learner.",
            "x-nullable": true
          },
          "learningStandardGrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_gradeLearningStandardGrade"
            },
            "description": "An unordered collection of gradeLearningStandardGrades. A collection of learning standards associated with the grade."
          },
          "letterGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "type": "number",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "x-nullable": true
          },
          "performanceBaseConversionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A conversion of the level to a standard set of performance levels.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradebookEntry": {
        "required": [
          "gradebookEntryIdentifier",
          "namespace",
          "dateAssigned",
          "sourceSectionIdentifier",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "gradebookEntryIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace URI for the source of the gradebook entry.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/edFi_gradingPeriodReference"
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "dateAssigned": {
            "type": "string",
            "description": "The date the assignment, homework, or assessment was assigned or executed.",
            "format": "date"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A description of the assignment, homework, or classroom assessment.",
            "x-nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "The date the assignment, homework, or assessment is due.",
            "format": "date",
            "x-nullable": true
          },
          "dueTime": {
            "type": "string",
            "description": "The time the assignment, homework, or assessment is due.",
            "x-nullable": true
          },
          "gradebookEntryTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of the gradebook entry.",
            "x-nullable": true
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_gradebookEntryLearningStandard"
            },
            "description": "An unordered collection of gradebookEntryLearningStandards. LearningStandard(s) associated with the gradebook entry."
          },
          "maxPoints": {
            "type": "number",
            "description": "The maximum number of points  that can be earned for the submission.",
            "format": "double",
            "x-nullable": true
          },
          "sourceSectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section."
          },
          "title": {
            "maxLength": 100,
            "type": "string",
            "description": "The name or title of the activity to be recorded in the gradebook entry."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradebookEntryLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_gradebookEntryReference": {
        "required": [
          "gradebookEntryIdentifier",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "gradebookEntryIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace URI for the source of the gradebook entry.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_gradeLearningStandardGrade": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "performanceBaseConversionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A performance level that describes the student proficiency.",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "x-nullable": true
          },
          "letterGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "type": "number",
            "description": "A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.",
            "format": "double",
            "x-nullable": true
          },
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_gradeReference": {
        "required": [
          "beginDate",
          "gradeTypeDescriptor",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolYear",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sectionIdentifier",
          "sessionName",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_gradingPeriod": {
        "required": [
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "beginDate",
          "endDate",
          "totalInstructionalDays",
          "schoolReference",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the first day of the grading period.",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Month, day, and year of the last day of the grading period.",
            "format": "date"
          },
          "periodSequence": {
            "type": "integer",
            "description": "The sequential order of this period relative to other periods.",
            "format": "int32",
            "x-nullable": true
          },
          "totalInstructionalDays": {
            "minimum": 0,
            "type": "integer",
            "description": "Total days available for educational instruction during the grading period.",
            "format": "int32"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_gradingPeriodReference": {
        "required": [
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "schoolId",
          "schoolYear"
        ],
        "type": "object",
        "properties": {
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_graduationPlan": {
        "required": [
          "graduationPlanTypeDescriptor",
          "totalRequiredCredits",
          "educationOrganizationReference",
          "graduationSchoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "graduationPlanTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of academic plan the student is following for graduation.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "graduationSchoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "creditsByCourses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanCreditsByCourse"
            },
            "description": "An unordered collection of graduationPlanCreditsByCourses. The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses."
          },
          "creditsByCreditCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanCreditsByCreditCategory"
            },
            "description": "An unordered collection of graduationPlanCreditsByCreditCategories. The total credits required for graduation based on the credit category."
          },
          "creditsBySubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanCreditsBySubject"
            },
            "description": "An unordered collection of graduationPlanCreditsBySubjects. The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements."
          },
          "individualPlan": {
            "type": "boolean",
            "description": "An indicator of whether the graduation plan is tailored for an individual.",
            "x-nullable": true
          },
          "requiredAssessments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanRequiredAssessment"
            },
            "description": "An unordered collection of graduationPlanRequiredAssessments. The assessments and associated required score and performance level needed to satisfy graduation requirements."
          },
          "totalRequiredCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "totalRequiredCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double"
          },
          "totalRequiredCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_graduationPlanCreditsByCourse": {
        "required": [
          "courseSetName",
          "credits",
          "courses"
        ],
        "type": "object",
        "properties": {
          "courseSetName": {
            "maxLength": 120,
            "minLength": 1,
            "type": "string",
            "description": "Identifying name given to a collection of courses.",
            "x-Ed-Fi-isIdentity": true
          },
          "creditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "whenTakenGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level when the student is planned to take the course.",
            "x-nullable": true
          },
          "creditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "credits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double"
          },
          "courses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanCreditsByCourseCourse"
            },
            "description": "An unordered collection of graduationPlanCreditsByCourseCourses. The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students."
          }
        }
      },
      "edFi_graduationPlanCreditsByCourseCourse": {
        "required": [
          "courseReference"
        ],
        "type": "object",
        "properties": {
          "courseReference": {
            "$ref": "#/components/schemas/edFi_courseReference"
          }
        }
      },
      "edFi_graduationPlanCreditsByCreditCategory": {
        "required": [
          "creditCategoryDescriptor",
          "credits"
        ],
        "type": "object",
        "properties": {
          "creditCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A categorization for the course transcript credits awarded in the course transcript.",
            "x-Ed-Fi-isIdentity": true
          },
          "creditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "creditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "credits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double"
          }
        }
      },
      "edFi_graduationPlanCreditsBySubject": {
        "required": [
          "academicSubjectDescriptor",
          "credits"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The intended major subject area of the graduation requirement.",
            "x-Ed-Fi-isIdentity": true
          },
          "creditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "creditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "credits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double"
          }
        }
      },
      "edFi_graduationPlanReference": {
        "required": [
          "educationOrganizationId",
          "graduationPlanTypeDescriptor",
          "graduationSchoolYear"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationPlanTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of academic plan the student is following for graduation.",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationSchoolYear": {
            "type": "integer",
            "description": "The school year the student is expected to graduate.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_graduationPlanRequiredAssessment": {
        "required": [
          "assessmentReference"
        ],
        "type": "object",
        "properties": {
          "assessmentReference": {
            "$ref": "#/components/schemas/edFi_assessmentReference"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_graduationPlanRequiredAssessmentScore"
            },
            "description": "An unordered collection of graduationPlanRequiredAssessmentScores. Score required to be met or exceeded."
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/edFi_graduationPlanRequiredAssessmentPerformanceLevel"
          }
        }
      },
      "edFi_graduationPlanRequiredAssessmentPerformanceLevel": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "performanceLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used."
          },
          "performanceLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The performance level(s) defined for the assessment."
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score to make the indicated level of performance.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score required to make the indicated level of performance.",
            "x-nullable": true
          },
          "performanceLevelIndicatorName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "x-nullable": true
          }
        }
      },
      "edFi_graduationPlanRequiredAssessmentScore": {
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score possible on the assessment.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score possible on the assessment.",
            "x-nullable": true
          }
        }
      },
      "edFi_intervention": {
        "required": [
          "interventionIdentificationCode",
          "deliveryMethodDescriptor",
          "interventionClassDescriptor",
          "beginDate",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "interventionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "appropriateGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionAppropriateGradeLevel"
            },
            "description": "An unordered collection of interventionAppropriateGradeLevels. Grade levels for the intervention. If omitted, considered generally applicable."
          },
          "appropriateSexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionAppropriateSex"
            },
            "description": "An unordered collection of interventionAppropriateSexes. Sexes for the intervention. If omitted, considered generally applicable."
          },
          "beginDate": {
            "type": "string",
            "description": "The start date for the intervention implementation.",
            "format": "date"
          },
          "deliveryMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention was implemented."
          },
          "diagnoses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionDiagnosis"
            },
            "description": "An unordered collection of interventionDiagnoses. Targeted purpose of the intervention."
          },
          "educationContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionEducationContent"
            },
            "description": "An unordered collection of interventionEducationContents. Relates the education content source to the education content."
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the intervention implementation.",
            "format": "date",
            "x-nullable": true
          },
          "interventionClassDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice."
          },
          "interventionPrescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionInterventionPrescription"
            },
            "description": "An unordered collection of interventionInterventionPrescriptions. The reference to the intervention prescription being followed in this intervention implementation."
          },
          "learningResourceMetadataURIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionLearningResourceMetadataURI"
            },
            "description": "An unordered collection of interventionLearningResourceMetadataURIs. The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item."
          },
          "maxDosage": {
            "type": "integer",
            "description": "The maximum duration of time in minutes that may be assigned for the intervention.",
            "format": "int32",
            "x-nullable": true
          },
          "meetingTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionMeetingTime"
            },
            "description": "An unordered collection of interventionMeetingTimes. The times at which this intervention is scheduled to meet."
          },
          "minDosage": {
            "type": "integer",
            "description": "The minimum duration of time in minutes that may be assigned for the intervention.",
            "format": "int32",
            "x-nullable": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the intervention.",
            "x-nullable": true
          },
          "populationServeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPopulationServed"
            },
            "description": "An unordered collection of interventionPopulationServeds. A subset of students that are the focus of the intervention."
          },
          "staffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStaff"
            },
            "description": "An unordered collection of interventionStaffs. Relates the staff member associated with the Intervention."
          },
          "uris": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionURI"
            },
            "description": "An unordered collection of interventionURIs. The URI (typical a URL) pointing to an education content item."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interventionAppropriateGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade levels for the intervention. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionAppropriateSex": {
        "required": [
          "sexDescriptor"
        ],
        "type": "object",
        "properties": {
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Sexes for the intervention. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionDiagnosis": {
        "required": [
          "diagnosisDescriptor"
        ],
        "type": "object",
        "properties": {
          "diagnosisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Targeted purpose of the intervention.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionEducationContent": {
        "required": [
          "educationContentReference"
        ],
        "type": "object",
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/edFi_educationContentReference"
          }
        }
      },
      "edFi_interventionInterventionPrescription": {
        "required": [
          "interventionPrescriptionReference"
        ],
        "type": "object",
        "properties": {
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/edFi_interventionPrescriptionReference"
          }
        }
      },
      "edFi_interventionLearningResourceMetadataURI": {
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object",
        "properties": {
          "learningResourceMetadataURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionMeetingTime": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "endTime": {
            "type": "string",
            "description": "An indication of the time of day the meeting time ends.",
            "x-Ed-Fi-isIdentity": true
          },
          "startTime": {
            "type": "string",
            "description": "An indication of the time of day the meeting time begins.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPopulationServed": {
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object",
        "properties": {
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A subset of students that are the focus of the intervention.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescription": {
        "required": [
          "interventionPrescriptionIdentificationCode",
          "deliveryMethodDescriptor",
          "interventionClassDescriptor",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "interventionPrescriptionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "appropriateGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionAppropriateGradeLevel"
            },
            "description": "An unordered collection of interventionPrescriptionAppropriateGradeLevels. Grade levels for the prescribed intervention. If omitted, considered generally applicable."
          },
          "appropriateSexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionAppropriateSex"
            },
            "description": "An unordered collection of interventionPrescriptionAppropriateSexes. Sexes for the intervention prescription. If omitted, considered generally applicable."
          },
          "deliveryMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school."
          },
          "diagnoses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionDiagnosis"
            },
            "description": "An unordered collection of interventionPrescriptionDiagnoses. Targeted purpose of the intervention prescription."
          },
          "educationContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionEducationContent"
            },
            "description": "An unordered collection of interventionPrescriptionEducationContents. Relates the education content source to the education content."
          },
          "interventionClassDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice."
          },
          "learningResourceMetadataURIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionLearningResourceMetadataURI"
            },
            "description": "An unordered collection of interventionPrescriptionLearningResourceMetadataURIs. The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item."
          },
          "maxDosage": {
            "type": "integer",
            "description": "The maximum duration of time in minutes that is recommended for the intervention.",
            "format": "int32",
            "x-nullable": true
          },
          "minDosage": {
            "type": "integer",
            "description": "The minimum duration of time in minutes that is recommended for the intervention.",
            "format": "int32",
            "x-nullable": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the intervention.",
            "x-nullable": true
          },
          "populationServeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionPopulationServed"
            },
            "description": "An unordered collection of interventionPrescriptionPopulationServeds. A subset of students that are the focus of the intervention prescription."
          },
          "uris": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionPrescriptionURI"
            },
            "description": "An unordered collection of interventionPrescriptionURIs. The URI (typical a URL) pointing to an education content item."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interventionPrescriptionAppropriateGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade levels for the prescribed intervention. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescriptionAppropriateSex": {
        "required": [
          "sexDescriptor"
        ],
        "type": "object",
        "properties": {
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Sexes for the intervention prescription. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescriptionDiagnosis": {
        "required": [
          "diagnosisDescriptor"
        ],
        "type": "object",
        "properties": {
          "diagnosisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Targeted purpose of the intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescriptionEducationContent": {
        "required": [
          "educationContentReference"
        ],
        "type": "object",
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/edFi_educationContentReference"
          }
        }
      },
      "edFi_interventionPrescriptionLearningResourceMetadataURI": {
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object",
        "properties": {
          "learningResourceMetadataURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescriptionPopulationServed": {
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object",
        "properties": {
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A subset of students that are the focus of the intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionPrescriptionReference": {
        "required": [
          "educationOrganizationId",
          "interventionPrescriptionIdentificationCode"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_interventionPrescriptionURI": {
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to an education content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionReference": {
        "required": [
          "educationOrganizationId",
          "interventionIdentificationCode"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_interventionStaff": {
        "required": [
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          }
        }
      },
      "edFi_interventionStudy": {
        "required": [
          "interventionStudyIdentificationCode",
          "deliveryMethodDescriptor",
          "interventionClassDescriptor",
          "participants",
          "educationOrganizationReference",
          "interventionPrescriptionReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "interventionStudyIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "interventionPrescriptionReference": {
            "$ref": "#/components/schemas/edFi_interventionPrescriptionReference"
          },
          "appropriateGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyAppropriateGradeLevel"
            },
            "description": "An unordered collection of interventionStudyAppropriateGradeLevels. Grade levels participating in this study."
          },
          "appropriateSexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyAppropriateSex"
            },
            "description": "An unordered collection of interventionStudyAppropriateSexes. Sexes participating in this study. If omitted, considered generally applicable."
          },
          "deliveryMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention was implemented: individual, small group, whole class, or whole school."
          },
          "educationContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyEducationContent"
            },
            "description": "An unordered collection of interventionStudyEducationContents. Relates the education content source to the education content."
          },
          "interventionClassDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The way in which an intervention is used: curriculum, supplement, or practice."
          },
          "interventionEffectivenesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyInterventionEffectiveness"
            },
            "description": "An unordered collection of interventionStudyInterventionEffectivenesses. Measurement of the effectiveness of the intervention study per diagnosis."
          },
          "learningResourceMetadataURIs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyLearningResourceMetadataURI"
            },
            "description": "An unordered collection of interventionStudyLearningResourceMetadataURIs. The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item."
          },
          "participants": {
            "type": "integer",
            "description": "The number of participants observed in the study.",
            "format": "int32"
          },
          "populationServeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyPopulationServed"
            },
            "description": "An unordered collection of interventionStudyPopulationServeds. A subset of students that are the focus of the intervention study."
          },
          "stateAbbreviations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyStateAbbreviation"
            },
            "description": "An unordered collection of interventionStudyStateAbbreviations. The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part."
          },
          "uris": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_interventionStudyURI"
            },
            "description": "An unordered collection of interventionStudyURIs. The URI (typical a URL) pointing to an education content item."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_interventionStudyAppropriateGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade levels participating in this study.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionStudyAppropriateSex": {
        "required": [
          "sexDescriptor"
        ],
        "type": "object",
        "properties": {
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Sexes participating in this study. If omitted, considered generally applicable.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionStudyEducationContent": {
        "required": [
          "educationContentReference"
        ],
        "type": "object",
        "properties": {
          "educationContentReference": {
            "$ref": "#/components/schemas/edFi_educationContentReference"
          }
        }
      },
      "edFi_interventionStudyInterventionEffectiveness": {
        "required": [
          "diagnosisDescriptor",
          "gradeLevelDescriptor",
          "populationServedDescriptor",
          "interventionEffectivenessRatingDescriptor"
        ],
        "type": "object",
        "properties": {
          "diagnosisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade level for which effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Population for which effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionEffectivenessRatingDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects."
          },
          "improvementIndex": {
            "type": "integer",
            "description": "Along a percentile distribution of students, the improvement index represents the change in an average student's percentile rank that is considered to be due to the intervention.",
            "format": "int32",
            "x-nullable": true
          }
        }
      },
      "edFi_interventionStudyLearningResourceMetadataURI": {
        "required": [
          "learningResourceMetadataURI"
        ],
        "type": "object",
        "properties": {
          "learningResourceMetadataURI": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionStudyPopulationServed": {
        "required": [
          "populationServedDescriptor"
        ],
        "type": "object",
        "properties": {
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A subset of students that are the focus of the intervention study.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionStudyStateAbbreviation": {
        "required": [
          "stateAbbreviationDescriptor"
        ],
        "type": "object",
        "properties": {
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionStudyURI": {
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to an education content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_interventionURI": {
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The URI (typical a URL) pointing to an education content item.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_learningStandard": {
        "required": [
          "learningStandardId",
          "description",
          "namespace",
          "academicSubjects",
          "gradeLevels",
          "contentStandard"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_learningStandardAcademicSubject"
            },
            "description": "An unordered collection of learningStandardAcademicSubjects. Subject area for the learning standard."
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_learningStandardGradeLevel"
            },
            "description": "An unordered collection of learningStandardGradeLevels. The grade levels for the specific learning standard."
          },
          "learningStandardId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "x-Ed-Fi-isIdentity": true
          },
          "parentLearningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          },
          "contentStandard": {
            "$ref": "#/components/schemas/edFi_learningStandardContentStandard"
          },
          "courseTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The official course title with which this learning standard is associated.",
            "x-nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The text of the statement. The textual content that either describes a specific competency such as \"Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions.\" or describes a less granular group of competencies within the taxonomy of the standards document, e.g. \"Understand and apply the Pythagorean Theorem,\" or \"Geometry\"."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_learningStandardIdentificationCode"
            },
            "description": "An unordered collection of learningStandardIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard."
          },
          "learningStandardCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An additional classification of the type of a specific learning standard.",
            "x-nullable": true
          },
          "learningStandardItemCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).",
            "x-nullable": true
          },
          "learningStandardScopeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.",
            "x-nullable": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control."
          },
          "successCriteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.",
            "x-nullable": true
          },
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "An unambiguous reference to the statement using a network-resolvable URI.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_learningStandardAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Subject area for the learning standard.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_learningStandardContentStandard": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "publicationStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The beginning of the period during which this learning standard document is intended for use.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The end of the period during which this learning standard document is intended for use.",
            "format": "date",
            "x-nullable": true
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which this content was first published.",
            "format": "date",
            "x-nullable": true
          },
          "publicationYear": {
            "type": "integer",
            "description": "The year at which this content was first published.",
            "format": "int32",
            "x-nullable": true
          },
          "title": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name of the content standard, for example Common Core."
          },
          "uri": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "An unambiguous reference to the standards using a network-resolvable URI.",
            "x-nullable": true
          },
          "version": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The version identifier for the content.",
            "x-nullable": true
          },
          "mandatingEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_learningStandardContentStandardAuthor"
            },
            "description": "An unordered collection of learningStandardContentStandardAuthors. The person or organization chiefly responsible for the intellectual content of the standard."
          }
        }
      },
      "edFi_learningStandardContentStandardAuthor": {
        "required": [
          "author"
        ],
        "type": "object",
        "properties": {
          "author": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The person or organization chiefly responsible for the intellectual content of the standard.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_learningStandardEquivalenceAssociation": {
        "required": [
          "namespace",
          "sourceLearningStandardReference",
          "targetLearningStandardReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the organization that has created and owns the association.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceLearningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          },
          "targetLearningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          },
          "effectiveDate": {
            "type": "string",
            "description": "The date that the association is considered to be applicable or effective.",
            "format": "date",
            "x-nullable": true
          },
          "learningStandardEquivalenceStrengthDescription": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Captures supplemental information on the relationship. Recommended for use only when the match is partial.",
            "x-nullable": true
          },
          "learningStandardEquivalenceStrengthDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A measure that indicates the strength or quality of the equivalence relationship.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_learningStandardGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels for the specific learning standard.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_learningStandardIdentificationCode": {
        "required": [
          "contentStandardName",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "contentStandardName": {
            "maxLength": 65,
            "minLength": 1,
            "type": "string",
            "description": "The name of the content standard, for example Common Core.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a Learning Standard.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_learningStandardReference": {
        "required": [
          "learningStandardId"
        ],
        "type": "object",
        "properties": {
          "learningStandardId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_localAccount": {
        "required": [
          "accountIdentifier",
          "fiscalYear",
          "chartOfAccountReference",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "chartOfAccountReference": {
            "$ref": "#/components/schemas/edFi_chartOfAccountReference"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "accountName": {
            "maxLength": 100,
            "type": "string",
            "description": "A descriptive name for the account.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_localAccountReportingTag"
            },
            "description": "An unordered collection of localAccountReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localAccountReference": {
        "required": [
          "accountIdentifier",
          "educationOrganizationId",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_localAccountReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.",
            "x-Ed-Fi-isIdentity": true
          },
          "tagValue": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The value associated with the reporting tag.",
            "x-nullable": true
          }
        }
      },
      "edFi_localActual": {
        "required": [
          "asOfDate",
          "amount",
          "localAccountReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/edFi_localAccountReference"
          },
          "amount": {
            "type": "number",
            "description": "Current balance for the account.",
            "format": "double"
          },
          "financialCollectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The accounting period or grouping for which the amount is collected.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localBudget": {
        "required": [
          "asOfDate",
          "amount",
          "localAccountReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/edFi_localAccountReference"
          },
          "amount": {
            "type": "number",
            "description": "Current balance for the account.",
            "format": "double"
          },
          "financialCollectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The accounting period or grouping for which the amount is collected.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localContractedStaff": {
        "required": [
          "asOfDate",
          "amount",
          "localAccountReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/edFi_localAccountReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "amount": {
            "type": "number",
            "description": "Current balance for the account.",
            "format": "double"
          },
          "financialCollectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The accounting period or grouping for which the amount is collected.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localEducationAgency": {
        "required": [
          "localEducationAgencyId",
          "nameOfInstitution",
          "localEducationAgencyCategoryDescriptor",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "localEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a local education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "educationServiceCenterReference": {
            "$ref": "#/components/schemas/edFi_educationServiceCenterReference"
          },
          "parentLocalEducationAgencyReference": {
            "$ref": "#/components/schemas/edFi_localEducationAgencyReference"
          },
          "stateEducationAgencyReference": {
            "$ref": "#/components/schemas/edFi_stateEducationAgencyReference"
          },
          "accountabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_localEducationAgencyAccountability"
            },
            "description": "An unordered collection of localEducationAgencyAccountabilities. This entity maintains information about federal reporting and accountability for local education agencies."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "charterStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "x-nullable": true
          },
          "federalFunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_localEducationAgencyFederalFunds"
            },
            "description": "An unordered collection of localEducationAgencyFederalFunds. Contains the information about the reception and use of federal funds for reporting purposes."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "localEducationAgencyCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of local education agency/district."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localEducationAgencyAccountability": {
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "gunFreeSchoolsActReportingStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.",
            "x-nullable": true
          },
          "schoolChoiceImplementStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          }
        }
      },
      "edFi_localEducationAgencyFederalFunds": {
        "required": [
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "fiscalYear": {
            "type": "integer",
            "description": "The fiscal year for which the federal funds are received.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "innovativeDollarsSpent": {
            "type": "number",
            "description": "The total Title V, Part A funds expended by LEAs.",
            "format": "double",
            "x-nullable": true
          },
          "innovativeDollarsSpentStrategicPriorities": {
            "type": "number",
            "description": "The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.",
            "format": "double",
            "x-nullable": true
          },
          "innovativeProgramsFundsReceived": {
            "type": "number",
            "description": "The total Title V, Part A funds received by LEAs.",
            "format": "double",
            "x-nullable": true
          },
          "schoolImprovementAllocation": {
            "type": "number",
            "description": "The amount of Section 1003(a) and 1003(g) allocations to LEAs.",
            "format": "double",
            "x-nullable": true
          },
          "schoolImprovementReservedFundsPercentage": {
            "type": "number",
            "description": "An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED's regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.",
            "format": "double",
            "x-nullable": true
          },
          "stateAssessmentAdministrationFunding": {
            "type": "number",
            "description": "The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state's schools and LEAs are held accountable for results.",
            "format": "double",
            "x-nullable": true
          },
          "supplementalEducationalServicesFundsSpent": {
            "type": "number",
            "description": "The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.",
            "format": "double",
            "x-nullable": true
          },
          "supplementalEducationalServicesPerPupilExpenditure": {
            "type": "number",
            "description": "The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_localEducationAgencyReference": {
        "required": [
          "localEducationAgencyId"
        ],
        "type": "object",
        "properties": {
          "localEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a local education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_localEncumbrance": {
        "required": [
          "asOfDate",
          "amount",
          "localAccountReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/edFi_localAccountReference"
          },
          "amount": {
            "type": "number",
            "description": "Current balance for the account.",
            "format": "double"
          },
          "financialCollectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The accounting period or grouping for which the amount is collected.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_localPayroll": {
        "required": [
          "asOfDate",
          "amount",
          "localAccountReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localAccountReference": {
            "$ref": "#/components/schemas/edFi_localAccountReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "amount": {
            "type": "number",
            "description": "Current balance for the account.",
            "format": "double"
          },
          "financialCollectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The accounting period or grouping for which the amount is collected.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_location": {
        "required": [
          "classroomIdentificationCode",
          "schoolReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "classroomIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "maximumNumberOfSeats": {
            "type": "integer",
            "description": "The most number of seats the class can maintain.",
            "format": "int32",
            "x-nullable": true
          },
          "optimalNumberOfSeats": {
            "type": "integer",
            "description": "The number of seats that is most favorable to the class.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_locationReference": {
        "required": [
          "classroomIdentificationCode",
          "schoolId"
        ],
        "type": "object",
        "properties": {
          "classroomIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_objectDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account object dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account object dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account object dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_objectDimensionReportingTag"
            },
            "description": "An unordered collection of objectDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_objectDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account object dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account object dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_objectDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_objectiveAssessment": {
        "required": [
          "identificationCode",
          "assessmentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/edFi_assessmentReference"
          },
          "parentObjectiveAssessmentReference": {
            "$ref": "#/components/schemas/edFi_objectiveAssessmentReference"
          },
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The subject area of the objective assessment.",
            "x-nullable": true
          },
          "assessmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_objectiveAssessmentAssessmentItem"
            },
            "description": "An unordered collection of objectiveAssessmentAssessmentItems. References individual test items, if appropriate."
          },
          "description": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The description of the objective assessment (e.g., vocabulary, measurement, or geometry).",
            "x-nullable": true
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_objectiveAssessmentLearningStandard"
            },
            "description": "An unordered collection of objectiveAssessmentLearningStandards. Learning standard tested by this objective assessment."
          },
          "maxRawScore": {
            "type": "number",
            "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
            "format": "double",
            "x-nullable": true
          },
          "nomenclature": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Reflects the specific nomenclature used for this level of objective assessment.",
            "x-nullable": true
          },
          "percentOfAssessment": {
            "type": "number",
            "description": "The percentage of the assessment that tests this objective.",
            "format": "double",
            "x-nullable": true
          },
          "performanceLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_objectiveAssessmentPerformanceLevel"
            },
            "description": "An unordered collection of objectiveAssessmentPerformanceLevels. Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_objectiveAssessmentScore"
            },
            "description": "An unordered collection of objectiveAssessmentScores. Definition of the scores to be expected from this objective assessment."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_objectiveAssessmentAssessmentItem": {
        "required": [
          "assessmentItemReference"
        ],
        "type": "object",
        "properties": {
          "assessmentItemReference": {
            "$ref": "#/components/schemas/edFi_assessmentItemReference"
          }
        }
      },
      "edFi_objectiveAssessmentLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_objectiveAssessmentPerformanceLevel": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "performanceLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The performance level(s) defined for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score to make the indicated level of performance.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score required to make the indicated level of performance.",
            "x-nullable": true
          },
          "performanceLevelIndicatorName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "x-nullable": true
          }
        }
      },
      "edFi_objectiveAssessmentReference": {
        "required": [
          "assessmentIdentifier",
          "identificationCode",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_objectiveAssessmentScore": {
        "required": [
          "assessmentReportingMethodDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.",
            "x-nullable": true
          },
          "maximumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The maximum score possible on the assessment.",
            "x-nullable": true
          },
          "minimumScore": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The minimum score possible on the assessment.",
            "x-nullable": true
          }
        }
      },
      "edFi_openStaffPosition": {
        "required": [
          "requisitionNumber",
          "employmentStatusDescriptor",
          "staffClassificationDescriptor",
          "datePosted",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "requisitionNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_openStaffPositionAcademicSubject"
            },
            "description": "An unordered collection of openStaffPositionAcademicSubjects. The teaching field required for the open staff position."
          },
          "datePosted": {
            "type": "string",
            "description": "Date the open staff position was posted.",
            "format": "date"
          },
          "datePostingRemoved": {
            "type": "string",
            "description": "The date the posting was removed or filled.",
            "format": "date",
            "x-nullable": true
          },
          "employmentStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects the type of employment or contract desired for the position."
          },
          "instructionalGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_openStaffPositionInstructionalGradeLevel"
            },
            "description": "An unordered collection of openStaffPositionInstructionalGradeLevels. The set of grade levels for which the position's assignment is responsible."
          },
          "positionTitle": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name of an individual's position.",
            "x-nullable": true
          },
          "postingResultDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indication of whether the OpenStaffPosition was filled or retired without filling.",
            "x-nullable": true
          },
          "programAssignmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the program for which the open staff position will be assigned.",
            "x-nullable": true
          },
          "staffClassificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The titles of employment, official status, or rank of education staff."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_openStaffPositionAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The teaching field required for the open staff position.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_openStaffPositionInstructionalGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The set of grade levels for which the position's assignment is responsible.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_operationalUnitDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account operational unit dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account operational unit dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_operationalUnitDimensionReportingTag"
            },
            "description": "An unordered collection of operationalUnitDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_operationalUnitDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account operational unit dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_operationalUnitDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_organizationDepartment": {
        "required": [
          "organizationDepartmentId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "organizationDepartmentId": {
            "type": "integer",
            "description": "The unique identification code for the organization department.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "parentEducationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The intended major subject area of the department.",
            "x-nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_person": {
        "required": [
          "sourceSystemDescriptor",
          "personId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_personReference": {
        "required": [
          "personId",
          "sourceSystemDescriptor"
        ],
        "type": "object",
        "properties": {
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_postSecondaryEvent": {
        "required": [
          "postSecondaryEventCategoryDescriptor",
          "eventDate",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "eventDate": {
            "type": "string",
            "description": "The date the event occurred or was recorded.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The post secondary event that is logged.",
            "x-Ed-Fi-isIdentity": true
          },
          "postSecondaryInstitutionReference": {
            "$ref": "#/components/schemas/edFi_postSecondaryInstitutionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_postSecondaryInstitution": {
        "required": [
          "postSecondaryInstitutionId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "postSecondaryInstitutionId": {
            "type": "integer",
            "description": "The ID of the post secondary institution.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "administrativeFundingControlDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).",
            "x-nullable": true
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "mediumOfInstructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_postSecondaryInstitutionMediumOfInstruction"
            },
            "description": "An unordered collection of postSecondaryInstitutionMediumOfInstructions. The categories in which an institution serves the students."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "postSecondaryInstitutionLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A classification of whether a post secondary institution's highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_postSecondaryInstitutionMediumOfInstruction": {
        "required": [
          "mediumOfInstructionDescriptor"
        ],
        "type": "object",
        "properties": {
          "mediumOfInstructionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The categories in which an institution serves the students.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_postSecondaryInstitutionReference": {
        "required": [
          "postSecondaryInstitutionId"
        ],
        "type": "object",
        "properties": {
          "postSecondaryInstitutionId": {
            "type": "integer",
            "description": "The ID of the post secondary institution.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_program": {
        "required": [
          "programTypeDescriptor",
          "programName",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "characteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programCharacteristic"
            },
            "description": "An unordered collection of programCharacteristics. Reflects important characteristics of the program, such as categories or particular indications."
          },
          "learningStandards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programLearningStandard"
            },
            "description": "An unordered collection of programLearningStandards. Learning standard followed by this program."
          },
          "programId": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "x-nullable": true
          },
          "sponsors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programSponsor"
            },
            "description": "An unordered collection of programSponsors. Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual's participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization)."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programCharacteristic": {
        "required": [
          "programCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "programCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects important characteristics of the program, such as categories or particular indications.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_programDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account program dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account program dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account program dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programDimensionReportingTag"
            },
            "description": "An unordered collection of programDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account program dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account program dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_programDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_programEvaluation": {
        "required": [
          "programEvaluationPeriodDescriptor",
          "programEvaluationTypeDescriptor",
          "programEvaluationTitle",
          "programReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "evaluationMaxNumericRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the program evaluation.",
            "format": "double",
            "x-nullable": true
          },
          "evaluationMinNumericRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0",
            "format": "double",
            "x-nullable": true
          },
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programEvaluationLevel"
            },
            "description": "An unordered collection of programEvaluationLevels. The descriptive level(s) of ratings (cut scores) for the program evaluation."
          },
          "programEvaluationDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the program evaluation.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programEvaluationElement": {
        "required": [
          "programEvaluationElementTitle",
          "programEvaluationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programEvaluationElementTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationObjectiveReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationObjectiveReference"
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationReference"
          },
          "elementMaxNumericRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the program evaluation element.",
            "format": "double",
            "x-nullable": true
          },
          "elementMinNumericRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.",
            "format": "double",
            "x-nullable": true
          },
          "elementSortOrder": {
            "type": "integer",
            "description": "The sort order of this program evaluation element.",
            "format": "int32",
            "x-nullable": true
          },
          "programEvaluationElementDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the program evaluation element.",
            "x-nullable": true
          },
          "programEvaluationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programEvaluationElementProgramEvaluationLevel"
            },
            "description": "An unordered collection of programEvaluationElementProgramEvaluationLevels. The descriptive level(s) of ratings (cut scores) for the program evaluation element."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programEvaluationElementProgramEvaluationLevel": {
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "ratingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxNumericRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minNumericRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_programEvaluationElementReference": {
        "required": [
          "programEducationOrganizationId",
          "programEvaluationElementTitle",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationElementTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_programEvaluationLevel": {
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "ratingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxNumericRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minNumericRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_programEvaluationObjective": {
        "required": [
          "programEvaluationObjectiveTitle",
          "programEvaluationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programEvaluationObjectiveTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationReference"
          },
          "objectiveMaxNumericRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the program evaluation objective.",
            "format": "double",
            "x-nullable": true
          },
          "objectiveMinNumericRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0",
            "format": "double",
            "x-nullable": true
          },
          "objectiveSortOrder": {
            "type": "integer",
            "description": "The sort order of this program evaluation objective.",
            "format": "int32",
            "x-nullable": true
          },
          "programEvaluationLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_programEvaluationObjectiveProgramEvaluationLevel"
            },
            "description": "An unordered collection of programEvaluationObjectiveProgramEvaluationLevels. The descriptive level(s) of ratings (cut scores) for the program evaluation objective."
          },
          "programEvaluationObjectiveDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the program evaluation objective.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_programEvaluationObjectiveProgramEvaluationLevel": {
        "required": [
          "ratingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "ratingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxNumericRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minNumericRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_programEvaluationObjectiveReference": {
        "required": [
          "programEducationOrganizationId",
          "programEvaluationObjectiveTitle",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationObjectiveTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_programEvaluationReference": {
        "required": [
          "programEducationOrganizationId",
          "programEvaluationPeriodDescriptor",
          "programEvaluationTitle",
          "programEvaluationTypeDescriptor",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_programLearningStandard": {
        "required": [
          "learningStandardReference"
        ],
        "type": "object",
        "properties": {
          "learningStandardReference": {
            "$ref": "#/components/schemas/edFi_learningStandardReference"
          }
        }
      },
      "edFi_programReference": {
        "required": [
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_programSponsor": {
        "required": [
          "programSponsorDescriptor"
        ],
        "type": "object",
        "properties": {
          "programSponsorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual's participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_projectDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account project dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account project dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account project dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_projectDimensionReportingTag"
            },
            "description": "An unordered collection of projectDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_projectDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account project dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account project dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_projectDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_reportCard": {
        "required": [
          "educationOrganizationReference",
          "gradingPeriodReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/edFi_gradingPeriodReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "gradePointAverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_reportCardGradePointAverage"
            },
            "description": "An unordered collection of reportCardGradePointAverages. A measure of average performance for courses taken by an individual."
          },
          "grades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_reportCardGrade"
            },
            "description": "An unordered collection of reportCardGrades. Grades for the classes attended by the student for this grading period."
          },
          "numberOfDaysAbsent": {
            "minimum": 0.0,
            "type": "number",
            "description": "The number of days an individual is absent when school is in session during a given reporting period.",
            "format": "double",
            "x-nullable": true
          },
          "numberOfDaysInAttendance": {
            "minimum": 0.0,
            "type": "number",
            "description": "The number of days an individual is present when school is in session during a given reporting period.",
            "format": "double",
            "x-nullable": true
          },
          "numberOfDaysTardy": {
            "minimum": 0,
            "type": "integer",
            "description": "The number of days an individual is tardy during a given reporting period.",
            "format": "int32",
            "x-nullable": true
          },
          "studentCompetencyObjectives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_reportCardStudentCompetencyObjective"
            },
            "description": "An unordered collection of reportCardStudentCompetencyObjectives. The student competency evaluations associated for this grading period."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_reportCardGrade": {
        "required": [
          "gradeReference"
        ],
        "type": "object",
        "properties": {
          "gradeReference": {
            "$ref": "#/components/schemas/edFi_gradeReference"
          }
        }
      },
      "edFi_reportCardGradePointAverage": {
        "required": [
          "gradePointAverageTypeDescriptor",
          "gradePointAverageValue"
        ],
        "type": "object",
        "properties": {
          "gradePointAverageTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The system used for calculating the grade point average for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradePointAverageValue": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of the grade points earned divided by the number of credits attempted.",
            "format": "double"
          },
          "isCumulative": {
            "type": "boolean",
            "description": "Indicator of whether or not the Grade Point Average value is cumulative.",
            "x-nullable": true
          },
          "maxGradePointAverageValue": {
            "minimum": 0.0,
            "type": "number",
            "description": "The maximum value for the grade point average.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_reportCardReference": {
        "required": [
          "educationOrganizationId",
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolId",
          "gradingPeriodSchoolYear",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_reportCardStudentCompetencyObjective": {
        "required": [
          "studentCompetencyObjectiveReference"
        ],
        "type": "object",
        "properties": {
          "studentCompetencyObjectiveReference": {
            "$ref": "#/components/schemas/edFi_studentCompetencyObjectiveReference"
          }
        }
      },
      "edFi_restraintEvent": {
        "required": [
          "restraintEventIdentifier",
          "eventDate",
          "schoolReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "restraintEventIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting where the RestraintEvent was exercised.",
            "x-nullable": true
          },
          "eventDate": {
            "type": "string",
            "description": "Month, day, and year of the restraint event.",
            "format": "date"
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_restraintEventProgram"
            },
            "description": "An unordered collection of restraintEventPrograms. The special education program associated with the restraint event."
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_restraintEventReason"
            },
            "description": "An unordered collection of restraintEventReasons. A categorization of the circumstances or reason for the RestraintEvent."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_restraintEventProgram": {
        "required": [
          "programReference"
        ],
        "type": "object",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_restraintEventReason": {
        "required": [
          "restraintEventReasonDescriptor"
        ],
        "type": "object",
        "properties": {
          "restraintEventReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A categorization of the circumstances or reason for the RestraintEvent.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_school": {
        "required": [
          "schoolId",
          "nameOfInstitution",
          "gradeLevels",
          "educationOrganizationCategories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_schoolGradeLevel"
            },
            "description": "An unordered collection of schoolGradeLevels. The grade levels served at the school."
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "charterApprovalSchoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "localEducationAgencyReference": {
            "$ref": "#/components/schemas/edFi_localEducationAgencyReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "administrativeFundingControlDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of education institution as classified by its funding source, for example public or private.",
            "x-nullable": true
          },
          "charterApprovalAgencyTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of agency that approved the establishment or continuation of a charter school.",
            "x-nullable": true
          },
          "charterStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.",
            "x-nullable": true
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "internetAccessDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of Internet access available.",
            "x-nullable": true
          },
          "magnetSpecialProgramEmphasisSchoolDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).",
            "x-nullable": true
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "schoolCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_schoolCategory"
            },
            "description": "An unordered collection of schoolCategories. The one or more categories of school."
          },
          "schoolTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of education institution as classified by its primary focus.",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "titleIPartASchoolDesignationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Denotes the Title I Part A designation for the school.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          },
          "_ext": {
            "$ref": "#/components/schemas/schoolExtensions"
          }
        }
      },
      "edFi_schoolCategory": {
        "required": [
          "schoolCategoryDescriptor"
        ],
        "type": "object",
        "properties": {
          "schoolCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The one or more categories of school.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_schoolGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels served at the school.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_schoolReference": {
        "required": [
          "schoolId"
        ],
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_schoolYearType": {
        "required": [
          "schoolYear",
          "currentSchoolYear",
          "schoolYearDescription"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "schoolYear": {
            "type": "integer",
            "description": "Key for School Year",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "currentSchoolYear": {
            "type": "boolean",
            "description": "The code for the current school year."
          },
          "schoolYearDescription": {
            "maxLength": 50,
            "type": "string",
            "description": "The description for the SchoolYear type."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_schoolYearTypeReference": {
        "required": [
          "schoolYear"
        ],
        "type": "object",
        "properties": {
          "schoolYear": {
            "type": "integer",
            "description": "Key for School Year",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_section": {
        "required": [
          "sectionIdentifier",
          "courseOfferingReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "courseOfferingReference": {
            "$ref": "#/components/schemas/edFi_courseOfferingReference"
          },
          "locationReference": {
            "$ref": "#/components/schemas/edFi_locationReference"
          },
          "locationSchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "availableCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "availableCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "availableCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "characteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sectionCharacteristic"
            },
            "description": "An unordered collection of sectionCharacteristics. Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded."
          },
          "classPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sectionClassPeriod"
            },
            "description": "An unordered collection of sectionClassPeriods. The class period during which the section meets."
          },
          "courseLevelCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sectionCourseLevelCharacteristic"
            },
            "description": "An unordered collection of sectionCourseLevelCharacteristics. The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level."
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting in which a student receives education and related services.",
            "x-nullable": true
          },
          "instructionLanguageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary language of instruction. If omitted, English is assumed.",
            "x-nullable": true
          },
          "mediumOfInstructionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.",
            "x-nullable": true
          },
          "offeredGradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sectionOfferedGradeLevel"
            },
            "description": "An unordered collection of sectionOfferedGradeLevels. The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level."
          },
          "officialAttendancePeriod": {
            "type": "boolean",
            "description": "Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.",
            "x-nullable": true
          },
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of students the section is offered and tailored to.",
            "x-nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sectionProgram"
            },
            "description": "An unordered collection of sectionPrograms. Optional reference to program to which the section is associated."
          },
          "sectionName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.",
            "x-nullable": true
          },
          "sectionTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Specifies whether the section is for attendance only, credit only, or both.",
            "x-nullable": true
          },
          "sequenceOfCourse": {
            "maximum": 8,
            "minimum": 1,
            "type": "integer",
            "description": "When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sectionAttendanceTakenEvent": {
        "required": [
          "eventDate",
          "calendarDateReference",
          "sectionReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "calendarDateReference": {
            "$ref": "#/components/schemas/edFi_calendarDateReference"
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "eventDate": {
            "type": "string",
            "description": "The date the section attendance taken event was submitted, which could be a different date than the instructional day.",
            "format": "date"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sectionCharacteristic": {
        "required": [
          "sectionCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "sectionCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_sectionClassPeriod": {
        "required": [
          "classPeriodReference"
        ],
        "type": "object",
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/edFi_classPeriodReference"
          }
        }
      },
      "edFi_sectionCourseLevelCharacteristic": {
        "required": [
          "courseLevelCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "courseLevelCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_sectionOfferedGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_sectionProgram": {
        "required": [
          "programReference"
        ],
        "type": "object",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_sectionReference": {
        "required": [
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sectionIdentifier",
          "sessionName"
        ],
        "type": "object",
        "properties": {
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_session": {
        "required": [
          "sessionName",
          "termDescriptor",
          "beginDate",
          "endDate",
          "totalInstructionalDays",
          "schoolReference",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "academicWeeks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sessionAcademicWeek"
            },
            "description": "An unordered collection of sessionAcademicWeeks. The academic weeks associated with the school year."
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the first day of the session.",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Month, day and year of the last day of the session.",
            "format": "date"
          },
          "gradingPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sessionGradingPeriod"
            },
            "description": "An unordered collection of sessionGradingPeriods. Grading periods associated with the session."
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A descriptor value to indicate the term that the session is associated with."
          },
          "totalInstructionalDays": {
            "minimum": 0,
            "type": "integer",
            "description": "The total number of instructional days in the school calendar.",
            "format": "int32"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sessionAcademicWeek": {
        "required": [
          "academicWeekReference"
        ],
        "type": "object",
        "properties": {
          "academicWeekReference": {
            "$ref": "#/components/schemas/edFi_academicWeekReference"
          }
        }
      },
      "edFi_sessionGradingPeriod": {
        "required": [
          "gradingPeriodReference"
        ],
        "type": "object",
        "properties": {
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/edFi_gradingPeriodReference"
          }
        }
      },
      "edFi_sessionReference": {
        "required": [
          "schoolId",
          "schoolYear",
          "sessionName"
        ],
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_sourceDimension": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account source dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account source dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "codeName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "A description of the account source dimension.",
            "x-nullable": true
          },
          "reportingTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_sourceDimensionReportingTag"
            },
            "description": "An unordered collection of sourceDimensionReportingTags. Optional tag for accountability reporting."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_sourceDimensionReference": {
        "required": [
          "code",
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account source dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account source dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_sourceDimensionReportingTag": {
        "required": [
          "reportingTagDescriptor"
        ],
        "type": "object",
        "properties": {
          "reportingTagDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Optional tag for accountability reporting.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staff": {
        "required": [
          "firstName",
          "lastSurname",
          "staffUniqueId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffAddress"
            },
            "description": "An unordered collection of staffAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code."
          },
          "ancestryEthnicOrigins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffAncestryEthnicOrigin"
            },
            "description": "An unordered collection of staffAncestryEthnicOrigins. The original peoples or cultures with which the individual identifies."
          },
          "birthDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was born.",
            "format": "date",
            "x-nullable": true
          },
          "citizenshipStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "x-nullable": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffCredential"
            },
            "description": "An unordered collection of staffCredentials. The legal document giving authorization to perform teaching assignment services."
          },
          "electronicMails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffElectronicMail"
            },
            "description": "An unordered collection of staffElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs."
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "genderIdentity": {
            "maxLength": 60,
            "type": "string",
            "description": "The gender the staff member identifies themselves as.",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "highestCompletedLevelOfEducationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).",
            "x-nullable": true
          },
          "highlyQualifiedTeacher": {
            "type": "boolean",
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "type": "boolean",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "x-nullable": true
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffIdentificationCode"
            },
            "description": "An unordered collection of staffIdentificationCodes. A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity."
          },
          "identificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffIdentificationDocument"
            },
            "description": "An unordered collection of staffIdentificationDocuments. Describe the documentation of citizenship."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffInternationalAddress"
            },
            "description": "An unordered collection of staffInternationalAddresses. The set of elements that describes an international address."
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffLanguage"
            },
            "description": "An unordered collection of staffLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes."
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "loginId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The login ID for the user; used for security access control interface.",
            "x-nullable": true
          },
          "maidenName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The individual's maiden name.",
            "x-nullable": true
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "otherNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffOtherName"
            },
            "description": "An unordered collection of staffOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person."
          },
          "personalIdentificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffPersonalIdentificationDocument"
            },
            "description": "An unordered collection of staffPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc."
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          },
          "preferredFirstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The first name the individual prefers, if different from their legal first name",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The last name the individual prefers, if different from their legal last name",
            "x-nullable": true
          },
          "races": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffRace"
            },
            "description": "An unordered collection of staffRaces. The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races."
          },
          "recognitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffRecognition"
            },
            "description": "An unordered collection of staffRecognitions. Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity."
          },
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The birth sex of the staff member.",
            "x-nullable": true
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffTelephone"
            },
            "description": "An unordered collection of staffTelephones. The 10-digit telephone number, including the area code, for the person."
          },
          "tribalAffiliations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffTribalAffiliation"
            },
            "description": "An unordered collection of staffTribalAffiliations. An American Indian tribe with which the staff member is affiliated."
          },
          "visas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffVisa"
            },
            "description": "An unordered collection of staffVisas. An indicator of a non-US citizen's Visa type."
          },
          "yearsOfPriorProfessionalExperience": {
            "type": "number",
            "description": "The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.",
            "format": "double",
            "x-nullable": true
          },
          "yearsOfPriorTeachingExperience": {
            "type": "number",
            "description": "The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.",
            "format": "double",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffAbsenceEvent": {
        "required": [
          "absenceEventCategoryDescriptor",
          "eventDate",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "absenceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The code describing the type of absence.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this leave event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "absenceEventReason": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Expanded reason for the staff absence.",
            "x-nullable": true
          },
          "hoursAbsent": {
            "type": "number",
            "description": "The hours the staff was absent, if not the entire working day.",
            "format": "double",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffAddressPeriod"
            },
            "description": "An unordered collection of staffAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "edFi_staffAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_staffAncestryEthnicOrigin": {
        "required": [
          "ancestryEthnicOriginDescriptor"
        ],
        "type": "object",
        "properties": {
          "ancestryEthnicOriginDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The original peoples or cultures with which the individual identifies.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffCohortAssociation": {
        "required": [
          "beginDate",
          "cohortReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Start date for the association of staff to this cohort.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortReference": {
            "$ref": "#/components/schemas/edFi_cohortReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "endDate": {
            "type": "string",
            "description": "End date for the association of staff to this cohort.",
            "format": "date",
            "x-nullable": true
          },
          "studentRecordAccess": {
            "type": "boolean",
            "description": "Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffCredential": {
        "required": [
          "credentialReference"
        ],
        "type": "object",
        "properties": {
          "credentialReference": {
            "$ref": "#/components/schemas/edFi_credentialReference"
          }
        }
      },
      "edFi_staffDisciplineIncidentAssociation": {
        "required": [
          "disciplineIncidentParticipationCodes",
          "disciplineIncidentReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "disciplineIncidentParticipationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffDisciplineIncidentAssociationDisciplineIncidentParticipationCode"
            },
            "description": "An unordered collection of staffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident."
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/edFi_disciplineIncidentReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffDisciplineIncidentAssociationDisciplineIncidentParticipationCode": {
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object",
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The role or type of participation of a student in a discipline incident.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffEducationOrganizationAssignmentAssociation": {
        "required": [
          "staffClassificationDescriptor",
          "beginDate",
          "educationOrganizationReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the education organization.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffClassificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The titles of employment, official status, or rank of education staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "credentialReference": {
            "$ref": "#/components/schemas/edFi_credentialReference"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "employmentStaffEducationOrganizationEmploymentAssociationReference": {
            "$ref": "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociationReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "endDate": {
            "type": "string",
            "description": "Month, day, and year of the end or termination date of a staff member's employment, contract, or relationship with the education organization.",
            "format": "date",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "minimum": 0.0,
            "type": "number",
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "format": "double",
            "x-nullable": true
          },
          "orderOfAssignment": {
            "type": "integer",
            "description": "Describes whether the assignment is this the staff member's primary assignment, secondary assignment, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "positionTitle": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The descriptive name of an individual's position.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffEducationOrganizationContactAssociation": {
        "required": [
          "contactTitle",
          "electronicMailAddress",
          "educationOrganizationReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "contactTitle": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The title of the contact in the context of the education organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "address": {
            "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociationAddress"
          },
          "contactTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the type for the contact information.",
            "x-nullable": true
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "The email for the contact associated with the education organization."
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociationTelephone"
            },
            "description": "An unordered collection of staffEducationOrganizationContactAssociationTelephones. The optional telephone for the contact associated with the education organization."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffEducationOrganizationContactAssociationAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)"
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located."
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located."
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address."
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address."
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffEducationOrganizationContactAssociationAddressPeriod"
            },
            "description": "An unordered collection of staffEducationOrganizationContactAssociationAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "edFi_staffEducationOrganizationContactAssociationAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_staffEducationOrganizationContactAssociationTelephone": {
        "required": [
          "telephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "telephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number should not be published.",
            "x-nullable": true
          },
          "orderOfPriority": {
            "minimum": 1,
            "type": "integer",
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "textMessageCapabilityIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffEducationOrganizationEmploymentAssociation": {
        "required": [
          "employmentStatusDescriptor",
          "hireDate",
          "educationOrganizationReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "employmentStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects the type of employment or contract.",
            "x-Ed-Fi-isIdentity": true
          },
          "hireDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was hired for a position.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "credentialReference": {
            "$ref": "#/components/schemas/edFi_credentialReference"
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "annualWage": {
            "type": "number",
            "description": "Annual wage associated with the employment position being reported.",
            "format": "double",
            "x-nullable": true
          },
          "department": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The department or suborganization the employee/contractor is associated with in the education organization.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).",
            "format": "date",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "minimum": 0.0,
            "type": "number",
            "description": "The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.",
            "format": "double",
            "x-nullable": true
          },
          "hourlyWage": {
            "type": "number",
            "description": "Hourly wage associated with the employment position being reported.",
            "format": "double",
            "x-nullable": true
          },
          "offerDate": {
            "type": "string",
            "description": "Date at which the staff member was made an official offer for this employment.",
            "format": "date",
            "x-nullable": true
          },
          "separationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Type of employment separation.",
            "x-nullable": true
          },
          "separationReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reason for terminating the employment.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffEducationOrganizationEmploymentAssociationReference": {
        "required": [
          "educationOrganizationId",
          "employmentStatusDescriptor",
          "hireDate",
          "staffUniqueId"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "employmentStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects the type of employment or contract.",
            "x-Ed-Fi-isIdentity": true
          },
          "hireDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was hired for a position.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_staffElectronicMail": {
        "required": [
          "electronicMailTypeDescriptor",
          "electronicMailAddress"
        ],
        "type": "object",
        "properties": {
          "electronicMailTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic email address should not be published.",
            "x-nullable": true
          },
          "primaryEmailAddressIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffIdentificationCode": {
        "required": [
          "staffIdentificationSystemDescriptor",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "staffIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the staff Identification Code.",
            "x-nullable": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity."
          }
        }
      },
      "edFi_staffIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffInternationalAddress": {
        "required": [
          "addressTypeDescriptor",
          "countryDescriptor",
          "addressLine1"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "countryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes."
          },
          "addressLine1": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The second line of the address.",
            "x-nullable": true
          },
          "addressLine3": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The third line of the address.",
            "x-nullable": true
          },
          "addressLine4": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The fourth line of the address.",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.",
            "format": "date",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which written or spoken communication is being used.",
            "x-Ed-Fi-isIdentity": true
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffLanguageUse"
            },
            "description": "An unordered collection of staffLanguageUses. A description of how the language is used (e.g. Home Language, Native Language, Spoken Language)."
          }
        }
      },
      "edFi_staffLanguageUse": {
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffLeave": {
        "required": [
          "staffLeaveEventCategoryDescriptor",
          "beginDate",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date of the staff leave.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffLeaveEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The code describing the type of leave taken.",
            "x-Ed-Fi-isIdentity": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the staff leave.",
            "format": "date",
            "x-nullable": true
          },
          "reason": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Expanded reason for the staff leave.",
            "x-nullable": true
          },
          "substituteAssigned": {
            "type": "boolean",
            "description": "Indicator of whether a substitute was assigned during the period of staff leave.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffOtherName": {
        "required": [
          "otherNameTypeDescriptor",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "otherNameTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The types of alternate names for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffPersonalIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffProgramAssociation": {
        "required": [
          "beginDate",
          "programReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Start date for the association of staff to this program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "endDate": {
            "type": "string",
            "description": "End date for the association of staff to this program.",
            "format": "date",
            "x-nullable": true
          },
          "studentRecordAccess": {
            "type": "boolean",
            "description": "Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffRace": {
        "required": [
          "raceDescriptor"
        ],
        "type": "object",
        "properties": {
          "raceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffRecognition": {
        "required": [
          "recognitionTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "recognitionTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.",
            "x-Ed-Fi-isIdentity": true
          },
          "achievementCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of achievement attributed to the individual.",
            "x-nullable": true
          },
          "achievementCategorySystem": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "x-nullable": true
          },
          "achievementTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title assigned to the achievement.",
            "x-nullable": true
          },
          "criteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The criteria for competency-based completion of the achievement/award.",
            "x-nullable": true
          },
          "criteriaURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "x-nullable": true
          },
          "evidenceStatement": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "x-nullable": true
          },
          "imageURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The name of the agent, entity, or institution issuing the element.",
            "x-nullable": true
          },
          "issuerOriginURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "x-nullable": true
          },
          "recognitionAwardDate": {
            "type": "string",
            "description": "The date the recognition was awarded or earned.",
            "format": "date",
            "x-nullable": true
          },
          "recognitionAwardExpiresDate": {
            "type": "string",
            "description": "Date on which the recognition expires.",
            "format": "date",
            "x-nullable": true
          },
          "recognitionDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the type of recognition earned by or awarded to the individual.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffReference": {
        "required": [
          "staffUniqueId"
        ],
        "type": "object",
        "properties": {
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_staffSchoolAssociation": {
        "required": [
          "programAssignmentDescriptor",
          "schoolReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programAssignmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the program for which the individual is assigned.",
            "x-Ed-Fi-isIdentity": true
          },
          "calendarReference": {
            "$ref": "#/components/schemas/edFi_calendarReference"
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "academicSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffSchoolAssociationAcademicSubject"
            },
            "description": "An unordered collection of staffSchoolAssociationAcademicSubjects. The academic subjects the individual is eligible to teach."
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_staffSchoolAssociationGradeLevel"
            },
            "description": "An unordered collection of staffSchoolAssociationGradeLevels. The grade levels the individual is eligible to teach."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffSchoolAssociationAcademicSubject": {
        "required": [
          "academicSubjectDescriptor"
        ],
        "type": "object",
        "properties": {
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The academic subjects the individual is eligible to teach.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffSchoolAssociationGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels the individual is eligible to teach.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffSectionAssociation": {
        "required": [
          "beginDate",
          "classroomPositionDescriptor",
          "sectionReference",
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of a teacher's assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "classroomPositionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of position the staff member holds in the specific class/section."
          },
          "endDate": {
            "type": "string",
            "description": "Month, day, and year of the last day of a staff member's assignment to the section.",
            "format": "date",
            "x-nullable": true
          },
          "highlyQualifiedTeacher": {
            "type": "boolean",
            "description": "An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.",
            "x-nullable": true
          },
          "percentageContribution": {
            "type": "number",
            "description": "Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.",
            "format": "double",
            "x-nullable": true
          },
          "teacherStudentDataLinkExclusion": {
            "type": "boolean",
            "description": "Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_staffTelephone": {
        "required": [
          "telephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "telephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number should not be published.",
            "x-nullable": true
          },
          "orderOfPriority": {
            "minimum": 1,
            "type": "integer",
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "textMessageCapabilityIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "x-nullable": true
          }
        }
      },
      "edFi_staffTribalAffiliation": {
        "required": [
          "tribalAffiliationDescriptor"
        ],
        "type": "object",
        "properties": {
          "tribalAffiliationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An American Indian tribe with which the staff member is affiliated.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_staffVisa": {
        "required": [
          "visaDescriptor"
        ],
        "type": "object",
        "properties": {
          "visaDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indicator of a non-US citizen's Visa type.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_stateEducationAgency": {
        "required": [
          "stateEducationAgencyId",
          "nameOfInstitution",
          "categories"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationCategory"
            },
            "description": "An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state."
          },
          "stateEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a state education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "accountabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_stateEducationAgencyAccountability"
            },
            "description": "An unordered collection of stateEducationAgencyAccountabilities. This entity maintains information about federal reporting and accountability for state education agencies."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationAddress"
            },
            "description": "An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4."
          },
          "federalFunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_stateEducationAgencyFederalFunds"
            },
            "description": "An unordered collection of stateEducationAgencyFederalFunds. Contains the information about the reception and use of federal funds for reporting purposes."
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIdentificationCode"
            },
            "description": "An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity."
          },
          "indicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationIndicator"
            },
            "description": "An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization."
          },
          "institutionTelephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
            },
            "description": "An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity."
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_educationOrganizationInternationalAddress"
            },
            "description": "An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity."
          },
          "nameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The full, legally accepted name of the institution."
          },
          "operationalStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current operational status of the education organization (e.g., active, inactive).",
            "x-nullable": true
          },
          "shortNameOfInstitution": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A short name for the institution.",
            "x-nullable": true
          },
          "webSite": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The public web site address (URL) for the education organization.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_stateEducationAgencyAccountability": {
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "cteGraduationRateInclusion": {
            "type": "boolean",
            "description": "An indication of whether CTE concentrators are included in the state's computation of its graduation rate.",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          }
        }
      },
      "edFi_stateEducationAgencyFederalFunds": {
        "required": [
          "fiscalYear"
        ],
        "type": "object",
        "properties": {
          "fiscalYear": {
            "type": "integer",
            "description": "The fiscal year for which the federal funds are received.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "federalProgramsFundingAllocation": {
            "type": "number",
            "description": "The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_stateEducationAgencyReference": {
        "required": [
          "stateEducationAgencyId"
        ],
        "type": "object",
        "properties": {
          "stateEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a state education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_student": {
        "required": [
          "birthDate",
          "firstName",
          "lastSurname",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "birthCity": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The city the student was born in.",
            "x-nullable": true
          },
          "birthCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was born.",
            "format": "date"
          },
          "birthInternationalProvince": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "x-nullable": true
          },
          "birthSexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A person's sex at birth.",
            "x-nullable": true
          },
          "birthStateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "x-nullable": true
          },
          "citizenshipStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indicator of whether or not the person is a U.S. citizen.",
            "x-nullable": true
          },
          "dateEnteredUS": {
            "type": "string",
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "format": "date",
            "x-nullable": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "identificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentIdentificationDocument"
            },
            "description": "An unordered collection of studentIdentificationDocuments. Describe the documentation of citizenship."
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "maidenName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The individual's maiden name.",
            "x-nullable": true
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "multipleBirthStatus": {
            "type": "boolean",
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "x-nullable": true
          },
          "otherNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentOtherName"
            },
            "description": "An unordered collection of studentOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person."
          },
          "personalIdentificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentPersonalIdentificationDocument"
            },
            "description": "An unordered collection of studentPersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc."
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          },
          "preferredFirstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The first name the individual prefers, if different from their legal first name",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The last name the individual prefers, if different from their legal last name",
            "x-nullable": true
          },
          "visas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentVisa"
            },
            "description": "An unordered collection of studentVisas. An indicator of a non-US citizen's Visa type."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentAcademicRecord": {
        "required": [
          "termDescriptor",
          "educationOrganizationReference",
          "schoolYearTypeReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "academicHonors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAcademicRecordAcademicHonor"
            },
            "description": "An unordered collection of studentAcademicRecordAcademicHonors. Academic distinctions earned by or awarded to the student."
          },
          "classRanking": {
            "$ref": "#/components/schemas/edFi_studentAcademicRecordClassRanking"
          },
          "cumulativeAttemptedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "cumulativeAttemptedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "cumulativeAttemptedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "cumulativeEarnedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "cumulativeEarnedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "cumulativeEarnedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "diplomas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAcademicRecordDiploma"
            },
            "description": "An unordered collection of studentAcademicRecordDiplomas. Diploma(s) earned by the student."
          },
          "gradePointAverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAcademicRecordGradePointAverage"
            },
            "description": "An unordered collection of studentAcademicRecordGradePointAverages. The grade point average for an individual computed as the grade points earned divided by the number of credits attempted."
          },
          "projectedGraduationDate": {
            "type": "string",
            "description": "The month and year the student is projected to graduate.",
            "format": "date",
            "x-nullable": true
          },
          "recognitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAcademicRecordRecognition"
            },
            "description": "An unordered collection of studentAcademicRecordRecognitions. Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity."
          },
          "reportCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAcademicRecordReportCard"
            },
            "description": "An unordered collection of studentAcademicRecordReportCards. Report cards for the student."
          },
          "sessionAttemptedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "sessionAttemptedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "sessionAttemptedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "sessionEarnedCreditConversion": {
            "type": "number",
            "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
            "format": "double",
            "x-nullable": true
          },
          "sessionEarnedCredits": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of credits or units of value awarded for the completion of a course.",
            "format": "double",
            "x-nullable": true
          },
          "sessionEarnedCreditTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of credits or units of value awarded for the completion of a course.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentAcademicRecordAcademicHonor": {
        "required": [
          "academicHonorCategoryDescriptor",
          "honorDescription"
        ],
        "type": "object",
        "properties": {
          "academicHonorCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A designation of the type of academic distinctions earned by or awarded to the individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "honorDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the type of academic distinctions earned by or awarded to the individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "achievementCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of achievement attributed to the individual.",
            "x-nullable": true
          },
          "achievementCategorySystem": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "x-nullable": true
          },
          "achievementTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title assigned to the achievement.",
            "x-nullable": true
          },
          "criteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The criteria for competency-based completion of the achievement/award.",
            "x-nullable": true
          },
          "criteriaURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "x-nullable": true
          },
          "evidenceStatement": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "x-nullable": true
          },
          "honorAwardDate": {
            "type": "string",
            "description": "The date the honor was awarded.",
            "format": "date",
            "x-nullable": true
          },
          "honorAwardExpiresDate": {
            "type": "string",
            "description": "Date on which the honor expires.",
            "format": "date",
            "x-nullable": true
          },
          "imageURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The name of the agent, entity, or institution issuing the element.",
            "x-nullable": true
          },
          "issuerOriginURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAcademicRecordClassRanking": {
        "required": [
          "classRank",
          "totalNumberInClass"
        ],
        "type": "object",
        "properties": {
          "classRank": {
            "type": "integer",
            "description": "The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).",
            "format": "int32"
          },
          "classRankingDate": {
            "type": "string",
            "description": "Date class ranking was determined.",
            "format": "date",
            "x-nullable": true
          },
          "percentageRanking": {
            "type": "integer",
            "description": "The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).",
            "format": "int32",
            "x-nullable": true
          },
          "totalNumberInClass": {
            "type": "integer",
            "description": "The total number of students in the student's graduating class.",
            "format": "int32"
          }
        }
      },
      "edFi_studentAcademicRecordDiploma": {
        "required": [
          "diplomaTypeDescriptor",
          "diplomaAwardDate"
        ],
        "type": "object",
        "properties": {
          "diplomaTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.",
            "x-Ed-Fi-isIdentity": true
          },
          "diplomaAwardDate": {
            "type": "string",
            "description": "The month, day, and year on which the student met  graduation requirements and was awarded a diploma.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "achievementCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of achievement attributed to the individual.",
            "x-nullable": true
          },
          "diplomaLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.",
            "x-nullable": true
          },
          "achievementCategorySystem": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "x-nullable": true
          },
          "achievementTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title assigned to the achievement.",
            "x-nullable": true
          },
          "criteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The criteria for competency-based completion of the achievement/award.",
            "x-nullable": true
          },
          "criteriaURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "x-nullable": true
          },
          "cteCompleter": {
            "type": "boolean",
            "description": "Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.",
            "x-nullable": true
          },
          "diplomaAwardExpiresDate": {
            "type": "string",
            "description": "Date on which the diploma expires.",
            "format": "date",
            "x-nullable": true
          },
          "diplomaDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "The description of the diploma given to the student for accomplishments.",
            "x-nullable": true
          },
          "evidenceStatement": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "x-nullable": true
          },
          "imageURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The name of the agent, entity, or institution issuing the element.",
            "x-nullable": true
          },
          "issuerOriginURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAcademicRecordGradePointAverage": {
        "required": [
          "gradePointAverageTypeDescriptor",
          "gradePointAverageValue"
        ],
        "type": "object",
        "properties": {
          "gradePointAverageTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The system used for calculating the grade point average for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradePointAverageValue": {
            "minimum": 0.0,
            "type": "number",
            "description": "The value of the grade points earned divided by the number of credits attempted.",
            "format": "double"
          },
          "isCumulative": {
            "type": "boolean",
            "description": "Indicator of whether or not the Grade Point Average value is cumulative.",
            "x-nullable": true
          },
          "maxGradePointAverageValue": {
            "minimum": 0.0,
            "type": "number",
            "description": "The maximum value for the grade point average.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAcademicRecordRecognition": {
        "required": [
          "recognitionTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "recognitionTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.",
            "x-Ed-Fi-isIdentity": true
          },
          "achievementCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of achievement attributed to the individual.",
            "x-nullable": true
          },
          "achievementCategorySystem": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The system that defines the categories by which an achievement is attributed to the individual.",
            "x-nullable": true
          },
          "achievementTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title assigned to the achievement.",
            "x-nullable": true
          },
          "criteria": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The criteria for competency-based completion of the achievement/award.",
            "x-nullable": true
          },
          "criteriaURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.",
            "x-nullable": true
          },
          "evidenceStatement": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.",
            "x-nullable": true
          },
          "imageURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The name of the agent, entity, or institution issuing the element.",
            "x-nullable": true
          },
          "issuerOriginURL": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The Uniform Resource Locator (URL) from which the award was issued.",
            "x-nullable": true
          },
          "recognitionAwardDate": {
            "type": "string",
            "description": "The date the recognition was awarded or earned.",
            "format": "date",
            "x-nullable": true
          },
          "recognitionAwardExpiresDate": {
            "type": "string",
            "description": "Date on which the recognition expires.",
            "format": "date",
            "x-nullable": true
          },
          "recognitionDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the type of recognition earned by or awarded to the individual.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAcademicRecordReference": {
        "required": [
          "educationOrganizationId",
          "schoolYear",
          "studentUniqueId",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentAcademicRecordReportCard": {
        "required": [
          "reportCardReference"
        ],
        "type": "object",
        "properties": {
          "reportCardReference": {
            "$ref": "#/components/schemas/edFi_reportCardReference"
          }
        }
      },
      "edFi_studentAssessment": {
        "required": [
          "studentAssessmentIdentifier",
          "assessmentReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "studentAssessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentReference": {
            "$ref": "#/components/schemas/edFi_assessmentReference"
          },
          "reportedSchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "accommodations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentAccommodation"
            },
            "description": "An unordered collection of studentAssessmentAccommodations. The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria."
          },
          "administrationDate": {
            "type": "string",
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "format": "date-time",
            "x-nullable": true
          },
          "administrationEndDate": {
            "type": "string",
            "description": "The date and time an assessment administration ended.",
            "format": "date-time",
            "x-nullable": true
          },
          "administrationEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The environment in which the test was administered.",
            "x-nullable": true
          },
          "administrationLanguageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The language in which an assessment is written and/or administered.",
            "x-nullable": true
          },
          "assessedMinutes": {
            "type": "integer",
            "description": "Reported time student was assessed in minutes.",
            "format": "int32",
            "x-nullable": true
          },
          "eventCircumstanceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.",
            "x-nullable": true
          },
          "eventDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Describes special events that occur before during or after the assessment session that may impact use of results.",
            "x-nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentItem"
            },
            "description": "An unordered collection of studentAssessmentItems. The student's response to an assessment item and the item-level scores such as correct, incorrect, or met standard."
          },
          "performanceLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentPerformanceLevel"
            },
            "description": "An unordered collection of studentAssessmentPerformanceLevels. The performance level(s) achieved for the student assessment."
          },
          "period": {
            "$ref": "#/components/schemas/edFi_studentAssessmentPeriod"
          },
          "platformTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The platform with which the assessment was delivered to the student during the assessment session.",
            "x-nullable": true
          },
          "reasonNotTestedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary reason student is not tested.",
            "x-nullable": true
          },
          "reportedSchoolIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.",
            "x-nullable": true
          },
          "retestIndicatorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicator if the test was a retake.",
            "x-nullable": true
          },
          "scoreResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentScoreResult"
            },
            "description": "An unordered collection of studentAssessmentScoreResults. A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc."
          },
          "serialNumber": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique number for the assessment form or answer document.",
            "x-nullable": true
          },
          "studentObjectiveAssessments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessment"
            },
            "description": "An unordered collection of studentAssessmentStudentObjectiveAssessments. The student's score and/or performance levels earned for an objective assessment."
          },
          "whenAssessedGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level of a student when assessed.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentAssessmentAccommodation": {
        "required": [
          "accommodationDescriptor"
        ],
        "type": "object",
        "properties": {
          "accommodationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentAssessmentEducationOrganizationAssociation": {
        "required": [
          "educationOrganizationAssociationTypeDescriptor",
          "educationOrganizationReference",
          "studentAssessmentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationAssociationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of association being represented.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "studentAssessmentReference": {
            "$ref": "#/components/schemas/edFi_studentAssessmentReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentAssessmentItem": {
        "required": [
          "assessmentItemResultDescriptor",
          "assessmentItemReference"
        ],
        "type": "object",
        "properties": {
          "assessmentItemResultDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The analyzed result of a student's response to an assessment item."
          },
          "responseIndicatorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicator of the response.",
            "x-nullable": true
          },
          "assessmentResponse": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "A student's response to a stimulus on a test.",
            "x-nullable": true
          },
          "descriptiveFeedback": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.",
            "x-nullable": true
          },
          "itemNumber": {
            "type": "integer",
            "description": "The test question number for this student's test item.",
            "format": "int32",
            "x-nullable": true
          },
          "rawScoreResult": {
            "type": "number",
            "description": "A meaningful raw score of the performance of a student on an assessment item.",
            "format": "double",
            "x-nullable": true
          },
          "timeAssessed": {
            "maxLength": 30,
            "type": "string",
            "description": "The overall time a student actually spent during the assessment item.",
            "x-nullable": true
          },
          "assessmentItemReference": {
            "$ref": "#/components/schemas/edFi_assessmentItemReference"
          }
        }
      },
      "edFi_studentAssessmentPerformanceLevel": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "performanceLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which performance level value describes the student proficiency.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelIndicatorName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAssessmentPeriod": {
        "required": [
          "assessmentPeriodDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year)."
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the assessment is to be administered.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the assessment is to be administered.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAssessmentReference": {
        "required": [
          "assessmentIdentifier",
          "namespace",
          "studentAssessmentIdentifier",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentAssessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentAssessmentScoreResult": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "resultDatatypeTypeDescriptor",
          "result"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc."
          },
          "result": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc."
          }
        }
      },
      "edFi_studentAssessmentStudentObjectiveAssessment": {
        "required": [
          "objectiveAssessmentReference"
        ],
        "type": "object",
        "properties": {
          "administrationDate": {
            "type": "string",
            "description": "The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.",
            "format": "date-time",
            "x-nullable": true
          },
          "administrationEndDate": {
            "type": "string",
            "description": "The date and time an assessment administration ended.",
            "format": "date-time",
            "x-nullable": true
          },
          "assessedMinutes": {
            "type": "integer",
            "description": "Reported time student was assessed in minutes.",
            "format": "int32",
            "x-nullable": true
          },
          "objectiveAssessmentReference": {
            "$ref": "#/components/schemas/edFi_objectiveAssessmentReference"
          },
          "performanceLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessmentPerformanceLevel"
            },
            "description": "An unordered collection of studentAssessmentStudentObjectiveAssessmentPerformanceLevels. The performance level(s) achieved for the objective assessment."
          },
          "scoreResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessmentScoreResult"
            },
            "description": "An unordered collection of studentAssessmentStudentObjectiveAssessmentScoreResults. A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc."
          }
        }
      },
      "edFi_studentAssessmentStudentObjectiveAssessmentPerformanceLevel": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "performanceLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which performance level value describes the student proficiency.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceLevelIndicatorName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator being measured for a collection of performance level values.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentAssessmentStudentObjectiveAssessmentScoreResult": {
        "required": [
          "assessmentReportingMethodDescriptor",
          "resultDatatypeTypeDescriptor",
          "result"
        ],
        "type": "object",
        "properties": {
          "assessmentReportingMethodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc."
          },
          "result": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc."
          }
        }
      },
      "edFi_studentCohortAssociation": {
        "required": [
          "beginDate",
          "cohortReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year on which the student was first identified as part of the cohort.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortReference": {
            "$ref": "#/components/schemas/edFi_cohortReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student was removed as part of the cohort.",
            "format": "date",
            "x-nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentCohortAssociationSection"
            },
            "description": "An unordered collection of studentCohortAssociationSections. The cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentCohortAssociationSection": {
        "required": [
          "sectionReference"
        ],
        "type": "object",
        "properties": {
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          }
        }
      },
      "edFi_studentCompetencyObjective": {
        "required": [
          "competencyLevelDescriptor",
          "objectiveCompetencyObjectiveReference",
          "gradingPeriodReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "gradingPeriodReference": {
            "$ref": "#/components/schemas/edFi_gradingPeriodReference"
          },
          "objectiveCompetencyObjectiveReference": {
            "$ref": "#/components/schemas/edFi_competencyObjectiveReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "competencyLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The competency level assessed for the student for the referenced competency objective."
          },
          "diagnosticStatement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "x-nullable": true
          },
          "generalStudentProgramAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentCompetencyObjectiveGeneralStudentProgramAssociation"
            },
            "description": "An unordered collection of studentCompetencyObjectiveGeneralStudentProgramAssociations. Relates the student and program associated with the competency objective."
          },
          "studentSectionAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentCompetencyObjectiveStudentSectionAssociation"
            },
            "description": "An unordered collection of studentCompetencyObjectiveStudentSectionAssociations. Relates the student and section associated with the competency objective."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentCompetencyObjectiveGeneralStudentProgramAssociation": {
        "required": [
          "generalStudentProgramAssociationReference"
        ],
        "type": "object",
        "properties": {
          "generalStudentProgramAssociationReference": {
            "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationReference"
          }
        }
      },
      "edFi_studentCompetencyObjectiveReference": {
        "required": [
          "gradingPeriodDescriptor",
          "gradingPeriodName",
          "gradingPeriodSchoolId",
          "gradingPeriodSchoolYear",
          "objective",
          "objectiveEducationOrganizationId",
          "objectiveGradeLevelDescriptor",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The designated title of the competency objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level for which the competency objective is targeted.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentCompetencyObjectiveStudentSectionAssociation": {
        "required": [
          "studentSectionAssociationReference"
        ],
        "type": "object",
        "properties": {
          "studentSectionAssociationReference": {
            "$ref": "#/components/schemas/edFi_studentSectionAssociationReference"
          }
        }
      },
      "edFi_studentContactAssociation": {
        "required": [
          "contactReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "contactReference": {
            "$ref": "#/components/schemas/edFi_contactReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "contactPriority": {
            "type": "integer",
            "description": "The numeric order of the preferred sequence or priority of contact.",
            "format": "int32",
            "x-nullable": true
          },
          "contactRestrictions": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).",
            "x-nullable": true
          },
          "emergencyContactStatus": {
            "type": "boolean",
            "description": "Indicator of whether the person is a designated emergency contact for the student.",
            "x-nullable": true
          },
          "legalGuardian": {
            "type": "boolean",
            "description": "Indicator of whether the person is a legal guardian for the student.",
            "x-nullable": true
          },
          "livesWith": {
            "type": "boolean",
            "description": "Indicator of whether the student lives with the associated contact.",
            "x-nullable": true
          },
          "primaryContactStatus": {
            "type": "boolean",
            "description": "Indicator of whether the person is a primary contact for the student.",
            "x-nullable": true
          },
          "relationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The nature of an individual's relationship to a student, primarily used to capture family relationships.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentCTEProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "cteProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentCTEProgramAssociationCTEProgramService"
            },
            "description": "An unordered collection of studentCTEProgramAssociationCTEProgramServices. Indicates the service(s) being provided to the student by the CTE program."
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "nonTraditionalGenderStatus": {
            "type": "boolean",
            "description": "Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.",
            "x-nullable": true
          },
          "privateCTEProgram": {
            "type": "boolean",
            "description": "Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "technicalSkillsAssessmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Results of technical skills assessment aligned with industry recognized standards.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentCTEProgramAssociationCTEProgramService": {
        "required": [
          "cteProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "cteProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the CTE program.",
            "x-Ed-Fi-isIdentity": true
          },
          "cipCode": {
            "maxLength": 120,
            "minLength": 1,
            "type": "string",
            "description": "Number and description of the CIP code associated with the student's CTE program.",
            "x-nullable": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentDisciplineIncidentBehaviorAssociation": {
        "required": [
          "behaviorDescriptor",
          "disciplineIncidentReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "behaviorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Describes behavior by category.",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/edFi_disciplineIncidentReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "behaviorDetailedDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Specifies a more granular level of detail of a behavior involved in the incident.",
            "x-nullable": true
          },
          "disciplineIncidentParticipationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode"
            },
            "description": "An unordered collection of studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode": {
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object",
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The role or type of participation of a student in a discipline incident.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentDisciplineIncidentBehaviorAssociationReference": {
        "required": [
          "behaviorDescriptor",
          "incidentIdentifier",
          "schoolId",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "behaviorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Describes behavior by category.",
            "x-Ed-Fi-isIdentity": true
          },
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentDisciplineIncidentNonOffenderAssociation": {
        "required": [
          "disciplineIncidentReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "disciplineIncidentReference": {
            "$ref": "#/components/schemas/edFi_disciplineIncidentReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "disciplineIncidentParticipationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode"
            },
            "description": "An unordered collection of studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCodes. The role or type of participation of a student in a discipline incident."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode": {
        "required": [
          "disciplineIncidentParticipationCodeDescriptor"
        ],
        "type": "object",
        "properties": {
          "disciplineIncidentParticipationCodeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The role or type of participation of a student in a discipline incident.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociation": {
        "required": [
          "educationOrganizationReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationAddress"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code."
          },
          "ancestryEthnicOrigins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationAncestryEthnicOrigin"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationAncestryEthnicOrigins. The original peoples or cultures with which the individual identifies."
          },
          "barrierToInternetAccessInResidenceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the barrier to having internet access in the student s primary place of residence.",
            "x-nullable": true
          },
          "cohortYears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationCohortYear"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationCohortYears. The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade."
          },
          "disabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationDisability"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationDisabilities. The disability condition(s) that best describes an individual's impairment, as determined by evaluation(s) conducted by the education organization."
          },
          "electronicMails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationElectronicMail"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs."
          },
          "genderIdentity": {
            "maxLength": 60,
            "type": "string",
            "description": "The student's gender as last reported to the education organization.",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "type": "boolean",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "x-nullable": true
          },
          "internationalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationInternationalAddress"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationInternationalAddresses. The set of elements that describes an international address."
          },
          "internetAccessInResidence": {
            "type": "boolean",
            "description": "An indication of whether the student is able to access the internet in their primary place of residence.",
            "x-nullable": true
          },
          "internetAccessTypeInResidenceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary type of internet service used in the student s primary place of residence.",
            "x-nullable": true
          },
          "internetPerformanceInResidenceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.",
            "x-nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationLanguage"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes."
          },
          "limitedEnglishProficiencyDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "x-nullable": true
          },
          "loginId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The login ID for the user; used for security access control interface.",
            "x-nullable": true
          },
          "primaryLearningDeviceAccessDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of whether the primary learning device is shared or not shared with another individual.",
            "x-nullable": true
          },
          "primaryLearningDeviceAwayFromSchoolDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of device the student uses most often to complete learning activities away from school.",
            "x-nullable": true
          },
          "primaryLearningDeviceProviderDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The provider of the primary learning device.",
            "x-nullable": true
          },
          "profileThumbnail": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Locator reference for the student photo. The specification for that reference is left to local definition.",
            "x-nullable": true
          },
          "races": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationRace"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationRaces. The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races."
          },
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The student's birth sex as reported to the education organization.",
            "x-nullable": true
          },
          "studentCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentCharacteristic"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationStudentCharacteristics. Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise."
          },
          "studentIdentificationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIdentificationCode"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationStudentIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student."
          },
          "studentIndicators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIndicator"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationStudentIndicators. An indicator or metric computed for the student (e.g., at risk)."
          },
          "supporterMilitaryConnectionDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Military connection of the person/people whom the student is a dependent of.",
            "x-nullable": true
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationTelephone"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationTelephones. The 10-digit telephone number, including the area code, for the person."
          },
          "tribalAffiliations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationTribalAffiliation"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationTribalAffiliations. An American Indian tribe with which the student is affiliated as last reported to the education organization."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationAddressPeriod"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationAncestryEthnicOrigin": {
        "required": [
          "ancestryEthnicOriginDescriptor"
        ],
        "type": "object",
        "properties": {
          "ancestryEthnicOriginDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The original peoples or cultures with which the individual identifies.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationCohortYear": {
        "required": [
          "cohortYearTypeDescriptor",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "cohortYearTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of cohort year (9th grade, graduation).",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term associated with the cohort year; for example, the intended term of graduation.",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationDisability": {
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A disability category that describes a individual's impairment.",
            "x-Ed-Fi-isIdentity": true
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The source that provided the disability determination.",
            "x-nullable": true
          },
          "disabilityDiagnosis": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the disability diagnosis.",
            "x-nullable": true
          },
          "orderOfDisability": {
            "type": "integer",
            "description": "The order by severity of individual's disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "designations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationDisabilityDesignation"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationDisabilityDesignations. Whether the disability is IDEA, Section 504, or other disability designation."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationDisabilityDesignation": {
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDesignationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationElectronicMail": {
        "required": [
          "electronicMailTypeDescriptor",
          "electronicMailAddress"
        ],
        "type": "object",
        "properties": {
          "electronicMailTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic email address should not be published.",
            "x-nullable": true
          },
          "primaryEmailAddressIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationInternationalAddress": {
        "required": [
          "addressTypeDescriptor",
          "countryDescriptor",
          "addressLine1"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "countryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes."
          },
          "addressLine1": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The second line of the address.",
            "x-nullable": true
          },
          "addressLine3": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The third line of the address.",
            "x-nullable": true
          },
          "addressLine4": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The fourth line of the address.",
            "x-nullable": true
          },
          "beginDate": {
            "type": "string",
            "description": "The first date the address is valid. For physical addresses, the date the individual moved to that address.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The last date the address is valid. For physical addresses, the date the individual moved from that address.",
            "format": "date",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which written or spoken communication is being used.",
            "x-Ed-Fi-isIdentity": true
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationLanguageUse"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationLanguageUses. A description of how the language is used (e.g. Home Language, Native Language, Spoken Language)."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationLanguageUse": {
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationRace": {
        "required": [
          "raceDescriptor"
        ],
        "type": "object",
        "properties": {
          "raceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationStudentCharacteristic": {
        "required": [
          "studentCharacteristicDescriptor"
        ],
        "type": "object",
        "properties": {
          "studentCharacteristicDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The characteristic designated for the student.",
            "x-Ed-Fi-isIdentity": true
          },
          "designatedBy": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The person, organization, or department that designated the characteristic.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentCharacteristicPeriod"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationStudentCharacteristicPeriods. The time periods for which characteristic was effective."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationStudentCharacteristicPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationStudentIdentificationCode": {
        "required": [
          "studentIdentificationSystemDescriptor",
          "assigningOrganizationIdentificationCode",
          "identificationCode"
        ],
        "type": "object",
        "properties": {
          "studentIdentificationSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "assigningOrganizationIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The organization code or name assigning the StudentIdentificationCode.",
            "x-Ed-Fi-isIdentity": true
          },
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationStudentIndicator": {
        "required": [
          "indicatorName",
          "indicator"
        ],
        "type": "object",
        "properties": {
          "indicatorName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "The name of the indicator or metric.",
            "x-Ed-Fi-isIdentity": true
          },
          "designatedBy": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The person, organization, or department that designated the program association.",
            "x-nullable": true
          },
          "indicator": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The value of the indicator or metric."
          },
          "indicatorGroup": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "The name for a group of indicators.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIndicatorPeriod"
            },
            "description": "An unordered collection of studentEducationOrganizationAssociationStudentIndicatorPeriods. The time periods for which the indicator was effective."
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationStudentIndicatorPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationTelephone": {
        "required": [
          "telephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "telephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number should not be published.",
            "x-nullable": true
          },
          "orderOfPriority": {
            "minimum": 1,
            "type": "integer",
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "textMessageCapabilityIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentEducationOrganizationAssociationTribalAffiliation": {
        "required": [
          "tribalAffiliationDescriptor"
        ],
        "type": "object",
        "properties": {
          "tribalAffiliationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An American Indian tribe with which the student is affiliated as last reported to the education organization.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentEducationOrganizationResponsibilityAssociation": {
        "required": [
          "responsibilityDescriptor",
          "beginDate",
          "educationOrganizationReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the start date of an education organization's responsibility for a student.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "responsibilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indications of an education organization's responsibility for a student, such as accountability, attendance, funding, etc.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "endDate": {
            "type": "string",
            "description": "Month, day, and year of the end date of an education organization's responsibility for a student.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentGradebookEntry": {
        "required": [
          "gradebookEntryReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "gradebookEntryReference": {
            "$ref": "#/components/schemas/edFi_gradebookEntryReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "assignmentLateStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Status of whether the assignment was submitted after the due date and/or marked as.",
            "x-nullable": true
          },
          "competencyLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The competency level assessed for the student for the referenced learning objective.",
            "x-nullable": true
          },
          "dateFulfilled": {
            "type": "string",
            "description": "The date an assignment was turned in or the date of an assessment.",
            "format": "date",
            "x-nullable": true
          },
          "diagnosticStatement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A statement provided by the teacher that provides information in addition to the grade or assessment score.",
            "x-nullable": true
          },
          "letterGradeEarned": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "x-nullable": true
          },
          "numericGradeEarned": {
            "type": "number",
            "description": "A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.",
            "format": "double",
            "x-nullable": true
          },
          "pointsEarned": {
            "type": "number",
            "description": "The points earned for the submission. With extra credit, the points earned may exceed the max points.",
            "format": "double",
            "x-nullable": true
          },
          "submissionStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The status of the student's submission.",
            "x-nullable": true
          },
          "timeFulfilled": {
            "type": "string",
            "description": "The time an assignment was turned in on the date fulfilled.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentHomelessProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "awaitingFosterCare": {
            "type": "boolean",
            "description": "State defined definition for awaiting foster care.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "homelessPrimaryNighttimeResidenceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary nighttime residence of the student at the time the student is identified as homeless.",
            "x-nullable": true
          },
          "homelessProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentHomelessProgramAssociationHomelessProgramService"
            },
            "description": "An unordered collection of studentHomelessProgramAssociationHomelessProgramServices. Indicates the service(s) being provided to the student by the homeless program."
          },
          "homelessUnaccompaniedYouth": {
            "type": "boolean",
            "description": "A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentHomelessProgramAssociationHomelessProgramService": {
        "required": [
          "homelessProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "homelessProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the homeless program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentInterventionAssociation": {
        "required": [
          "interventionReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "cohortReference": {
            "$ref": "#/components/schemas/edFi_cohortReference"
          },
          "interventionReference": {
            "$ref": "#/components/schemas/edFi_interventionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "diagnosticStatement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.",
            "x-nullable": true
          },
          "dosage": {
            "type": "integer",
            "description": "The duration of time in minutes for which the student was assigned to participate in the intervention.",
            "format": "int32",
            "x-nullable": true
          },
          "interventionEffectivenesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentInterventionAssociationInterventionEffectiveness"
            },
            "description": "An unordered collection of studentInterventionAssociationInterventionEffectivenesses. A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentInterventionAssociationInterventionEffectiveness": {
        "required": [
          "diagnosisDescriptor",
          "gradeLevelDescriptor",
          "populationServedDescriptor",
          "interventionEffectivenessRatingDescriptor"
        ],
        "type": "object",
        "properties": {
          "diagnosisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Grade level for which effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "populationServedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Population for which effectiveness is measured.",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionEffectivenessRatingDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects."
          },
          "improvementIndex": {
            "type": "integer",
            "description": "Along a percentile distribution of students, the improvement index represents the change in an average student's percentile rank that is considered to be due to the intervention.",
            "format": "int32",
            "x-nullable": true
          }
        }
      },
      "edFi_studentInterventionAttendanceEvent": {
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "interventionReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionReference": {
            "$ref": "#/components/schemas/edFi_interventionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "attendanceEventReason": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The reported reason for a student's absence.",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "x-nullable": true
          },
          "eventDuration": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "x-nullable": true
          },
          "interventionDuration": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "description": "The duration in minutes in which the student participated in the intervention during this instance.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentLanguageInstructionProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "dosage": {
            "type": "integer",
            "description": "The duration of time in minutes for which the student was assigned to participate in the program.",
            "format": "int32",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "englishLanguageProficiencyAssessments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment"
            },
            "description": "An unordered collection of studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments. Results of yearly English language assessment."
          },
          "englishLearnerParticipation": {
            "type": "boolean",
            "description": "An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.",
            "x-nullable": true
          },
          "languageInstructionProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentLanguageInstructionProgramAssociationLanguageInstructionProgramService"
            },
            "description": "An unordered collection of studentLanguageInstructionProgramAssociationLanguageInstructionProgramServices. Indicates the service(s) being provided to the student by the language instruction program."
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment": {
        "required": [
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "monitoredDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Student is monitored on content achievement who are no longer receiving services.",
            "x-nullable": true
          },
          "participationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Field indicating the participation in the yearly English language assessment.",
            "x-nullable": true
          },
          "proficiencyDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The proficiency level for the yearly English language assessment.",
            "x-nullable": true
          },
          "progressDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The yearly progress or growth from last year's assessment.",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          }
        }
      },
      "edFi_studentLanguageInstructionProgramAssociationLanguageInstructionProgramService": {
        "required": [
          "languageInstructionProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageInstructionProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the language instruction program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentMigrantEducationProgramAssociation": {
        "required": [
          "beginDate",
          "lastQualifyingMove",
          "priorityForServices",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "continuationOfServicesReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The \"continuation of services\" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).",
            "x-nullable": true
          },
          "eligibilityExpirationDate": {
            "type": "string",
            "description": "The eligibility expiration date is used to determine end of eligibility and to account for a child's eligibility expiring earlier than 36 months from the child's QAD. A child's eligibility would end earlier than 36 months from the child's QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states' requirements), or if the child passes away.",
            "format": "date",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "lastQualifyingMove": {
            "type": "string",
            "description": "Date the last qualifying move occurred; used to compute MEP status.",
            "format": "date"
          },
          "migrantEducationProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentMigrantEducationProgramAssociationMigrantEducationProgramService"
            },
            "description": "An unordered collection of studentMigrantEducationProgramAssociationMigrantEducationProgramServices. Indicates the service(s) being provided to the student by the migrant education program."
          },
          "priorityForServices": {
            "type": "boolean",
            "description": "Report migratory children who are classified as having \"priority for services\" because they are failing, or most at risk of failing to meet the state's challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year."
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "qualifyingArrivalDate": {
            "type": "string",
            "description": "The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child's eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.",
            "format": "date",
            "x-nullable": true
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "stateResidencyDate": {
            "type": "string",
            "description": "The verified state residency for the student.",
            "format": "date",
            "x-nullable": true
          },
          "usInitialEntry": {
            "type": "string",
            "description": "The month, day, and year on which the student first entered the U.S.",
            "format": "date",
            "x-nullable": true
          },
          "usInitialSchoolEntry": {
            "type": "string",
            "description": "The month, day, and year on which the student first entered a U.S. school.",
            "format": "date",
            "x-nullable": true
          },
          "usMostRecentEntry": {
            "type": "string",
            "description": "The month, day, and year of the student's most recent entry into the U.S.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentMigrantEducationProgramAssociationMigrantEducationProgramService": {
        "required": [
          "migrantEducationProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "migrantEducationProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the migrant education program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentNeglectedOrDelinquentProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "elaProgressLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The progress measured from pre- to post- test for ELA.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "mathematicsProgressLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The progress measured from pre- to post-test for Mathematics.",
            "x-nullable": true
          },
          "neglectedOrDelinquentProgramDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).",
            "x-nullable": true
          },
          "neglectedOrDelinquentProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService"
            },
            "description": "An unordered collection of studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices. Indicates the service(s) being provided to the student by the neglected or delinquent program."
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService": {
        "required": [
          "neglectedOrDelinquentProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "neglectedOrDelinquentProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the neglected or delinquent program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentOtherName": {
        "required": [
          "otherNameTypeDescriptor",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "otherNameTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The types of alternate names for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentPersonalIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "edFi_studentProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentProgramAssociationService"
            },
            "description": "An unordered collection of studentProgramAssociationServices. Indicates the service(s) being provided to the student by the program."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentProgramAssociationService": {
        "required": [
          "serviceDescriptor"
        ],
        "type": "object",
        "properties": {
          "serviceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentProgramAttendanceEvent": {
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "attendanceEventReason": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The reported reason for a student's absence.",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "x-nullable": true
          },
          "eventDuration": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "x-nullable": true
          },
          "programAttendanceDuration": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "description": "The duration in minutes of the program attendance event.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentProgramEvaluation": {
        "required": [
          "evaluationDate",
          "programEvaluationReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationDate": {
            "type": "string",
            "description": "The month, day, and year on which the evaluation was conducted.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programEvaluationReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationReference"
          },
          "staffEvaluatorStaffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "evaluationDuration": {
            "minimum": 1,
            "type": "integer",
            "description": "The actual or estimated number of clock minutes during which the evaluation was conducted.",
            "format": "int32",
            "x-nullable": true
          },
          "externalEvaluators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentProgramEvaluationExternalEvaluator"
            },
            "description": "An unordered collection of studentProgramEvaluationExternalEvaluators. The external person(s) - not staff - that conducted the evaluation."
          },
          "studentEvaluationElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentProgramEvaluationStudentEvaluationElement"
            },
            "description": "An unordered collection of studentProgramEvaluationStudentEvaluationElements. The student's rating and/or rating levels earned for a program evaluation element."
          },
          "studentEvaluationObjectives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentProgramEvaluationStudentEvaluationObjective"
            },
            "description": "An unordered collection of studentProgramEvaluationStudentEvaluationObjectives. The student's rating and/or rating levels earned for a program evaluation objective."
          },
          "summaryEvaluationComment": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Any comments about the summary evaluation to be captured.",
            "x-nullable": true
          },
          "summaryEvaluationNumericRating": {
            "type": "number",
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "x-nullable": true
          },
          "summaryEvaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The summary rating level achieved based upon the rating or score.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentProgramEvaluationExternalEvaluator": {
        "required": [
          "externalEvaluator"
        ],
        "type": "object",
        "properties": {
          "externalEvaluator": {
            "maxLength": 150,
            "type": "string",
            "description": "The external person(s) - not staff - that conducted the evaluation.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentProgramEvaluationStudentEvaluationElement": {
        "required": [
          "programEvaluationElementReference"
        ],
        "type": "object",
        "properties": {
          "evaluationElementRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score for the evaluation element.",
            "x-nullable": true
          },
          "evaluationElementNumericRating": {
            "type": "number",
            "description": "The numerical rating or score for the evaluation element.",
            "format": "double",
            "x-nullable": true
          },
          "programEvaluationElementReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationElementReference"
          }
        }
      },
      "edFi_studentProgramEvaluationStudentEvaluationObjective": {
        "required": [
          "programEvaluationObjectiveReference"
        ],
        "type": "object",
        "properties": {
          "evaluationObjectiveRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score for the evaluation objective.",
            "x-nullable": true
          },
          "evaluationObjectiveNumericRating": {
            "type": "number",
            "description": "The numerical rating or score for the evaluation objective.",
            "format": "double",
            "x-nullable": true
          },
          "programEvaluationObjectiveReference": {
            "$ref": "#/components/schemas/edFi_programEvaluationObjectiveReference"
          }
        }
      },
      "edFi_studentReference": {
        "required": [
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentSchoolAssociation": {
        "required": [
          "entryDate",
          "entryGradeLevelDescriptor",
          "schoolReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "entryDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "calendarReference": {
            "$ref": "#/components/schemas/edFi_calendarReference"
          },
          "classOfSchoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "graduationPlanReference": {
            "$ref": "#/components/schemas/edFi_graduationPlanReference"
          },
          "nextYearSchoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "alternativeGraduationPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSchoolAssociationAlternativeGraduationPlan"
            },
            "description": "An unordered collection of studentSchoolAssociationAlternativeGraduationPlans. The secondary graduation plan or plans associated with the student enrolled in the school."
          },
          "educationPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSchoolAssociationEducationPlan"
            },
            "description": "An unordered collection of studentSchoolAssociationEducationPlans. The type of education plan(s) the student is following, if appropriate."
          },
          "employedWhileEnrolled": {
            "type": "boolean",
            "description": "An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.",
            "x-nullable": true
          },
          "enrollmentTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of enrollment reflected by the StudentSchoolAssociation.",
            "x-nullable": true
          },
          "entryGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session."
          },
          "entryGradeLevelReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.",
            "x-nullable": true
          },
          "entryTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The process by which a student enters a school during a given academic session.",
            "x-nullable": true
          },
          "exitWithdrawDate": {
            "type": "string",
            "description": "The recorded exit or withdraw date for the student.",
            "format": "date",
            "x-nullable": true
          },
          "exitWithdrawTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The circumstances under which the student exited from membership in an educational institution.",
            "x-nullable": true
          },
          "fullTimeEquivalency": {
            "minimum": 0.0,
            "type": "number",
            "description": "The full-time equivalent ratio for the student s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.",
            "format": "double",
            "x-nullable": true
          },
          "nextYearGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The anticipated grade level for the student for the next school year.",
            "x-nullable": true
          },
          "primarySchool": {
            "type": "boolean",
            "description": "Indicates if a given enrollment record should be considered the primary record for a student.",
            "x-nullable": true
          },
          "repeatGradeIndicator": {
            "type": "boolean",
            "description": "An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.",
            "x-nullable": true
          },
          "residencyStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.",
            "x-nullable": true
          },
          "schoolChoice": {
            "type": "boolean",
            "description": "An indication of whether the student enrolled in this school under the provisions for public school choice",
            "x-nullable": true
          },
          "schoolChoiceBasisDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state",
            "x-nullable": true
          },
          "schoolChoiceTransfer": {
            "type": "boolean",
            "description": "An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.",
            "x-nullable": true,
            "x-Ed-Fi-isDeprecated": true,
            "x-Ed-Fi-deprecatedReasons": "Will be removed in Data Standard v7.0"
          },
          "termCompletionIndicator": {
            "type": "boolean",
            "description": "Idicates whether or not a student completed the most recent school term.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSchoolAssociationAlternativeGraduationPlan": {
        "required": [
          "alternativeGraduationPlanReference"
        ],
        "type": "object",
        "properties": {
          "alternativeGraduationPlanReference": {
            "$ref": "#/components/schemas/edFi_graduationPlanReference"
          }
        }
      },
      "edFi_studentSchoolAssociationEducationPlan": {
        "required": [
          "educationPlanDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationPlanDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of education plan(s) the student is following, if appropriate.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentSchoolAttendanceEvent": {
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "schoolReference",
          "sessionReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolReference": {
            "$ref": "#/components/schemas/edFi_schoolReference"
          },
          "sessionReference": {
            "$ref": "#/components/schemas/edFi_sessionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "arrivalTime": {
            "type": "string",
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "x-nullable": true
          },
          "attendanceEventReason": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The reported reason for a student's absence.",
            "x-nullable": true
          },
          "departureTime": {
            "type": "string",
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "x-nullable": true
          },
          "eventDuration": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "x-nullable": true
          },
          "schoolAttendanceDuration": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "description": "The duration in minutes of the school attendance event.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSchoolFoodServiceProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "directCertification": {
            "type": "boolean",
            "description": "Indicates that the student's National School Lunch Program (NSLP) eligibility has been determined through direct certification.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "schoolFoodServiceProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService"
            },
            "description": "An unordered collection of studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices. Indicates the service(s) being provided to the student by the school food service program."
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService": {
        "required": [
          "schoolFoodServiceProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "schoolFoodServiceProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the school food service program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentSectionAssociation": {
        "required": [
          "beginDate",
          "sectionReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "attemptStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the student's completion status for the section.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Month, day, and year of the withdrawal or exit of the student from the section.",
            "format": "date",
            "x-nullable": true
          },
          "homeroomIndicator": {
            "type": "boolean",
            "description": "Indicates the section is the student's homeroom. Homeroom period may the convention for taking daily attendance.",
            "x-nullable": true
          },
          "programs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSectionAssociationProgram"
            },
            "description": "An unordered collection of studentSectionAssociationPrograms. The program(s) that the student is participating in the context of the course."
          },
          "repeatIdentifierDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication as to whether a student has previously taken a given course.",
            "x-nullable": true
          },
          "teacherStudentDataLinkExclusion": {
            "type": "boolean",
            "description": "Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSectionAssociationProgram": {
        "required": [
          "programReference"
        ],
        "type": "object",
        "properties": {
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          }
        }
      },
      "edFi_studentSectionAssociationReference": {
        "required": [
          "beginDate",
          "localCourseCode",
          "schoolId",
          "schoolYear",
          "sectionIdentifier",
          "sessionName",
          "studentUniqueId"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_studentSectionAttendanceEvent": {
        "required": [
          "attendanceEventCategoryDescriptor",
          "eventDate",
          "sectionReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "arrivalTime": {
            "type": "string",
            "description": "The time of day the student arrived for the attendance event in ISO 8601 format.",
            "x-nullable": true
          },
          "attendanceEventReason": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The reported reason for a student's absence.",
            "x-nullable": true
          },
          "classPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSectionAttendanceEventClassPeriod"
            },
            "description": "An unordered collection of studentSectionAttendanceEventClassPeriods. The class period(s) to which the section attendance event applies."
          },
          "departureTime": {
            "type": "string",
            "description": "The time of day the student departed for the attendance event in ISO 8601 format.",
            "x-nullable": true
          },
          "educationalEnvironmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.",
            "x-nullable": true
          },
          "eventDuration": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number",
            "description": "The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.",
            "format": "double",
            "x-nullable": true
          },
          "sectionAttendanceDuration": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "description": "The duration in minutes of the section attendance event.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSectionAttendanceEventClassPeriod": {
        "required": [
          "classPeriodReference"
        ],
        "type": "object",
        "properties": {
          "classPeriodReference": {
            "$ref": "#/components/schemas/edFi_classPeriodReference"
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociation": {
        "required": [
          "beginDate",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "disabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociationDisability"
            },
            "description": "An unordered collection of studentSpecialEducationProgramAssociationDisabilities. The disability condition(s) that best describes an individual's impairment, as related to special education services received."
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "ideaEligibility": {
            "type": "boolean",
            "description": "Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).",
            "x-nullable": true
          },
          "iepBeginDate": {
            "type": "string",
            "description": "The effective date of the most recent IEP.",
            "format": "date",
            "x-nullable": true
          },
          "iepEndDate": {
            "type": "string",
            "description": "The end date of the most recent IEP.",
            "format": "date",
            "x-nullable": true
          },
          "iepReviewDate": {
            "type": "string",
            "description": "The date of the last IEP review.",
            "format": "date",
            "x-nullable": true
          },
          "lastEvaluationDate": {
            "type": "string",
            "description": "The date of the last special education evaluation.",
            "format": "date",
            "x-nullable": true
          },
          "medicallyFragile": {
            "type": "boolean",
            "description": "Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.",
            "x-nullable": true
          },
          "multiplyDisabled": {
            "type": "boolean",
            "description": "Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "schoolHoursPerWeek": {
            "type": "number",
            "description": "Indicate the total number of hours of instructional time per week for the school that the student attends.",
            "format": "double",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "serviceProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociationServiceProvider"
            },
            "description": "An unordered collection of studentSpecialEducationProgramAssociationServiceProviders. The staff providing special education services to the student."
          },
          "specialEducationExitDate": {
            "type": "string",
            "description": "The  month, day and year on which a person stops receiving special education services.",
            "format": "date",
            "x-nullable": true
          },
          "specialEducationExitExplained": {
            "maxLength": 1024,
            "type": "string",
            "description": "Explanation on why a person stops receiving special education services.",
            "x-nullable": true
          },
          "specialEducationExitReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason why a person stops receiving special education services.",
            "x-nullable": true
          },
          "specialEducationHoursPerWeek": {
            "type": "number",
            "description": "The number of hours per week for special education instruction and therapy.",
            "format": "double",
            "x-nullable": true
          },
          "specialEducationProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramService"
            },
            "description": "An unordered collection of studentSpecialEducationProgramAssociationSpecialEducationProgramServices. Indicates the service(s) being provided to the student by the special education program."
          },
          "specialEducationSettingDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The major instructional setting (more than 50 percent of a student's special education program).",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociationDisability": {
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A disability category that describes a individual's impairment.",
            "x-Ed-Fi-isIdentity": true
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The source that provided the disability determination.",
            "x-nullable": true
          },
          "disabilityDiagnosis": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the disability diagnosis.",
            "x-nullable": true
          },
          "orderOfDisability": {
            "type": "integer",
            "description": "The order by severity of individual's disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "designations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociationDisabilityDesignation"
            },
            "description": "An unordered collection of studentSpecialEducationProgramAssociationDisabilityDesignations. Whether the disability is IDEA, Section 504, or other disability designation."
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociationDisabilityDesignation": {
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDesignationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociationServiceProvider": {
        "required": [
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "primaryProvider": {
            "type": "boolean",
            "description": "Primary ServiceProvider.",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramService": {
        "required": [
          "specialEducationProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "specialEducationProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the special education program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider"
            },
            "description": "An unordered collection of studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders. The staff providing the service to the student."
          }
        }
      },
      "edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider": {
        "required": [
          "staffReference"
        ],
        "type": "object",
        "properties": {
          "primaryProvider": {
            "type": "boolean",
            "description": "Primary ServiceProvider.",
            "x-nullable": true
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          }
        }
      },
      "edFi_studentSpecialEducationProgramEligibilityAssociation": {
        "required": [
          "consentToEvaluationReceivedDate",
          "ideaPartDescriptor",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "consentToEvaluationReceivedDate": {
            "type": "string",
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student's parent or guardian. This is the first day of the evaluation timeframe.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "consentToEvaluationDate": {
            "type": "string",
            "description": "The date on which the student's parent gave a consent (Parent Consent Date).",
            "format": "date",
            "x-nullable": true
          },
          "eligibilityConferenceDate": {
            "type": "string",
            "description": "The month, day, and year when the eligibility conference is held between the parent(s)/guardian(s) and the educational organization responsible staff member(s) to review and make decision on special education related services eligibility.",
            "format": "date",
            "x-nullable": true
          },
          "eligibilityDelayReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason why the eligibility determination was completed beyond the required timeframe.",
            "x-nullable": true
          },
          "eligibilityDeterminationDate": {
            "type": "string",
            "description": "Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child's eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.",
            "format": "date",
            "x-nullable": true
          },
          "eligibilityEvaluationDate": {
            "type": "string",
            "description": "Indicates the month, day, and year when the written individual evaluation report was completed.",
            "format": "date",
            "x-nullable": true
          },
          "eligibilityEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates if this is an initial evaluation or a reevaluation.",
            "x-nullable": true
          },
          "evaluationCompleteIndicator": {
            "type": "boolean",
            "description": "Indicates the evaluation completed status.",
            "x-nullable": true
          },
          "evaluationDelayDays": {
            "type": "integer",
            "description": "Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.",
            "format": "int32",
            "x-nullable": true
          },
          "evaluationDelayReasonDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.",
            "x-nullable": true
          },
          "evaluationLateReason": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Refers to additional information for delay in doing the evaluation.",
            "x-nullable": true
          },
          "ideaIndicator": {
            "type": "boolean",
            "description": "Indicates whether or not the student was determined eligible as a result of an evaluation.",
            "x-nullable": true
          },
          "ideaPartDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates if the evaluation is done under Part B IDEA or Part C IDEA."
          },
          "originalECIServicesDate": {
            "type": "string",
            "description": "The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.",
            "format": "date",
            "x-nullable": true
          },
          "transitionConferenceDate": {
            "type": "string",
            "description": "Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child's potential eligibility for early childhood special education (ECSE) services.",
            "format": "date",
            "x-nullable": true
          },
          "transitionNotificationDate": {
            "type": "string",
            "description": "Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentTitleIPartAProgramAssociation": {
        "required": [
          "beginDate",
          "titleIPartAParticipantDescriptor",
          "educationOrganizationReference",
          "programReference",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the student exited the program or stopped receiving services.",
            "format": "date",
            "x-nullable": true
          },
          "programParticipationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
            },
            "description": "An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses. The status of the student's program participation."
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The reason the student left the program within a school or district.",
            "x-nullable": true
          },
          "servedOutsideOfRegularSession": {
            "type": "boolean",
            "description": "Indicates whether the student received services during the summer session or between sessions.",
            "x-nullable": true
          },
          "titleIPartAParticipantDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication of the type of Title I program, if any, in which the student is participating and by which the student is served."
          },
          "titleIPartAProgramServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_studentTitleIPartAProgramAssociationTitleIPartAProgramService"
            },
            "description": "An unordered collection of studentTitleIPartAProgramAssociationTitleIPartAProgramServices. Indicates the service(s) being provided to the student by the Title I Part A program."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_studentTitleIPartAProgramAssociationTitleIPartAProgramService": {
        "required": [
          "titleIPartAProgramServiceDescriptor"
        ],
        "type": "object",
        "properties": {
          "titleIPartAProgramServiceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates the service being provided to the student by the Title I Part A Program.",
            "x-Ed-Fi-isIdentity": true
          },
          "primaryIndicator": {
            "type": "boolean",
            "description": "True if service is a primary service.",
            "x-nullable": true
          },
          "serviceBeginDate": {
            "type": "string",
            "description": "First date the Student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          },
          "serviceEndDate": {
            "type": "string",
            "description": "Last date the Student was in this option for the current school year.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "edFi_studentVisa": {
        "required": [
          "visaDescriptor"
        ],
        "type": "object",
        "properties": {
          "visaDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indicator of a non-US citizen's Visa type.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_survey": {
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveyTitle",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "sessionReference": {
            "$ref": "#/components/schemas/edFi_sessionReference"
          },
          "numberAdministered": {
            "type": "integer",
            "description": "Number of persons to whom this survey was administered.",
            "format": "int32",
            "x-nullable": true
          },
          "surveyCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category or type of survey.",
            "x-nullable": true
          },
          "surveyTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title of the survey."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyCourseAssociation": {
        "required": [
          "courseReference",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "courseReference": {
            "$ref": "#/components/schemas/edFi_courseReference"
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyProgramAssociation": {
        "required": [
          "programReference",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programReference": {
            "$ref": "#/components/schemas/edFi_programReference"
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyQuestion": {
        "required": [
          "questionCode",
          "questionFormDescriptor",
          "questionText",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "questionCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifying code for the question, unique for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "surveySectionReference": {
            "$ref": "#/components/schemas/edFi_surveySectionReference"
          },
          "matrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_surveyQuestionMatrix"
            },
            "description": "An unordered collection of surveyQuestionMatrices. Information about the matrix element in the survey."
          },
          "questionFormDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The form or type of question."
          },
          "questionText": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The text of the question."
          },
          "responseChoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_surveyQuestionResponseChoice"
            },
            "description": "An unordered collection of surveyQuestionResponseChoices. The optional list of possible responses to a survey question."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyQuestionMatrix": {
        "required": [
          "matrixElement"
        ],
        "type": "object",
        "properties": {
          "matrixElement": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "For matrix questions, the text identifying each row of the matrix.",
            "x-Ed-Fi-isIdentity": true
          },
          "maxRawScore": {
            "type": "integer",
            "description": "The maximum score possible on a survey.",
            "format": "int32",
            "x-nullable": true
          },
          "minRawScore": {
            "type": "integer",
            "description": "The minimum score possible on a survey.",
            "format": "int32",
            "x-nullable": true
          }
        }
      },
      "edFi_surveyQuestionReference": {
        "required": [
          "namespace",
          "questionCode",
          "surveyIdentifier"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "questionCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifying code for the question, unique for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_surveyQuestionResponse": {
        "required": [
          "surveyQuestionReference",
          "surveyResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "surveyQuestionReference": {
            "$ref": "#/components/schemas/edFi_surveyQuestionReference"
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/edFi_surveyResponseReference"
          },
          "comment": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Additional information provided by the responder about the question in the survey.",
            "x-nullable": true
          },
          "noResponse": {
            "type": "boolean",
            "description": "Indicates there was no response to the question.",
            "x-nullable": true
          },
          "surveyQuestionMatrixElementResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_surveyQuestionResponseSurveyQuestionMatrixElementResponse"
            },
            "description": "An unordered collection of surveyQuestionResponseSurveyQuestionMatrixElementResponses. For matrix questions, the response for each row of the matrix."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_surveyQuestionResponseValue"
            },
            "description": "An unordered collection of surveyQuestionResponseValues. For free-form, single- or multiple-selection questions, one or more responses."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyQuestionResponseChoice": {
        "required": [
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "description": "Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn't apply, the value of NumericValue or a unique, possibly sequential numeric value.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "numericValue": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.",
            "format": "int32",
            "x-nullable": true
          },
          "textValue": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.",
            "x-nullable": true
          }
        }
      },
      "edFi_surveyQuestionResponseSurveyQuestionMatrixElementResponse": {
        "required": [
          "matrixElement"
        ],
        "type": "object",
        "properties": {
          "matrixElement": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "For matrix questions, the text identifying each row of the matrix.",
            "x-Ed-Fi-isIdentity": true
          },
          "maxNumericResponse": {
            "type": "integer",
            "description": "The maximum score response to the question.",
            "format": "int32",
            "x-nullable": true
          },
          "minNumericResponse": {
            "type": "integer",
            "description": "The minimum score response to the question.",
            "format": "int32",
            "x-nullable": true
          },
          "noResponse": {
            "type": "boolean",
            "description": "Indicates there was no response to the question.",
            "x-nullable": true
          },
          "numericResponse": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "The numeric response to the question.",
            "format": "int32",
            "x-nullable": true
          },
          "textResponse": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "The text response(s) for the question.",
            "x-nullable": true
          }
        }
      },
      "edFi_surveyQuestionResponseValue": {
        "required": [
          "surveyQuestionResponseValueIdentifier"
        ],
        "type": "object",
        "properties": {
          "surveyQuestionResponseValueIdentifier": {
            "type": "integer",
            "description": "Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "numericResponse": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "A numeric response to the question.",
            "format": "int32",
            "x-nullable": true
          },
          "textResponse": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "A text response to the question.",
            "x-nullable": true
          }
        }
      },
      "edFi_surveyReference": {
        "required": [
          "namespace",
          "surveyIdentifier"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_surveyResponse": {
        "required": [
          "surveyResponseIdentifier",
          "responseDate",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "contactReference": {
            "$ref": "#/components/schemas/edFi_contactReference"
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "Email address of the respondent.",
            "x-nullable": true
          },
          "fullName": {
            "maxLength": 80,
            "type": "string",
            "description": "Full name of the respondent.",
            "x-nullable": true
          },
          "location": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "Location of the respondent, often a city, district, or school.",
            "x-nullable": true
          },
          "responseDate": {
            "type": "string",
            "description": "Date of the survey response.",
            "format": "date"
          },
          "responseTime": {
            "type": "integer",
            "description": "The amount of time (in seconds) it took for the respondent to complete the survey.",
            "format": "int32",
            "x-nullable": true
          },
          "surveyLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/edFi_surveyResponseSurveyLevel"
            },
            "description": "An unordered collection of surveyResponseSurveyLevels. Provides information about the respondents of a survey and how they can be grouped together."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          },
          "_ext": {
            "$ref": "#/components/schemas/surveyResponseExtensions"
          }
        }
      },
      "edFi_surveyResponseEducationOrganizationTargetAssociation": {
        "required": [
          "educationOrganizationReference",
          "surveyResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/edFi_surveyResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyResponseReference": {
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_surveyResponseStaffTargetAssociation": {
        "required": [
          "staffReference",
          "surveyResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/edFi_surveyResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveyResponseSurveyLevel": {
        "required": [
          "surveyLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "surveyLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Provides information about the respondents of a survey and how they can be grouped together.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "edFi_surveySection": {
        "required": [
          "surveySectionTitle",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveySectionAssociation": {
        "required": [
          "sectionReference",
          "surveyReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "surveyReference": {
            "$ref": "#/components/schemas/edFi_surveyReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveySectionReference": {
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveySectionTitle"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_surveySectionResponse": {
        "required": [
          "surveyResponseReference",
          "surveySectionReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/edFi_surveyResponseReference"
          },
          "surveySectionReference": {
            "$ref": "#/components/schemas/edFi_surveySectionReference"
          },
          "sectionRating": {
            "minimum": 0.0,
            "type": "number",
            "description": "Numeric rating computed from the survey responses for the section.",
            "format": "double",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveySectionResponseEducationOrganizationTargetAssociation": {
        "required": [
          "educationOrganizationReference",
          "surveySectionResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/edFi_surveySectionResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "edFi_surveySectionResponseReference": {
        "required": [
          "namespace",
          "surveyIdentifier",
          "surveyResponseIdentifier",
          "surveySectionTitle"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "edFi_surveySectionResponseStaffTargetAssociation": {
        "required": [
          "staffReference",
          "surveySectionResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "staffReference": {
            "$ref": "#/components/schemas/edFi_staffReference"
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/edFi_surveySectionResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "description": "Describes the nature of the relationship to the referenced resource."
          },
          "href": {
            "type": "string",
            "description": "The URL to the related resource."
          }
        }
      },
      "schoolExtensions": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_schoolExtension"
          }
        }
      },
      "surveyResponseExtensions": {
        "type": "object",
        "properties": {
          "tpdm": {
            "$ref": "#/components/schemas/tpdm_surveyResponseExtension"
          }
        }
      },
      "tpdm_candidate": {
        "required": [
          "candidateIdentifier",
          "sexDescriptor",
          "birthDate",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "candidateIdentifier": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "x-Ed-Fi-isIdentity": true
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateAddress"
            },
            "description": "An unordered collection of candidateAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code."
          },
          "birthCity": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The city the student was born in.",
            "x-nullable": true
          },
          "birthCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was born.",
            "format": "date"
          },
          "birthInternationalProvince": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "For students born outside of the U.S., the Province or jurisdiction in which an individual is born.",
            "x-nullable": true
          },
          "birthSexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A person's sex at birth.",
            "x-nullable": true
          },
          "birthStateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.",
            "x-nullable": true
          },
          "dateEnteredUS": {
            "type": "string",
            "description": "For students born outside of the U.S., the date the student entered the U.S.",
            "format": "date",
            "x-nullable": true
          },
          "disabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateDisability"
            },
            "description": "An unordered collection of candidateDisabilities. The disability condition(s) that best describes an individual's impairment."
          },
          "displacementStatus": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.",
            "x-nullable": true
          },
          "economicDisadvantaged": {
            "type": "boolean",
            "description": "An indication of inadequate financial condition of an individual's family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.",
            "x-nullable": true
          },
          "electronicMails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateElectronicMail"
            },
            "description": "An unordered collection of candidateElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs."
          },
          "englishLanguageExamDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).",
            "x-nullable": true
          },
          "firstGenerationStudent": {
            "type": "boolean",
            "description": "Indicator of whether individual is a first generation college student.",
            "x-nullable": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "genderDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The gender of the candidate.",
            "x-nullable": true
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "hispanicLatinoEthnicity": {
            "type": "boolean",
            "description": "An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \"Spanish origin,\" can be used in addition to \"Hispanic or Latino.\"",
            "x-nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateLanguage"
            },
            "description": "An unordered collection of candidateLanguages. The language(s) the individual uses to communicate."
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "limitedEnglishProficiencyDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.",
            "x-nullable": true
          },
          "maidenName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The individual's maiden name.",
            "x-nullable": true
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "multipleBirthStatus": {
            "type": "boolean",
            "description": "Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)",
            "x-nullable": true
          },
          "otherNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateOtherName"
            },
            "description": "An unordered collection of candidateOtherNames. Other names (e.g., alias, nickname, previous legal name) associated with a person."
          },
          "personalIdentificationDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidatePersonalIdentificationDocument"
            },
            "description": "An unordered collection of candidatePersonalIdentificationDocuments. The documents presented as evident to verify one's personal identity; for example: drivers license, passport, birth certificate, etc."
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          },
          "preferredFirstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The first name the individual prefers, if different from their legal first name",
            "x-nullable": true
          },
          "preferredLastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The last name the individual prefers, if different from their legal last name",
            "x-nullable": true
          },
          "races": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateRace"
            },
            "description": "An unordered collection of candidateRaces. The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races."
          },
          "sexDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The sex of the candidate."
          },
          "telephones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateTelephone"
            },
            "description": "An unordered collection of candidateTelephones. The 10-digit telephone number, including the area code, for the person."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_candidateAddress": {
        "required": [
          "addressTypeDescriptor",
          "stateAbbreviationDescriptor",
          "city",
          "postalCode",
          "streetNumberName"
        ],
        "type": "object",
        "properties": {
          "addressTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "stateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the state (within the United States) or outlying area in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "city": {
            "maxLength": 30,
            "minLength": 2,
            "type": "string",
            "description": "The name of the city in which an address is located.",
            "x-Ed-Fi-isIdentity": true
          },
          "postalCode": {
            "maxLength": 17,
            "minLength": 1,
            "type": "string",
            "description": "The five or nine digit zip code or overseas postal code portion of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "streetNumberName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "The street number and street name or post office box number of an address.",
            "x-Ed-Fi-isIdentity": true
          },
          "localeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).",
            "x-nullable": true
          },
          "apartmentRoomSuiteNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The apartment, room, or suite number of an address.",
            "x-nullable": true
          },
          "buildingSiteNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number of the building on the site, if more than one building shares the same address.",
            "x-nullable": true
          },
          "congressionalDistrict": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The congressional district in which an address is located.",
            "x-nullable": true
          },
          "countyFIPSCode": {
            "maxLength": 5,
            "minLength": 3,
            "type": "string",
            "description": "The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the \"first-order subdivisions\" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.",
            "x-nullable": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the address should not be published.",
            "x-nullable": true
          },
          "latitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic latitude of the physical address.",
            "x-nullable": true
          },
          "longitude": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The geographic longitude of the physical address.",
            "x-nullable": true
          },
          "nameOfCounty": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "The name of the county, parish, borough, or comparable unit (within a state) in                       'which an address is located.",
            "x-nullable": true
          },
          "periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateAddressPeriod"
            },
            "description": "An unordered collection of candidateAddressPeriods. The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address."
          }
        }
      },
      "tpdm_candidateAddressPeriod": {
        "required": [
          "beginDate"
        ],
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year for the start of the period.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year for the end of the period.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "tpdm_candidateDisability": {
        "required": [
          "disabilityDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A disability category that describes a individual's impairment.",
            "x-Ed-Fi-isIdentity": true
          },
          "disabilityDeterminationSourceTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The source that provided the disability determination.",
            "x-nullable": true
          },
          "disabilityDiagnosis": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "A description of the disability diagnosis.",
            "x-nullable": true
          },
          "orderOfDisability": {
            "type": "integer",
            "description": "The order by severity of individual's disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "designations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateDisabilityDesignation"
            },
            "description": "An unordered collection of candidateDisabilityDesignations. Whether the disability is IDEA, Section 504, or other disability designation."
          }
        }
      },
      "tpdm_candidateDisabilityDesignation": {
        "required": [
          "disabilityDesignationDescriptor"
        ],
        "type": "object",
        "properties": {
          "disabilityDesignationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Whether the disability is IDEA, Section 504, or other disability designation.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "tpdm_candidateEducatorPreparationProgramAssociation": {
        "required": [
          "beginDate",
          "candidateReference",
          "educatorPreparationProgramReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date for the association.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "candidateReference": {
            "$ref": "#/components/schemas/tpdm_candidateReference"
          },
          "educatorPreparationProgramReference": {
            "$ref": "#/components/schemas/tpdm_educatorPreparationProgramReference"
          },
          "cohortYears": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociationCohortYear"
            },
            "description": "An unordered collection of candidateEducatorPreparationProgramAssociationCohortYears. The type and year of a cohort the student belongs to as determined by the year that student entered a specific grade."
          },
          "degreeSpecializations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociationDegreeSpecialization"
            },
            "description": "An unordered collection of candidateEducatorPreparationProgramAssociationDegreeSpecializations. Information around the area(s) of specialization for an individual."
          },
          "endDate": {
            "type": "string",
            "description": "The end date for the association.",
            "format": "date",
            "x-nullable": true
          },
          "eppProgramPathwayDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The program pathway the candidate is following; for example: Residency, Internship, Traditional",
            "x-nullable": true
          },
          "reasonExitedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reason exited for the association.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_candidateEducatorPreparationProgramAssociationCohortYear": {
        "required": [
          "cohortYearTypeDescriptor",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "cohortYearTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of cohort year (9th grade, graduation).",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term associated with the cohort year; for example, the intended term of graduation.",
            "x-nullable": true
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          }
        }
      },
      "tpdm_candidateEducatorPreparationProgramAssociationDegreeSpecialization": {
        "required": [
          "majorSpecialization"
        ],
        "type": "object",
        "properties": {
          "majorSpecialization": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The major area for a degree or area of specialization for a certificate.",
            "x-Ed-Fi-isIdentity": true
          },
          "endDate": {
            "type": "string",
            "description": "The month, day, and year on which the Teacher Candidate exited the declared specialization.",
            "format": "date",
            "x-nullable": true
          },
          "minorSpecialization": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The minor area for a degree or area of specialization for a certificate.",
            "x-nullable": true
          }
        }
      },
      "tpdm_candidateElectronicMail": {
        "required": [
          "electronicMailTypeDescriptor",
          "electronicMailAddress"
        ],
        "type": "object",
        "properties": {
          "electronicMailTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)",
            "x-Ed-Fi-isIdentity": true
          },
          "electronicMailAddress": {
            "maxLength": 128,
            "minLength": 7,
            "type": "string",
            "description": "The electronic mail (e-mail) address listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic email address should not be published.",
            "x-nullable": true
          },
          "primaryEmailAddressIndicator": {
            "type": "boolean",
            "description": "An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.",
            "x-nullable": true
          }
        }
      },
      "tpdm_candidateLanguage": {
        "required": [
          "languageDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A specification of which written or spoken communication is being used.",
            "x-Ed-Fi-isIdentity": true
          },
          "uses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_candidateLanguageUse"
            },
            "description": "An unordered collection of candidateLanguageUses. A description of how the language is used (e.g. Home Language, Native Language, Spoken Language)."
          }
        }
      },
      "tpdm_candidateLanguageUse": {
        "required": [
          "languageUseDescriptor"
        ],
        "type": "object",
        "properties": {
          "languageUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "tpdm_candidateOtherName": {
        "required": [
          "otherNameTypeDescriptor",
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "otherNameTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The types of alternate names for an individual.",
            "x-Ed-Fi-isIdentity": true
          },
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change."
          },
          "generationCodeSuffix": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "An appendage, if any, used to denote an individual's generation in his family (e.g., Jr., Sr., III).",
            "x-nullable": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family."
          },
          "middleName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A secondary name given to an individual at birth, baptism, or during another naming ceremony.",
            "x-nullable": true
          },
          "personalTitlePrefix": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "A prefix used to denote the title, degree, position, or seniority of the individual.",
            "x-nullable": true
          }
        }
      },
      "tpdm_candidatePersonalIdentificationDocument": {
        "required": [
          "identificationDocumentUseDescriptor",
          "personalInformationVerificationDescriptor"
        ],
        "type": "object",
        "properties": {
          "identificationDocumentUseDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The primary function of the document used for establishing identity.",
            "x-Ed-Fi-isIdentity": true
          },
          "personalInformationVerificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The category of the document relative to its purpose.",
            "x-Ed-Fi-isIdentity": true
          },
          "issuerCountryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.",
            "x-nullable": true
          },
          "documentExpirationDate": {
            "type": "string",
            "description": "The day when the document  expires, if null then never expires.",
            "format": "date",
            "x-nullable": true
          },
          "documentTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the document given by the issuer.",
            "x-nullable": true
          },
          "issuerDocumentIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique identifier on the issuer's identification system.",
            "x-nullable": true
          },
          "issuerName": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "description": "Name of the entity or institution that issued the document.",
            "x-nullable": true
          }
        }
      },
      "tpdm_candidateRace": {
        "required": [
          "raceDescriptor"
        ],
        "type": "object",
        "properties": {
          "raceDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The general racial category which most clearly reflects the individual's recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "tpdm_candidateReference": {
        "required": [
          "candidateIdentifier"
        ],
        "type": "object",
        "properties": {
          "candidateIdentifier": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_candidateTelephone": {
        "required": [
          "telephoneNumberTypeDescriptor",
          "telephoneNumber"
        ],
        "type": "object",
        "properties": {
          "telephoneNumberTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of communication number listed for an individual or organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "telephoneNumber": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "The telephone number including the area code, and extension, if applicable.",
            "x-Ed-Fi-isIdentity": true
          },
          "doNotPublishIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number should not be published.",
            "x-nullable": true
          },
          "orderOfPriority": {
            "minimum": 1,
            "type": "integer",
            "description": "The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.",
            "format": "int32",
            "x-nullable": true
          },
          "textMessageCapabilityIndicator": {
            "type": "boolean",
            "description": "An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.",
            "x-nullable": true
          }
        }
      },
      "tpdm_credentialExtension": {
        "type": "object",
        "properties": {
          "certificationRouteDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The process, program, or pathway used to obtain certification.",
            "x-nullable": true
          },
          "credentialStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current status of the credential (e.g., active, suspended, etc.).",
            "x-nullable": true
          },
          "educatorRoleDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.",
            "x-nullable": true
          },
          "boardCertificationIndicator": {
            "type": "boolean",
            "description": "Indicator that the credential was granted under the authority of a national Board Certification.",
            "x-nullable": true
          },
          "certificationTitle": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "The title of the certification obtained by the educator.",
            "x-nullable": true
          },
          "credentialStatusDate": {
            "type": "string",
            "description": "The month, day, and year on which the credential status was effective.",
            "format": "date",
            "x-nullable": true
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "studentAcademicRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_credentialStudentAcademicRecord"
            },
            "description": "An unordered collection of credentialStudentAcademicRecords. Reference to the person's Student Academic Records for the school(s) with which the Credential is associated."
          }
        }
      },
      "tpdm_credentialStudentAcademicRecord": {
        "required": [
          "studentAcademicRecordReference"
        ],
        "type": "object",
        "properties": {
          "studentAcademicRecordReference": {
            "$ref": "#/components/schemas/edFi_studentAcademicRecordReference"
          }
        }
      },
      "tpdm_educatorPreparationProgram": {
        "required": [
          "programTypeDescriptor",
          "programName",
          "educationOrganizationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "programName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name of the Educator Preparation Program.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "accreditationStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The current accreditation status of the Educator Preparation Program.",
            "x-nullable": true
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_educatorPreparationProgramGradeLevel"
            },
            "description": "An unordered collection of educatorPreparationProgramGradeLevels. The grade levels served at the EPP Program."
          },
          "programId": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_educatorPreparationProgramGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels served at the EPP Program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "tpdm_educatorPreparationProgramReference": {
        "required": [
          "educationOrganizationId",
          "programName",
          "programTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name of the Educator Preparation Program.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_evaluation": {
        "required": [
          "evaluationTitle",
          "performanceEvaluationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationReference": {
            "$ref": "#/components/schemas/tpdm_performanceEvaluationReference"
          },
          "evaluationDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the Evaluation.",
            "x-nullable": true
          },
          "evaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "x-nullable": true
          },
          "interRaterReliabilityScore": {
            "type": "integer",
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "format": "int32",
            "x-nullable": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the evaluation.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.",
            "format": "double",
            "x-nullable": true
          },
          "ratingLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationRatingLevel"
            },
            "description": "An unordered collection of evaluationRatingLevels. The descriptive level(s) of ratings (cut scores) for the evaluation."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationElement": {
        "required": [
          "evaluationElementTitle",
          "evaluationObjectiveReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationElementTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveReference": {
            "$ref": "#/components/schemas/tpdm_evaluationObjectiveReference"
          },
          "evaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).",
            "x-nullable": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the evaluation element.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.",
            "format": "double",
            "x-nullable": true
          },
          "ratingLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationElementRatingLevel"
            },
            "description": "An unordered collection of evaluationElementRatingLevels. The descriptive level(s) of ratings (cut scores) for evaluation element."
          },
          "sortOrder": {
            "type": "integer",
            "description": "The sort order of this Evaluation Element.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationElementRating": {
        "required": [
          "evaluationElementReference",
          "evaluationObjectiveRatingReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationElementReference": {
            "$ref": "#/components/schemas/tpdm_evaluationElementReference"
          },
          "evaluationObjectiveRatingReference": {
            "$ref": "#/components/schemas/tpdm_evaluationObjectiveRatingReference"
          },
          "areaOfRefinement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Area identified for person to refine or improve as part of the evaluation.",
            "x-nullable": true
          },
          "areaOfReinforcement": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Area identified for reinforcement or positive feedback as part of the evaluation.",
            "x-nullable": true
          },
          "comments": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Any comments about the performance evaluation to be captured.",
            "x-nullable": true
          },
          "evaluationElementRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score.",
            "x-nullable": true
          },
          "feedback": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Feedback provided to the evaluated person.",
            "x-nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationElementRatingResult"
            },
            "description": "An unordered collection of evaluationElementRatingResults. The numerical summary rating or score for the evaluation element."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationElementRatingLevel": {
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "tpdm_evaluationElementRatingResult": {
        "required": [
          "rating",
          "ratingResultTitle",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingResultTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The title of Rating Result.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result."
          }
        }
      },
      "tpdm_evaluationElementReference": {
        "required": [
          "educationOrganizationId",
          "evaluationElementTitle",
          "evaluationObjectiveTitle",
          "evaluationPeriodDescriptor",
          "evaluationTitle",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_evaluationObjective": {
        "required": [
          "evaluationObjectiveTitle",
          "evaluationReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationReference": {
            "$ref": "#/components/schemas/tpdm_evaluationReference"
          },
          "evaluationObjectiveDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the Evaluation Objective.",
            "x-nullable": true
          },
          "evaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).",
            "x-nullable": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum summary numerical rating or score for the evaluation Objective.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.",
            "format": "double",
            "x-nullable": true
          },
          "ratingLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationObjectiveRatingLevel"
            },
            "description": "An unordered collection of evaluationObjectiveRatingLevels. The descriptive level(s) of ratings (cut scores) for evaluation Objective."
          },
          "sortOrder": {
            "type": "integer",
            "description": "The sort order of this Evaluation Objective.",
            "format": "int32",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationObjectiveRating": {
        "required": [
          "evaluationObjectiveReference",
          "evaluationRatingReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationObjectiveReference": {
            "$ref": "#/components/schemas/tpdm_evaluationObjectiveReference"
          },
          "evaluationRatingReference": {
            "$ref": "#/components/schemas/tpdm_evaluationRatingReference"
          },
          "comments": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Any comments about the performance evaluation to be captured.",
            "x-nullable": true
          },
          "objectiveRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score.",
            "x-nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationObjectiveRatingResult"
            },
            "description": "An unordered collection of evaluationObjectiveRatingResults. The numerical summary rating or score for the evaluation Objective."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationObjectiveRatingLevel": {
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "tpdm_evaluationObjectiveRatingReference": {
        "required": [
          "educationOrganizationId",
          "evaluationDate",
          "evaluationObjectiveTitle",
          "evaluationPeriodDescriptor",
          "evaluationTitle",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "personId",
          "schoolYear",
          "sourceSystemDescriptor",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_evaluationObjectiveRatingResult": {
        "required": [
          "rating",
          "ratingResultTitle",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingResultTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The title of Rating Result.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result."
          }
        }
      },
      "tpdm_evaluationObjectiveReference": {
        "required": [
          "educationOrganizationId",
          "evaluationObjectiveTitle",
          "evaluationPeriodDescriptor",
          "evaluationTitle",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_evaluationRating": {
        "required": [
          "evaluationDate",
          "evaluationReference",
          "performanceEvaluationRatingReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationReference": {
            "$ref": "#/components/schemas/tpdm_evaluationReference"
          },
          "performanceEvaluationRatingReference": {
            "$ref": "#/components/schemas/tpdm_performanceEvaluationRatingReference"
          },
          "sectionReference": {
            "$ref": "#/components/schemas/edFi_sectionReference"
          },
          "evaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score.",
            "x-nullable": true
          },
          "evaluationRatingStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The Status of the poerformance evaluation.",
            "x-nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationRatingResult"
            },
            "description": "An unordered collection of evaluationRatingResults. The numerical summary rating or score for the evaluation."
          },
          "reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_evaluationRatingReviewer"
            },
            "description": "An unordered collection of evaluationRatingReviewers. The person(s) that conducted the performance evaluation."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_evaluationRatingLevel": {
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "tpdm_evaluationRatingReference": {
        "required": [
          "educationOrganizationId",
          "evaluationDate",
          "evaluationPeriodDescriptor",
          "evaluationTitle",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "personId",
          "schoolYear",
          "sourceSystemDescriptor",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_evaluationRatingResult": {
        "required": [
          "rating",
          "ratingResultTitle",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingResultTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The title of Rating Result.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result."
          }
        }
      },
      "tpdm_evaluationRatingReviewer": {
        "required": [
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "x-Ed-Fi-isIdentity": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family.",
            "x-Ed-Fi-isIdentity": true
          },
          "reviewerPersonReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "receivedTraining": {
            "$ref": "#/components/schemas/tpdm_evaluationRatingReviewerReceivedTraining"
          }
        }
      },
      "tpdm_evaluationRatingReviewerReceivedTraining": {
        "type": "object",
        "properties": {
          "interRaterReliabilityScore": {
            "type": "integer",
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "format": "int32",
            "x-nullable": true
          },
          "receivedTrainingDate": {
            "type": "string",
            "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "tpdm_evaluationReference": {
        "required": [
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "evaluationTitle",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_financialAid": {
        "required": [
          "aidTypeDescriptor",
          "beginDate",
          "studentReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "aidTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "The date the award was designated.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "studentReference": {
            "$ref": "#/components/schemas/edFi_studentReference"
          },
          "aidAmount": {
            "type": "number",
            "description": "The amount of financial aid awarded to a person for the term/year.",
            "format": "double",
            "x-nullable": true
          },
          "aidConditionDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The description of the condition (e.g., placement in a high need school) under which the aid was given.",
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date the award was removed.",
            "format": "date",
            "x-nullable": true
          },
          "pellGrantRecipient": {
            "type": "boolean",
            "description": "Indicates a person who receives Pell Grant aid.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_performanceEvaluation": {
        "required": [
          "evaluationPeriodDescriptor",
          "performanceEvaluationTypeDescriptor",
          "termDescriptor",
          "performanceEvaluationTitle",
          "educationOrganizationReference",
          "schoolYearTypeReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationReference": {
            "$ref": "#/components/schemas/edFi_educationOrganizationReference"
          },
          "schoolYearTypeReference": {
            "$ref": "#/components/schemas/edFi_schoolYearTypeReference"
          },
          "academicSubjectDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The description of the content or subject area of a performance evaluation.",
            "x-nullable": true
          },
          "gradeLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_performanceEvaluationGradeLevel"
            },
            "description": "An unordered collection of performanceEvaluationGradeLevels. The grade levels involved with the performance evaluation."
          },
          "performanceEvaluationDescription": {
            "maxLength": 255,
            "type": "string",
            "description": "The long description of the Performance Evaluation.",
            "x-nullable": true
          },
          "ratingLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_performanceEvaluationRatingLevel"
            },
            "description": "An unordered collection of performanceEvaluationRatingLevels. The descriptive level(s) of ratings (cut scores) for the evaluation."
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_performanceEvaluationGradeLevel": {
        "required": [
          "gradeLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "gradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade levels involved with the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "tpdm_performanceEvaluationRating": {
        "required": [
          "actualDate",
          "performanceEvaluationReference",
          "personReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "performanceEvaluationReference": {
            "$ref": "#/components/schemas/tpdm_performanceEvaluationReference"
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "actualDate": {
            "type": "string",
            "description": "The month, day, and year on which the performance evaluation was conducted.",
            "format": "date"
          },
          "actualDuration": {
            "minimum": 1,
            "type": "integer",
            "description": "The actual or estimated number of clock minutes during which the performance evaluation was conducted.",
            "format": "int32",
            "x-nullable": true
          },
          "actualTime": {
            "type": "string",
            "description": "An indication of the the time at which the performance evaluation was conducted.",
            "x-nullable": true
          },
          "announced": {
            "type": "boolean",
            "description": "An indicator of whether the performance evaluation was announced or not.",
            "x-nullable": true
          },
          "comments": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Any comments about the performance evaluation to be captured.",
            "x-nullable": true
          },
          "coteachingStyleObservedDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A type of co-teaching observed as part of the performance evaluation.",
            "x-nullable": true
          },
          "performanceEvaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved based upon the rating or score.",
            "x-nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_performanceEvaluationRatingResult"
            },
            "description": "An unordered collection of performanceEvaluationRatingResults. The numerical summary rating or score for the performance evaluation."
          },
          "reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tpdm_performanceEvaluationRatingReviewer"
            },
            "description": "An unordered collection of performanceEvaluationRatingReviewers. The person(s) that conducted the performance evaluation."
          },
          "scheduleDate": {
            "type": "string",
            "description": "The month, day, and year on which the performance evaluation was scheduled.",
            "format": "date",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_performanceEvaluationRatingLevel": {
        "required": [
          "evaluationRatingLevelDescriptor"
        ],
        "type": "object",
        "properties": {
          "evaluationRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).",
            "x-Ed-Fi-isIdentity": true
          },
          "maxRating": {
            "type": "number",
            "description": "The maximum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          },
          "minRating": {
            "type": "number",
            "description": "The minimum numerical rating or score to achieve the evaluation rating level.",
            "format": "double",
            "x-nullable": true
          }
        }
      },
      "tpdm_performanceEvaluationRatingReference": {
        "required": [
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "personId",
          "schoolYear",
          "sourceSystemDescriptor",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_performanceEvaluationRatingResult": {
        "required": [
          "rating",
          "ratingResultTitle",
          "resultDatatypeTypeDescriptor"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "The numerical summary rating or score for the evaluation.",
            "format": "double",
            "x-Ed-Fi-isIdentity": true
          },
          "ratingResultTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The title of Rating Result.",
            "x-Ed-Fi-isIdentity": true
          },
          "resultDatatypeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The datatype of the result."
          }
        }
      },
      "tpdm_performanceEvaluationRatingReviewer": {
        "required": [
          "firstName",
          "lastSurname"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.",
            "x-Ed-Fi-isIdentity": true
          },
          "lastSurname": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The name borne in common by members of a family.",
            "x-Ed-Fi-isIdentity": true
          },
          "reviewerPersonReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "receivedTraining": {
            "$ref": "#/components/schemas/tpdm_performanceEvaluationRatingReviewerReceivedTraining"
          }
        }
      },
      "tpdm_performanceEvaluationRatingReviewerReceivedTraining": {
        "type": "object",
        "properties": {
          "interRaterReliabilityScore": {
            "type": "integer",
            "description": "A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)",
            "format": "int32",
            "x-nullable": true
          },
          "receivedTrainingDate": {
            "type": "string",
            "description": "The date on which the person administering the performance meausre received training on how to conduct performance measures.",
            "format": "date",
            "x-nullable": true
          }
        }
      },
      "tpdm_performanceEvaluationReference": {
        "required": [
          "educationOrganizationId",
          "evaluationPeriodDescriptor",
          "performanceEvaluationTitle",
          "performanceEvaluationTypeDescriptor",
          "schoolYear",
          "termDescriptor"
        ],
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "link": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "tpdm_rubricDimension": {
        "required": [
          "rubricRating",
          "criterionDescription",
          "evaluationElementReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "rubricRating": {
            "type": "integer",
            "description": "The rating achieved for the rubric dimension.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementReference": {
            "$ref": "#/components/schemas/tpdm_evaluationElementReference"
          },
          "criterionDescription": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "The criterion description for the rubric dimension."
          },
          "dimensionOrder": {
            "type": "integer",
            "description": "The order for the rubric dimension.",
            "format": "int32",
            "x-nullable": true
          },
          "rubricRatingLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The rating level achieved for the rubric dimension.",
            "x-nullable": true
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_schoolExtension": {
        "type": "object",
        "properties": {
          "postSecondaryInstitutionReference": {
            "$ref": "#/components/schemas/edFi_postSecondaryInstitutionReference"
          }
        }
      },
      "tpdm_surveyResponseExtension": {
        "type": "object",
        "properties": {
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          }
        }
      },
      "tpdm_surveyResponsePersonTargetAssociation": {
        "required": [
          "personReference",
          "surveyResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "surveyResponseReference": {
            "$ref": "#/components/schemas/edFi_surveyResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "tpdm_surveySectionResponsePersonTargetAssociation": {
        "required": [
          "personReference",
          "surveySectionResponseReference"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "personReference": {
            "$ref": "#/components/schemas/edFi_personReference"
          },
          "surveySectionResponseReference": {
            "$ref": "#/components/schemas/edFi_surveySectionResponseReference"
          },
          "_etag": {
            "type": "string",
            "description": "A unique system-generated value that identifies the version of the resource."
          },
          "_lastModifiedDate": {
            "type": "string",
            "description": "The date and time the resource was last modified.",
            "format": "date-time"
          }
        }
      },
      "trackedChanges_edFi_academicWeekDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_academicWeekKey"
          }
        }
      },
      "trackedChanges_edFi_academicWeekKey": {
        "type": "object",
        "properties": {
          "weekIdentifier": {
            "maxLength": 80,
            "minLength": 5,
            "type": "string",
            "description": "The school label for the week.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_academicWeekKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_academicWeekKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_academicWeekKey"
          }
        }
      },
      "trackedChanges_edFi_accountabilityRatingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_accountabilityRatingKey"
          }
        }
      },
      "trackedChanges_edFi_accountabilityRatingKey": {
        "type": "object",
        "properties": {
          "ratingTitle": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The title of the rating.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The school year for which the accountability rating is assessed.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_accountabilityRatingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_accountabilityRatingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_accountabilityRatingKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentItemDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentItemKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentItemKey": {
        "type": "object",
        "properties": {
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_assessmentItemKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentItemKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentItemKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentKey": {
        "type": "object",
        "properties": {
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_assessmentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentScoreRangeLearningStandardDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentScoreRangeLearningStandardKey"
          }
        }
      },
      "trackedChanges_edFi_assessmentScoreRangeLearningStandardKey": {
        "type": "object",
        "properties": {
          "scoreRangeId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_assessmentScoreRangeLearningStandardKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentScoreRangeLearningStandardKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_assessmentScoreRangeLearningStandardKey"
          }
        }
      },
      "trackedChanges_edFi_balanceSheetDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_balanceSheetDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_balanceSheetDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account balance sheet dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account balance sheet dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_balanceSheetDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_balanceSheetDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_balanceSheetDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_bellScheduleDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_bellScheduleKey"
          }
        }
      },
      "trackedChanges_edFi_bellScheduleKey": {
        "type": "object",
        "properties": {
          "bellScheduleName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Name or title of the bell schedule.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_bellScheduleKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_bellScheduleKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_bellScheduleKey"
          }
        }
      },
      "trackedChanges_edFi_calendarDateDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarDateKey"
          }
        }
      },
      "trackedChanges_edFi_calendarDateKey": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year associated with the calendar.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_calendarDateKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarDateKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarDateKey"
          }
        }
      },
      "trackedChanges_edFi_calendarDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarKey"
          }
        }
      },
      "trackedChanges_edFi_calendarKey": {
        "type": "object",
        "properties": {
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year associated with the calendar.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_calendarKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_calendarKey"
          }
        }
      },
      "trackedChanges_edFi_chartOfAccountDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_chartOfAccountKey"
          }
        }
      },
      "trackedChanges_edFi_chartOfAccountKey": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "SEA populated code value for the valid combination of account dimensions under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_chartOfAccountKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_chartOfAccountKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_chartOfAccountKey"
          }
        }
      },
      "trackedChanges_edFi_classPeriodDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_classPeriodKey"
          }
        }
      },
      "trackedChanges_edFi_classPeriodKey": {
        "type": "object",
        "properties": {
          "classPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_classPeriodKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_classPeriodKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_classPeriodKey"
          }
        }
      },
      "trackedChanges_edFi_cohortDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_cohortKey"
          }
        }
      },
      "trackedChanges_edFi_cohortKey": {
        "type": "object",
        "properties": {
          "cohortIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The name or ID for the cohort.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_cohortKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_cohortKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_cohortKey"
          }
        }
      },
      "trackedChanges_edFi_communityOrganizationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityOrganizationKey"
          }
        }
      },
      "trackedChanges_edFi_communityOrganizationKey": {
        "type": "object",
        "properties": {
          "communityOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to a community organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_communityOrganizationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityOrganizationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityOrganizationKey"
          }
        }
      },
      "trackedChanges_edFi_communityProviderDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderKey"
          }
        }
      },
      "trackedChanges_edFi_communityProviderKey": {
        "type": "object",
        "properties": {
          "communityProviderId": {
            "type": "integer",
            "description": "The identifier assigned to a community provider.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_communityProviderKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderKey"
          }
        }
      },
      "trackedChanges_edFi_communityProviderLicenseDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderLicenseKey"
          }
        }
      },
      "trackedChanges_edFi_communityProviderLicenseKey": {
        "type": "object",
        "properties": {
          "licenseIdentifier": {
            "maxLength": 36,
            "type": "string",
            "description": "The unique identifier issued by the licensing organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "licensingOrganization": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The organization issuing the license.",
            "x-Ed-Fi-isIdentity": true
          },
          "communityProviderId": {
            "type": "integer",
            "description": "The identifier assigned to a community provider.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_communityProviderLicenseKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderLicenseKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_communityProviderLicenseKey"
          }
        }
      },
      "trackedChanges_edFi_competencyObjectiveDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_competencyObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_competencyObjectiveKey": {
        "type": "object",
        "properties": {
          "objectiveGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level for which the competency objective is targeted.",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The designated title of the competency objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_competencyObjectiveKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_competencyObjectiveKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_competencyObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_contactDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_contactKey"
          }
        }
      },
      "trackedChanges_edFi_contactKey": {
        "type": "object",
        "properties": {
          "contactUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a contact.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_contactKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_contactKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_contactKey"
          }
        }
      },
      "trackedChanges_edFi_courseDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseKey"
          }
        }
      },
      "trackedChanges_edFi_courseKey": {
        "type": "object",
        "properties": {
          "courseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_courseKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseKey"
          }
        }
      },
      "trackedChanges_edFi_courseOfferingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseOfferingKey"
          }
        }
      },
      "trackedChanges_edFi_courseOfferingKey": {
        "type": "object",
        "properties": {
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_courseOfferingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseOfferingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseOfferingKey"
          }
        }
      },
      "trackedChanges_edFi_courseTranscriptDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseTranscriptKey"
          }
        }
      },
      "trackedChanges_edFi_courseTranscriptKey": {
        "type": "object",
        "properties": {
          "courseAttemptResultDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The result from the student's attempt to take the course.",
            "x-Ed-Fi-isIdentity": true
          },
          "courseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "courseEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_courseTranscriptKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseTranscriptKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_courseTranscriptKey"
          }
        }
      },
      "trackedChanges_edFi_credentialDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_credentialKey"
          }
        }
      },
      "trackedChanges_edFi_credentialKey": {
        "type": "object",
        "properties": {
          "stateOfIssueStateAbbreviationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.",
            "x-Ed-Fi-isIdentity": true
          },
          "credentialIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "Identifier or serial number assigned to the credential.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_credentialKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_credentialKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_credentialKey"
          }
        }
      },
      "trackedChanges_edFi_descriptorMappingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_descriptorMappingKey"
          }
        }
      },
      "trackedChanges_edFi_descriptorMappingKey": {
        "type": "object",
        "properties": {
          "mappedNamespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the descriptor value to which the from descriptor value is mapped to.",
            "x-Ed-Fi-isIdentity": true
          },
          "mappedValue": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The descriptor value to which the from descriptor value is being mapped to.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the descriptor value that is being mapped to another value.",
            "x-Ed-Fi-isIdentity": true
          },
          "value": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The descriptor value that is being mapped to another value.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_descriptorMappingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_descriptorMappingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_descriptorMappingKey"
          }
        }
      },
      "trackedChanges_edFi_disciplineActionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineActionKey"
          }
        }
      },
      "trackedChanges_edFi_disciplineActionKey": {
        "type": "object",
        "properties": {
          "disciplineActionIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Identifier assigned by the education organization to the discipline action.",
            "x-Ed-Fi-isIdentity": true
          },
          "disciplineDate": {
            "type": "string",
            "description": "The date of the discipline action.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_disciplineActionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineActionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineActionKey"
          }
        }
      },
      "trackedChanges_edFi_disciplineIncidentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineIncidentKey"
          }
        }
      },
      "trackedChanges_edFi_disciplineIncidentKey": {
        "type": "object",
        "properties": {
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_disciplineIncidentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineIncidentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_disciplineIncidentKey"
          }
        }
      },
      "trackedChanges_edFi_educationContentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationContentKey"
          }
        }
      },
      "trackedChanges_edFi_educationContentKey": {
        "type": "object",
        "properties": {
          "contentIdentifier": {
            "maxLength": 225,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifier for the education content.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationContentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationContentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationContentKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionPrescriptionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationInterventionPrescriptionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkAssociationKey": {
        "type": "object",
        "properties": {
          "memberEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationNetworkId": {
            "type": "integer",
            "description": "The identifier assigned to a network of education organizations.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkKey": {
        "type": "object",
        "properties": {
          "educationOrganizationNetworkId": {
            "type": "integer",
            "description": "The identifier assigned to a network of education organizations.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationNetworkKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationNetworkKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationPeerAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationPeerAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationPeerAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "peerEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationOrganizationPeerAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationPeerAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationOrganizationPeerAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_educationServiceCenterDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationServiceCenterKey"
          }
        }
      },
      "trackedChanges_edFi_educationServiceCenterKey": {
        "type": "object",
        "properties": {
          "educationServiceCenterId": {
            "type": "integer",
            "description": "The identifier assigned to an education service center.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_educationServiceCenterKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationServiceCenterKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_educationServiceCenterKey"
          }
        }
      },
      "trackedChanges_edFi_evaluationRubricDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_evaluationRubricDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_evaluationRubricDimensionKey": {
        "type": "object",
        "properties": {
          "evaluationRubricRating": {
            "type": "integer",
            "description": "The numeric rating associated with the evaluation rubric dimension.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationElementTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_evaluationRubricDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_evaluationRubricDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_evaluationRubricDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_feederSchoolAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_feederSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_feederSchoolAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year of the first day of the feeder school association.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "feederSchoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_feederSchoolAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_feederSchoolAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_feederSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_functionDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_functionDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_functionDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account function dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account function dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_functionDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_functionDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_functionDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_fundDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_fundDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_fundDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account fund dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account fund dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_fundDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_fundDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_fundDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_gradebookEntryDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradebookEntryKey"
          }
        }
      },
      "trackedChanges_edFi_gradebookEntryKey": {
        "type": "object",
        "properties": {
          "gradebookEntryIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace URI for the source of the gradebook entry.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_gradebookEntryKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradebookEntryKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradebookEntryKey"
          }
        }
      },
      "trackedChanges_edFi_gradeDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradeKey"
          }
        }
      },
      "trackedChanges_edFi_gradeKey": {
        "type": "object",
        "properties": {
          "gradeTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of grade reported (e.g., exam, final, grading period).",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_gradeKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradeKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradeKey"
          }
        }
      },
      "trackedChanges_edFi_gradingPeriodDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradingPeriodKey"
          }
        }
      },
      "trackedChanges_edFi_gradingPeriodKey": {
        "type": "object",
        "properties": {
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_gradingPeriodKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradingPeriodKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_gradingPeriodKey"
          }
        }
      },
      "trackedChanges_edFi_graduationPlanDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_graduationPlanKey"
          }
        }
      },
      "trackedChanges_edFi_graduationPlanKey": {
        "type": "object",
        "properties": {
          "graduationPlanTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of academic plan the student is following for graduation.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "graduationSchoolYear": {
            "type": "integer",
            "description": "The school year the student is expected to graduate.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_graduationPlanKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_graduationPlanKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_graduationPlanKey"
          }
        }
      },
      "trackedChanges_edFi_interventionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionKey"
          }
        }
      },
      "trackedChanges_edFi_interventionKey": {
        "type": "object",
        "properties": {
          "interventionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_interventionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionKey"
          }
        }
      },
      "trackedChanges_edFi_interventionPrescriptionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionPrescriptionKey"
          }
        }
      },
      "trackedChanges_edFi_interventionPrescriptionKey": {
        "type": "object",
        "properties": {
          "interventionPrescriptionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention prescription.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_interventionPrescriptionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionPrescriptionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionPrescriptionKey"
          }
        }
      },
      "trackedChanges_edFi_interventionStudyDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionStudyKey"
          }
        }
      },
      "trackedChanges_edFi_interventionStudyKey": {
        "type": "object",
        "properties": {
          "interventionStudyIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention study.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_interventionStudyKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionStudyKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_interventionStudyKey"
          }
        }
      },
      "trackedChanges_edFi_learningStandardDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardKey"
          }
        }
      },
      "trackedChanges_edFi_learningStandardEquivalenceAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardEquivalenceAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_learningStandardEquivalenceAssociationKey": {
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "The namespace of the organization that has created and owns the association.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceLearningStandardId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "x-Ed-Fi-isIdentity": true
          },
          "targetLearningStandardId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_learningStandardEquivalenceAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardEquivalenceAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardEquivalenceAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_learningStandardKey": {
        "type": "object",
        "properties": {
          "learningStandardId": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the specific learning standard (e.g., 111.15.3.1.A).",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_learningStandardKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_learningStandardKey"
          }
        }
      },
      "trackedChanges_edFi_localAccountDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localAccountKey"
          }
        }
      },
      "trackedChanges_edFi_localAccountKey": {
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localAccountKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localAccountKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localAccountKey"
          }
        }
      },
      "trackedChanges_edFi_localActualDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localActualKey"
          }
        }
      },
      "trackedChanges_edFi_localActualKey": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localActualKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localActualKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localActualKey"
          }
        }
      },
      "trackedChanges_edFi_localBudgetDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localBudgetKey"
          }
        }
      },
      "trackedChanges_edFi_localBudgetKey": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localBudgetKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localBudgetKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localBudgetKey"
          }
        }
      },
      "trackedChanges_edFi_localContractedStaffDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localContractedStaffKey"
          }
        }
      },
      "trackedChanges_edFi_localContractedStaffKey": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localContractedStaffKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localContractedStaffKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localContractedStaffKey"
          }
        }
      },
      "trackedChanges_edFi_localEducationAgencyDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEducationAgencyKey"
          }
        }
      },
      "trackedChanges_edFi_localEducationAgencyKey": {
        "type": "object",
        "properties": {
          "localEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a local education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localEducationAgencyKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEducationAgencyKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEducationAgencyKey"
          }
        }
      },
      "trackedChanges_edFi_localEncumbranceDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEncumbranceKey"
          }
        }
      },
      "trackedChanges_edFi_localEncumbranceKey": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localEncumbranceKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEncumbranceKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localEncumbranceKey"
          }
        }
      },
      "trackedChanges_edFi_localPayrollDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localPayrollKey"
          }
        }
      },
      "trackedChanges_edFi_localPayrollKey": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "type": "string",
            "description": "The date of the reported amount for the account.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "accountIdentifier": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code value for the valid combination of account dimensions by LEA under which financials are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for the account.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_localPayrollKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localPayrollKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_localPayrollKey"
          }
        }
      },
      "trackedChanges_edFi_locationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_locationKey"
          }
        }
      },
      "trackedChanges_edFi_locationKey": {
        "type": "object",
        "properties": {
          "classroomIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_locationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_locationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_locationKey"
          }
        }
      },
      "trackedChanges_edFi_objectDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_objectDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account object dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account object dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_objectDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_objectiveAssessmentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectiveAssessmentKey"
          }
        }
      },
      "trackedChanges_edFi_objectiveAssessmentKey": {
        "type": "object",
        "properties": {
          "identificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_objectiveAssessmentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectiveAssessmentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_objectiveAssessmentKey"
          }
        }
      },
      "trackedChanges_edFi_openStaffPositionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_openStaffPositionKey"
          }
        }
      },
      "trackedChanges_edFi_openStaffPositionKey": {
        "type": "object",
        "properties": {
          "requisitionNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_openStaffPositionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_openStaffPositionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_openStaffPositionKey"
          }
        }
      },
      "trackedChanges_edFi_operationalUnitDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_operationalUnitDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_operationalUnitDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account operational unit dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account operational unit dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_operationalUnitDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_operationalUnitDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_operationalUnitDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_organizationDepartmentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_organizationDepartmentKey"
          }
        }
      },
      "trackedChanges_edFi_organizationDepartmentKey": {
        "type": "object",
        "properties": {
          "organizationDepartmentId": {
            "type": "integer",
            "description": "The unique identification code for the organization department.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_organizationDepartmentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_organizationDepartmentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_organizationDepartmentKey"
          }
        }
      },
      "trackedChanges_edFi_personDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_personKey"
          }
        }
      },
      "trackedChanges_edFi_personKey": {
        "type": "object",
        "properties": {
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_personKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_personKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_personKey"
          }
        }
      },
      "trackedChanges_edFi_postSecondaryEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryEventKey"
          }
        }
      },
      "trackedChanges_edFi_postSecondaryEventKey": {
        "type": "object",
        "properties": {
          "postSecondaryEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The post secondary event that is logged.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "The date the event occurred or was recorded.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_postSecondaryEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryEventKey"
          }
        }
      },
      "trackedChanges_edFi_postSecondaryInstitutionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryInstitutionKey"
          }
        }
      },
      "trackedChanges_edFi_postSecondaryInstitutionKey": {
        "type": "object",
        "properties": {
          "postSecondaryInstitutionId": {
            "type": "integer",
            "description": "The ID of the post secondary institution.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_postSecondaryInstitutionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryInstitutionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_postSecondaryInstitutionKey"
          }
        }
      },
      "trackedChanges_edFi_programDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programKey"
          }
        }
      },
      "trackedChanges_edFi_programDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_programDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account program dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account program dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_programDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationElementDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationElementKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationElementKey": {
        "type": "object",
        "properties": {
          "programEvaluationElementTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_programEvaluationElementKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationElementKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationElementKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationKey": {
        "type": "object",
        "properties": {
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_programEvaluationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationObjectiveDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_programEvaluationObjectiveKey": {
        "type": "object",
        "properties": {
          "programEvaluationObjectiveTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "The name or title of the program evaluation objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_programEvaluationObjectiveKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationObjectiveKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programEvaluationObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_programKey": {
        "type": "object",
        "properties": {
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_programKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_programKey"
          }
        }
      },
      "trackedChanges_edFi_projectDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_projectDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_projectDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account project dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account project dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_projectDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_projectDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_projectDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_reportCardDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_reportCardKey"
          }
        }
      },
      "trackedChanges_edFi_reportCardKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_reportCardKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_reportCardKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_reportCardKey"
          }
        }
      },
      "trackedChanges_edFi_restraintEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_restraintEventKey"
          }
        }
      },
      "trackedChanges_edFi_restraintEventKey": {
        "type": "object",
        "properties": {
          "restraintEventIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_restraintEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_restraintEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_restraintEventKey"
          }
        }
      },
      "trackedChanges_edFi_schoolDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolKey"
          }
        }
      },
      "trackedChanges_edFi_schoolKey": {
        "type": "object",
        "properties": {
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_schoolKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolKey"
          }
        }
      },
      "trackedChanges_edFi_schoolYearTypeDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolYearTypeKey"
          }
        }
      },
      "trackedChanges_edFi_schoolYearTypeKey": {
        "type": "object",
        "properties": {
          "schoolYear": {
            "type": "integer",
            "description": "Key for School Year",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_schoolYearTypeKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolYearTypeKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_schoolYearTypeKey"
          }
        }
      },
      "trackedChanges_edFi_sectionAttendanceTakenEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionAttendanceTakenEventKey"
          }
        }
      },
      "trackedChanges_edFi_sectionAttendanceTakenEventKey": {
        "type": "object",
        "properties": {
          "calendarCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar.",
            "x-Ed-Fi-isIdentity": true
          },
          "date": {
            "type": "string",
            "description": "The month, day, and year of the calendar event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_sectionAttendanceTakenEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionAttendanceTakenEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionAttendanceTakenEventKey"
          }
        }
      },
      "trackedChanges_edFi_sectionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionKey"
          }
        }
      },
      "trackedChanges_edFi_sectionKey": {
        "type": "object",
        "properties": {
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_sectionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sectionKey"
          }
        }
      },
      "trackedChanges_edFi_sessionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sessionKey"
          }
        }
      },
      "trackedChanges_edFi_sessionKey": {
        "type": "object",
        "properties": {
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_sessionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sessionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sessionKey"
          }
        }
      },
      "trackedChanges_edFi_sourceDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sourceDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_sourceDimensionKey": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "The code representation of the account source dimension.",
            "x-Ed-Fi-isIdentity": true
          },
          "fiscalYear": {
            "maximum": 2040,
            "minimum": 2020,
            "type": "integer",
            "description": "The fiscal year for which the account source dimension is valid.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_sourceDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sourceDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_sourceDimensionKey"
          }
        }
      },
      "trackedChanges_edFi_staffAbsenceEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffAbsenceEventKey"
          }
        }
      },
      "trackedChanges_edFi_staffAbsenceEventKey": {
        "type": "object",
        "properties": {
          "absenceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The code describing the type of absence.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this leave event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffAbsenceEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffAbsenceEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffAbsenceEventKey"
          }
        }
      },
      "trackedChanges_edFi_staffCohortAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffCohortAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffCohortAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Start date for the association of staff to this cohort.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The name or ID for the cohort.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffCohortAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffCohortAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffCohortAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffKey"
          }
        }
      },
      "trackedChanges_edFi_staffDisciplineIncidentAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffDisciplineIncidentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffDisciplineIncidentAssociationKey": {
        "type": "object",
        "properties": {
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffDisciplineIncidentAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffDisciplineIncidentAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffDisciplineIncidentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKey": {
        "type": "object",
        "properties": {
          "staffClassificationDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The titles of employment, official status, or rank of education staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the start or effective date of a staff member's employment, contract, or relationship with the education organization.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationAssignmentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationContactAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationContactAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationContactAssociationKey": {
        "type": "object",
        "properties": {
          "contactTitle": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string",
            "description": "The title of the contact in the context of the education organization.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationContactAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationContactAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationContactAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKey": {
        "type": "object",
        "properties": {
          "employmentStatusDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Reflects the type of employment or contract.",
            "x-Ed-Fi-isIdentity": true
          },
          "hireDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual was hired for a position.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffEducationOrganizationEmploymentAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffKey": {
        "type": "object",
        "properties": {
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffKey"
          }
        }
      },
      "trackedChanges_edFi_staffLeaveDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffLeaveKey"
          }
        }
      },
      "trackedChanges_edFi_staffLeaveKey": {
        "type": "object",
        "properties": {
          "staffLeaveEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The code describing the type of leave taken.",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "The begin date of the staff leave.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffLeaveKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffLeaveKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffLeaveKey"
          }
        }
      },
      "trackedChanges_edFi_staffProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Start date for the association of staff to this program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffSchoolAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffSchoolAssociationKey": {
        "type": "object",
        "properties": {
          "programAssignmentDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the program for which the individual is assigned.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffSchoolAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSchoolAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffSectionAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_staffSectionAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of a teacher's assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_staffSectionAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSectionAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_staffSectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_stateEducationAgencyDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_stateEducationAgencyKey"
          }
        }
      },
      "trackedChanges_edFi_stateEducationAgencyKey": {
        "type": "object",
        "properties": {
          "stateEducationAgencyId": {
            "type": "integer",
            "description": "The identifier assigned to a state education agency.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_stateEducationAgencyKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_stateEducationAgencyKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_stateEducationAgencyKey"
          }
        }
      },
      "trackedChanges_edFi_studentAcademicRecordDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAcademicRecordKey"
          }
        }
      },
      "trackedChanges_edFi_studentAcademicRecordKey": {
        "type": "object",
        "properties": {
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentAcademicRecordKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAcademicRecordKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAcademicRecordKey"
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentKey"
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationAssociationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of association being represented.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentAssessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentEducationOrganizationAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentKey": {
        "type": "object",
        "properties": {
          "studentAssessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment administered to a student.",
            "x-Ed-Fi-isIdentity": true
          },
          "assessmentIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the assessment.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentAssessmentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentAssessmentKey"
          }
        }
      },
      "trackedChanges_edFi_studentCohortAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCohortAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentCohortAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The month, day, and year on which the student was first identified as part of the cohort.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "cohortIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The name or ID for the cohort.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentCohortAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCohortAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCohortAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentCompetencyObjectiveDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCompetencyObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_studentCompetencyObjectiveKey": {
        "type": "object",
        "properties": {
          "objectiveEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "objective": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The designated title of the competency objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "objectiveGradeLevelDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The grade level for which the competency objective is targeted.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The state's name of the period for which grades are reported.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The school's descriptive name of the grading period.",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "gradingPeriodSchoolYear": {
            "type": "integer",
            "description": "The identifier for the grading period school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentCompetencyObjectiveKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCompetencyObjectiveKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCompetencyObjectiveKey"
          }
        }
      },
      "trackedChanges_edFi_studentContactAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentContactAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentContactAssociationKey": {
        "type": "object",
        "properties": {
          "contactUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a contact.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentContactAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentContactAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentContactAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentCTEProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCTEProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentCTEProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentCTEProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCTEProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentCTEProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentKey"
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKey": {
        "type": "object",
        "properties": {
          "behaviorDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Describes behavior by category.",
            "x-Ed-Fi-isIdentity": true
          },
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentBehaviorAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKey": {
        "type": "object",
        "properties": {
          "incidentIdentifier": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentDisciplineIncidentNonOffenderAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKey": {
        "type": "object",
        "properties": {
          "responsibilityDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "Indications of an education organization's responsibility for a student, such as accountability, attendance, funding, etc.",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the start date of an education organization's responsibility for a student.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentEducationOrganizationResponsibilityAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentGradebookEntryDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentGradebookEntryKey"
          }
        }
      },
      "trackedChanges_edFi_studentGradebookEntryKey": {
        "type": "object",
        "properties": {
          "gradebookEntryIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to a gradebook entry by the source system.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace URI for the source of the gradebook entry.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentGradebookEntryKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentGradebookEntryKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentGradebookEntryKey"
          }
        }
      },
      "trackedChanges_edFi_studentHomelessProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentHomelessProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentHomelessProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentHomelessProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentHomelessProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentHomelessProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAttendanceEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAttendanceEventKey": {
        "type": "object",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "interventionIdentificationCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique number or alphanumeric code assigned to an intervention.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentInterventionAttendanceEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAttendanceEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentInterventionAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentKey": {
        "type": "object",
        "properties": {
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentKey"
          }
        }
      },
      "trackedChanges_edFi_studentLanguageInstructionProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentLanguageInstructionProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentLanguageInstructionProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentLanguageInstructionProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentLanguageInstructionProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentLanguageInstructionProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentMigrantEducationProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentMigrantEducationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentMigrantEducationProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentMigrantEducationProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentMigrantEducationProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentMigrantEducationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentNeglectedOrDelinquentProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramAttendanceEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramAttendanceEventKey": {
        "type": "object",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentProgramAttendanceEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAttendanceEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramEvaluationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramEvaluationKey"
          }
        }
      },
      "trackedChanges_edFi_studentProgramEvaluationKey": {
        "type": "object",
        "properties": {
          "evaluationDate": {
            "type": "string",
            "description": "The month, day, and year on which the evaluation was conducted.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The name of the period for the program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTitle": {
            "maxLength": 50,
            "type": "string",
            "description": "An assigned unique identifier for the student program evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "programEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentProgramEvaluationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramEvaluationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentProgramEvaluationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAssociationKey": {
        "type": "object",
        "properties": {
          "entryDate": {
            "type": "string",
            "description": "The month, day, and year on which an individual enters and begins to receive instructional services in a school.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAttendanceEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAttendanceEventKey": {
        "type": "object",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSchoolAttendanceEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAttendanceEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSchoolFoodServiceProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSectionAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSectionAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "Month, day, and year of the student's entry or assignment to the section.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSectionAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSectionAttendanceEventDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentSectionAttendanceEventKey": {
        "type": "object",
        "properties": {
          "attendanceEventCategoryDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "A code describing the attendance event, for example:         Present         Unexcused absence         Excused absence         Tardy.",
            "x-Ed-Fi-isIdentity": true
          },
          "eventDate": {
            "type": "string",
            "description": "Date for this attendance event.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSectionAttendanceEventKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAttendanceEventKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSectionAttendanceEventKey"
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKey": {
        "type": "object",
        "properties": {
          "consentToEvaluationReceivedDate": {
            "type": "string",
            "description": "Indicates the date on which the local education agency received written consent for the evaluation from the student's parent or guardian. This is the first day of the evaluation timeframe.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentSpecialEducationProgramEligibilityAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentTitleIPartAProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentTitleIPartAProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_studentTitleIPartAProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programEducationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_studentTitleIPartAProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentTitleIPartAProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_studentTitleIPartAProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyCourseAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyCourseAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyCourseAssociationKey": {
        "type": "object",
        "properties": {
          "courseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a course.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyCourseAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyCourseAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyCourseAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyKey"
          }
        }
      },
      "trackedChanges_edFi_surveyKey": {
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyKey"
          }
        }
      },
      "trackedChanges_edFi_surveyProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyProgramAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyProgramAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionKey"
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionKey": {
        "type": "object",
        "properties": {
          "questionCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifying code for the question, unique for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionKey"
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionResponseDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionResponseKey": {
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "questionCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifying code for the question, unique for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyQuestionResponseKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionResponseKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyQuestionResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseEducationOrganizationTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseKey": {
        "type": "object",
        "properties": {
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyResponseKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseStaffTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseStaffTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveyResponseStaffTargetAssociationKey": {
        "type": "object",
        "properties": {
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveyResponseStaffTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseStaffTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveyResponseStaffTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionAssociationKey": {
        "type": "object",
        "properties": {
          "localCourseCode": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolId": {
            "type": "integer",
            "description": "The identifier assigned to a school.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "sectionIdentifier": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The local identifier assigned to a section.",
            "x-Ed-Fi-isIdentity": true
          },
          "sessionName": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier for the calendar for the academic session.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveySectionAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionKey": {
        "type": "object",
        "properties": {
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveySectionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseEducationOrganizationTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseKey": {
        "type": "object",
        "properties": {
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseStaffTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKey"
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKey": {
        "type": "object",
        "properties": {
          "staffUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a staff.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_edFi_surveySectionResponseStaffTargetAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_candidateDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateKey"
          }
        }
      },
      "trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKey": {
        "type": "object",
        "properties": {
          "beginDate": {
            "type": "string",
            "description": "The begin date for the association.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "candidateIdentifier": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name of the Educator Preparation Program.",
            "x-Ed-Fi-isIdentity": true
          },
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateEducatorPreparationProgramAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_candidateKey": {
        "type": "object",
        "properties": {
          "candidateIdentifier": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a candidate.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_candidateKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_candidateKey"
          }
        }
      },
      "trackedChanges_tpdm_educatorPreparationProgramDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_educatorPreparationProgramKey"
          }
        }
      },
      "trackedChanges_tpdm_educatorPreparationProgramKey": {
        "type": "object",
        "properties": {
          "programTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of program.",
            "x-Ed-Fi-isIdentity": true
          },
          "programName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name of the Educator Preparation Program.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_educatorPreparationProgramKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_educatorPreparationProgramKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_educatorPreparationProgramKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementKey": {
        "type": "object",
        "properties": {
          "evaluationElementTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementRatingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementRatingKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationElementRatingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementRatingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationElementRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationKey": {
        "type": "object",
        "properties": {
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveKey": {
        "type": "object",
        "properties": {
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveRatingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveRatingKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationObjectiveRatingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveRatingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationObjectiveRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationRatingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_evaluationRatingKey": {
        "type": "object",
        "properties": {
          "evaluationDate": {
            "type": "string",
            "description": "The date for the person's evaluation.",
            "format": "date-time",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_evaluationRatingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationRatingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_evaluationRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_financialAidDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_financialAidKey"
          }
        }
      },
      "trackedChanges_tpdm_financialAidKey": {
        "type": "object",
        "properties": {
          "aidTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The classification of financial aid awarded to a person for the academic term/year.",
            "x-Ed-Fi-isIdentity": true
          },
          "beginDate": {
            "type": "string",
            "description": "The date the award was designated.",
            "format": "date",
            "x-Ed-Fi-isIdentity": true
          },
          "studentUniqueId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a student.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_financialAidKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_financialAidKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_financialAidKey"
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationKey"
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationKey": {
        "type": "object",
        "properties": {
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationKey"
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationRatingDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationRatingKey": {
        "type": "object",
        "properties": {
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          },
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_performanceEvaluationRatingKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationRatingKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_performanceEvaluationRatingKey"
          }
        }
      },
      "trackedChanges_tpdm_rubricDimensionDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_rubricDimensionKey"
          }
        }
      },
      "trackedChanges_tpdm_rubricDimensionKey": {
        "type": "object",
        "properties": {
          "rubricRating": {
            "type": "integer",
            "description": "The rating achieved for the rubric dimension.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "educationOrganizationId": {
            "type": "integer",
            "description": "The identifier assigned to an education organization.",
            "format": "int64",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationElementTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation element.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationObjectiveTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation Objective.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationPeriodDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The period for the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "evaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The name or title of the evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTitle": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "An assigned unique identifier for the performance evaluation.",
            "x-Ed-Fi-isIdentity": true
          },
          "performanceEvaluationTypeDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The type of performance evaluation conducted.",
            "x-Ed-Fi-isIdentity": true
          },
          "schoolYear": {
            "type": "integer",
            "description": "The identifier for the school year.",
            "format": "int32",
            "x-Ed-Fi-isIdentity": true
          },
          "termDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "The term for the session during the school year.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_rubricDimensionKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_rubricDimensionKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_rubricDimensionKey"
          }
        }
      },
      "trackedChanges_tpdm_surveyResponsePersonTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveyResponsePersonTargetAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_surveyResponsePersonTargetAssociationKey": {
        "type": "object",
        "properties": {
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_surveyResponsePersonTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveyResponsePersonTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveyResponsePersonTargetAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationDelete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "keyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKey"
          }
        }
      },
      "trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKey": {
        "type": "object",
        "properties": {
          "personId": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique alphanumeric code assigned to a person.",
            "x-Ed-Fi-isIdentity": true
          },
          "sourceSystemDescriptor": {
            "maxLength": 306,
            "type": "string",
            "description": "This descriptor defines the originating record source system for the person.",
            "x-Ed-Fi-isIdentity": true
          },
          "namespace": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Namespace for the survey.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The unique survey identifier from the survey tool.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveyResponseIdentifier": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the survey typically from the survey application.",
            "x-Ed-Fi-isIdentity": true
          },
          "surveySectionTitle": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The title or label for the survey section.",
            "x-Ed-Fi-isIdentity": true
          }
        }
      },
      "trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKeyChange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource identifier"
          },
          "changeVersion": {
            "type": "number",
            "description": "Change version"
          },
          "oldKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKey"
          },
          "newKeyValues": {
            "$ref": "#/components/schemas/trackedChanges_tpdm_surveySectionResponsePersonTargetAssociationKey"
          }
        }
      }
    },
    "responses": {
      "Created": {
        "description": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
      },
      "Updated": {
        "description": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
      },
      "Deleted": {
        "description": "The resource was successfully deleted."
      },
      "NotModified": {
        "description": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
      },
      "BadRequest": {
        "description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or their values.",
        "content": {
          "application/json": { }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
      },
      "Forbidden": {
        "description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed."
      },
      "NotFound": {
        "description": "The resource could not be found."
      },
      "NotFoundUseSnapshot": {
        "description": "The resource could not be found. If Use-Snapshot header is set to true, this response can indicate the snapshot may have been removed."
      },
      "Conflict": {
        "description": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details.",
        "content": {
          "application/json": { }
        }
      },
      "PreconditionFailed": {
        "description": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request. This indicates the resource has been modified by another consumer."
      },
      "Error": {
        "description": "An unhandled error occurred on the server. See the response body for details.",
        "content": {
          "application/json": { }
        }
      }
    },
    "parameters": {
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Indicates how many items should be skipped before returning results.",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Indicates the maximum number of items that should be returned in the results.",
        "schema": {
          "maximum": 500,
          "minimum": 0,
          "type": "integer",
          "format": "int32",
          "default": 25
        }
      },
      "MinChangeVersion": {
        "name": "minChangeVersion",
        "in": "query",
        "description": "Used in synchronization to set sequence minimum ChangeVersion",
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "MaxChangeVersion": {
        "name": "maxChangeVersion",
        "in": "query",
        "description": "Used in synchronization to set sequence maximum ChangeVersion",
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "If-None-Match": {
        "name": "If-None-Match",
        "in": "header",
        "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "Specifies a subset of properties that should be returned for each entity (e.g. \"property1,collection1(collProp1,collProp2)\").",
        "schema": {
          "type": "string"
        }
      },
      "queryExpression": {
        "name": "q",
        "in": "query",
        "description": "Specifies a query filter expression for the request. Currently only supports range-based queries on dates and numbers (e.g. \"schoolId:[255901000...255901002]\" and \"BeginDate:[2016-03-07...2016-03-10]\").",
        "schema": {
          "type": "string"
        }
      },
      "totalCount": {
        "name": "totalCount",
        "in": "query",
        "description": "Indicates if the total number of items available should be returned in the 'Total-Count' header of the response.  If set to false, 'Total-Count' header will not be provided.",
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "securitySchemes": {
      "oauth2_client_credentials": {
        "type": "oauth2",
        "description": "Ed-Fi ODS/API OAuth 2.0 Client Credentials Grant Type authorization",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.ed-fi.org/v7.1/api/oauth/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2_client_credentials": [ ]
    }
  ],
  "tags": [
    {
      "name": "academicWeeks",
      "description": "This entity represents the academic weeks for a school year, optionally captured to support analyses."
    },
    {
      "name": "accountabilityRatings",
      "description": "An accountability rating for a school or district."
    },
    {
      "name": "assessmentItems",
      "description": "This entity represents one of many single measures that make up an assessment."
    },
    {
      "name": "assessments",
      "description": "This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student's competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next."
    },
    {
      "name": "assessmentScoreRangeLearningStandards",
      "description": "Score ranges of an assessment associated with one or more learning standards."
    },
    {
      "name": "balanceSheetDimensions",
      "description": "The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time."
    },
    {
      "name": "bellSchedules",
      "description": "This entity represents the schedule of class period meeting times."
    },
    {
      "name": "calendarDates",
      "description": "The type of scheduled or unscheduled event for the day."
    },
    {
      "name": "calendars",
      "description": "A set of dates associated with an organization."
    },
    {
      "name": "candidateEducatorPreparationProgramAssociations",
      "description": "Information about the association between the Teacher Candidate and the EducatorPreparationProgram"
    },
    {
      "name": "candidates",
      "description": "A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator."
    },
    {
      "name": "chartOfAccounts",
      "description": "A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account."
    },
    {
      "name": "classPeriods",
      "description": "This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week."
    },
    {
      "name": "cohorts",
      "description": "This entity represents any type of list of designated students for tracking, analysis, or intervention."
    },
    {
      "name": "communityOrganizations",
      "description": "This entity represents an administrative unit at the state level which exists primarily to operate local community providers."
    },
    {
      "name": "communityProviderLicenses",
      "description": "The legal document held by the community provider that authorizes the holder to perform certain functions and or services."
    },
    {
      "name": "communityProviders",
      "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups."
    },
    {
      "name": "competencyObjectives",
      "description": "This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class)."
    },
    {
      "name": "contacts",
      "description": "This entity represents a contact of a student, such as a parent, guardian or caretaker."
    },
    {
      "name": "courseOfferings",
      "description": "This entity represents an entry in the course catalog of available courses offered by the school during a session."
    },
    {
      "name": "courses",
      "description": "This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis."
    },
    {
      "name": "courseTranscripts",
      "description": "This entity is the final record of a student's performance in their courses at the end of a semester or school year."
    },
    {
      "name": "credentials",
      "description": "The legal document giving authorization to perform teaching assignment services."
    },
    {
      "name": "descriptorMappings",
      "description": "A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values."
    },
    {
      "name": "disciplineActions",
      "description": "This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident."
    },
    {
      "name": "disciplineIncidents",
      "description": "This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action."
    },
    {
      "name": "educationContents",
      "description": "This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge."
    },
    {
      "name": "educationOrganizationInterventionPrescriptionAssociations",
      "description": "This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand."
    },
    {
      "name": "educationOrganizationNetworkAssociations",
      "description": "Properties of the association between the education organization and its network(s)."
    },
    {
      "name": "educationOrganizationNetworks",
      "description": "This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement."
    },
    {
      "name": "educationOrganizationPeerAssociations",
      "description": "The association from an education organization to its peers."
    },
    {
      "name": "educationServiceCenters",
      "description": "This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs."
    },
    {
      "name": "educatorPreparationPrograms",
      "description": "The Educator Preparation Program is designed to prepare students to become licensed educators."
    },
    {
      "name": "evaluationElementRatings",
      "description": "The lowest-level rating for an Evaluation Element for an individual educator."
    },
    {
      "name": "evaluationElements",
      "description": "The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response."
    },
    {
      "name": "evaluationObjectiveRatings",
      "description": "The rating for the component Evaluation Objective for an individual educator."
    },
    {
      "name": "evaluationObjectives",
      "description": "A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated."
    },
    {
      "name": "evaluationRatings",
      "description": "The summary weighting for the Evaluation instrument for an individual educator."
    },
    {
      "name": "evaluationRubricDimensions",
      "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric evaluation level."
    },
    {
      "name": "evaluations",
      "description": "An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano."
    },
    {
      "name": "feederSchoolAssociations",
      "description": "The association from feeder school to the receiving school."
    },
    {
      "name": "financialAids",
      "description": "This entity represents the financial aid a person is awarded."
    },
    {
      "name": "functionDimensions",
      "description": "The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service."
    },
    {
      "name": "fundDimensions",
      "description": "The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations."
    },
    {
      "name": "gradebookEntries",
      "description": "This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook."
    },
    {
      "name": "grades",
      "description": "This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores."
    },
    {
      "name": "gradingPeriods",
      "description": "This entity represents the time span for which grades are reported."
    },
    {
      "name": "graduationPlans",
      "description": "This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students."
    },
    {
      "name": "interventionPrescriptions",
      "description": "This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity."
    },
    {
      "name": "interventions",
      "description": "An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject."
    },
    {
      "name": "interventionStudies",
      "description": "An experimental or quasi-experimental study of an intervention technique."
    },
    {
      "name": "learningStandardEquivalenceAssociations",
      "description": "Indicates a directional association of equivalence from a source to a target learning standard."
    },
    {
      "name": "learningStandards",
      "description": "A statement that describes a specific competency or academic standard."
    },
    {
      "name": "localAccounts",
      "description": "The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account."
    },
    {
      "name": "localActuals",
      "description": "The set of local education agency or charter management organization expense or revenue amounts."
    },
    {
      "name": "localBudgets",
      "description": "The set of local education agency or charter management organization budget amounts."
    },
    {
      "name": "localContractedStaffs",
      "description": "The set of local education agency or charter management organization contracted staff amounts."
    },
    {
      "name": "localEducationAgencies",
      "description": "This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations."
    },
    {
      "name": "localEncumbrances",
      "description": "The set of local education agency or charter management organization encumbrance amounts."
    },
    {
      "name": "localPayrolls",
      "description": "The set of local education agency or charter management organization payroll amounts."
    },
    {
      "name": "locations",
      "description": "This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students."
    },
    {
      "name": "objectDimensions",
      "description": "The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth."
    },
    {
      "name": "objectiveAssessments",
      "description": "This entity represents subtests that assess specific learning objectives."
    },
    {
      "name": "openStaffPositions",
      "description": "This entity represents an open staff position that the education organization is seeking to fill."
    },
    {
      "name": "operationalUnitDimensions",
      "description": "The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method."
    },
    {
      "name": "organizationDepartments",
      "description": "An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function."
    },
    {
      "name": "people",
      "description": "This entity represents a human being."
    },
    {
      "name": "performanceEvaluationRatings",
      "description": "The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator."
    },
    {
      "name": "performanceEvaluations",
      "description": "A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations."
    },
    {
      "name": "postSecondaryEvents",
      "description": "This entity captures significant postsecondary events during a student's high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student's enrollment at a post-secondary institution."
    },
    {
      "name": "postSecondaryInstitutions",
      "description": "An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s)."
    },
    {
      "name": "programDimensions",
      "description": "The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities."
    },
    {
      "name": "programEvaluationElements",
      "description": "The lowest level elements or criterion of a students's performance that is being evaluated, typically by a rubric."
    },
    {
      "name": "programEvaluationObjectives",
      "description": "A subcomponent of a ProgramEvaluation, a specific student objective or domain of performance that is being evaluated."
    },
    {
      "name": "programEvaluations",
      "description": "An evaluation instrument applied to evaluate a student in the context of a program. Student evaluations are typically applied by a staff member based upon a rubric."
    },
    {
      "name": "programs",
      "description": "This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students."
    },
    {
      "name": "projectDimensions",
      "description": "The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels."
    },
    {
      "name": "reportCards",
      "description": "This educational entity represents the collection of student grades for courses taken during a grading period."
    },
    {
      "name": "restraintEvents",
      "description": "This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction."
    },
    {
      "name": "rubricDimensions",
      "description": "The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level."
    },
    {
      "name": "schools",
      "description": "This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups."
    },
    {
      "name": "schoolYearTypes",
      "description": "Identifier for a school year."
    },
    {
      "name": "sectionAttendanceTakenEvents",
      "description": "Captures attendance taken event for given section."
    },
    {
      "name": "sections",
      "description": "This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section."
    },
    {
      "name": "sessions",
      "description": "A specific designated unit of time during which instruction is provided, grades are reported and academic credits are awarded to students (whenever applicable). Sessions serve as organized segments of the academic year and can be interrupted by vacations or other events."
    },
    {
      "name": "sourceDimensions",
      "description": "The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method."
    },
    {
      "name": "staffAbsenceEvents",
      "description": "This event entity represents the recording of the dates of staff absence."
    },
    {
      "name": "staffCohortAssociations",
      "description": "This association indicates the staff associated with a cohort of students."
    },
    {
      "name": "staffDisciplineIncidentAssociations",
      "description": "This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident."
    },
    {
      "name": "staffEducationOrganizationAssignmentAssociations",
      "description": "This association indicates the education organization to which a staff member provides services."
    },
    {
      "name": "staffEducationOrganizationContactAssociations",
      "description": "This association provides the contact information of the staff associated with the education organization."
    },
    {
      "name": "staffEducationOrganizationEmploymentAssociations",
      "description": "This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from."
    },
    {
      "name": "staffLeaves",
      "description": "This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation)."
    },
    {
      "name": "staffProgramAssociations",
      "description": "This association indicates the staff associated with a program."
    },
    {
      "name": "staffs",
      "description": "This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion."
    },
    {
      "name": "staffSchoolAssociations",
      "description": "This association indicates the school(s) to which a staff member provides instructional services."
    },
    {
      "name": "staffSectionAssociations",
      "description": "This association indicates the class sections to which a staff member is assigned."
    },
    {
      "name": "stateEducationAgencies",
      "description": "This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs."
    },
    {
      "name": "studentAcademicRecords",
      "description": "This educational entity represents the cumulative record of academic achievement for a student."
    },
    {
      "name": "studentAssessmentEducationOrganizationAssociations",
      "description": "The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution."
    },
    {
      "name": "studentAssessments",
      "description": "This entity represents the analysis or scoring of a student's response on an assessment. The analysis results in a value that represents a student's performance on a set of items on a test."
    },
    {
      "name": "studentCohortAssociations",
      "description": "This association represents the cohort(s) for which a student is designated."
    },
    {
      "name": "studentCompetencyObjectives",
      "description": "This entity represents the competency assessed or evaluated for the student against a specific competency objective."
    },
    {
      "name": "studentContactAssociations",
      "description": "This association relates students to their parents, guardians, or caretakers."
    },
    {
      "name": "studentCTEProgramAssociations",
      "description": "This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs."
    },
    {
      "name": "studentDisciplineIncidentBehaviorAssociations",
      "description": "This association describes the behavior of students involved in a discipline incident."
    },
    {
      "name": "studentDisciplineIncidentNonOffenderAssociations",
      "description": "This association indicates those students who were involved and not perpetrators for a discipline incident."
    },
    {
      "name": "studentEducationOrganizationAssociations",
      "description": "This association represents student information as reported in the context of the student's relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation."
    },
    {
      "name": "studentEducationOrganizationResponsibilityAssociations",
      "description": "This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation."
    },
    {
      "name": "studentGradebookEntries",
      "description": "This entity holds a student's grade or competency level for a gradebook entry."
    },
    {
      "name": "studentHomelessProgramAssociations",
      "description": "This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services."
    },
    {
      "name": "studentInterventionAssociations",
      "description": "This association indicates the students participating in an intervention."
    },
    {
      "name": "studentInterventionAttendanceEvents",
      "description": "This event entity represents the recording of whether a student is in attendance for an intervention service."
    },
    {
      "name": "studentLanguageInstructionProgramAssociations",
      "description": "This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services."
    },
    {
      "name": "studentMigrantEducationProgramAssociations",
      "description": "This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs."
    },
    {
      "name": "studentNeglectedOrDelinquentProgramAssociations",
      "description": "This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services."
    },
    {
      "name": "studentProgramAssociations",
      "description": "This association represents the program(s) that a student participates in or is served by."
    },
    {
      "name": "studentProgramAttendanceEvents",
      "description": "This event entity represents the recording of whether a student is in attendance to receive or participate in program services."
    },
    {
      "name": "studentProgramEvaluations",
      "description": "The evaluation results for a student as evaluated in the context of a program."
    },
    {
      "name": "students",
      "description": "This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution."
    },
    {
      "name": "studentSchoolAssociations",
      "description": "This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation."
    },
    {
      "name": "studentSchoolAttendanceEvents",
      "description": "This event entity represents the recording of whether a student is in attendance for a school day."
    },
    {
      "name": "studentSchoolFoodServiceProgramAssociations",
      "description": "This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services."
    },
    {
      "name": "studentSectionAssociations",
      "description": "This association indicates the course sections to which a student is assigned."
    },
    {
      "name": "studentSectionAttendanceEvents",
      "description": "This event entity represents the recording of whether a student is in attendance for a section."
    },
    {
      "name": "studentSpecialEducationProgramAssociations",
      "description": "This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs."
    },
    {
      "name": "studentSpecialEducationProgramEligibilityAssociations",
      "description": "Captures details regarding the evaluation process for eligibility of students for special education services under IDEA Part C or Part B."
    },
    {
      "name": "studentTitleIPartAProgramAssociations",
      "description": "This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs."
    },
    {
      "name": "surveyCourseAssociations",
      "description": "The course associated with the survey."
    },
    {
      "name": "surveyProgramAssociations",
      "description": "The program associated with the survey."
    },
    {
      "name": "surveyQuestionResponses",
      "description": "The response to a survey question."
    },
    {
      "name": "surveyQuestions",
      "description": "The questions for the survey."
    },
    {
      "name": "surveyResponseEducationOrganizationTargetAssociations",
      "description": "This association provides information about the survey being taken and the education organization the survey is about."
    },
    {
      "name": "surveyResponsePersonTargetAssociations",
      "description": "The association provides information about the survey being taken and who the survey is about."
    },
    {
      "name": "surveyResponses",
      "description": "Responses to a Survey for named or anonymous persons."
    },
    {
      "name": "surveyResponseStaffTargetAssociations",
      "description": "The association provides information about the survey being taken and who the survey is about."
    },
    {
      "name": "surveys",
      "description": "A survey to identified or anonymous respondents."
    },
    {
      "name": "surveySectionAssociations",
      "description": "The section associated with the survey."
    },
    {
      "name": "surveySectionResponseEducationOrganizationTargetAssociations",
      "description": "This association provides information about the survey section and the education organization the survey section is about."
    },
    {
      "name": "surveySectionResponsePersonTargetAssociations",
      "description": "This association provides information about the survey section and the person the survey section is about."
    },
    {
      "name": "surveySectionResponses",
      "description": "Optional information about the responses provided for a section of a survey."
    },
    {
      "name": "surveySectionResponseStaffTargetAssociations",
      "description": "This association provides information about the survey section and the staff the survey section is about."
    },
    {
      "name": "surveySections",
      "description": "The section of questions for the survey."
    }
  ]
}