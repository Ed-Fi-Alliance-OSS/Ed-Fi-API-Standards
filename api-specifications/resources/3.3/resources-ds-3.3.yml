# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

openapi: 3.0.3
info:
  title: Ed-Fi Resources API (3.3)
  description: |
    The Ed-Fi Resources API enables applications to read and write education data
    stored in an Ed-Fi-compatible application through a secure REST interface.
  version: "3.3"
security:
- oauth2_client_credentials: []
tags:
- name: academicWeeks
  description: This entity represents the academic weeks for a school year, optionally
    captured to support analyses.
- name: accountabilityRatings
  description: An accountability rating for a school or district.
- name: accountCodes
  description: The set of account codes defined by an education organization for a
    fiscal year.
- name: accounts
  description: This financial entity represents a funding source combined with its
    purpose and type of transaction. It provides a formal record of the debits and
    credits relating to the specific account.
- name: actuals
  description: This financial entity represents the sum of the financial transactions
    to date relating to a specific account.
- name: assessmentItems
  description: This entity represents one of many single measures that make up an
    assessment.
- name: assessments
  description: This entity represents a tool, instrument, process, or exhibition
    composed of a systematic sampling of behavior for measuring a student's competence,
    knowledge, skills, or behavior. An assessment can be used to measure differences
    in individuals or groups and changes in performance from one occasion to the
    next.
- name: assessmentScoreRangeLearningStandards
  description: Score ranges of an assessment associated with one or more learning
    standards.
- name: bellSchedules
  description: This entity represents the schedule of class period meeting times.
- name: budgets
  description: This financial entity represents the amount of monies allocated to
    be spent or received by an education organization as related to a specific account.
- name: calendarDates
  description: The type of scheduled or unscheduled event for the day.
- name: calendars
  description: A set of dates associated with an organization.
- name: candidateEducatorPreparationProgramAssociations
  description: Information about the association between the Teacher Candidate and
    the EducatorPreparationProgram
- name: candidates
  description: A candidate is both a person enrolled in a educator preparation program
    and a candidate to become an educator.
- name: classPeriods
  description: This entity represents the designation of a regularly scheduled series
    of class meetings at designated times and days of the week.
- name: cohorts
  description: This entity represents any type of list of designated students for
    tracking, analysis, or intervention.
- name: communityOrganizations
  description: This entity represents an administrative unit at the state level which
    exists primarily to operate local community providers.
- name: communityProviderLicenses
  description: The legal document held by the CommunityProvider that authorizes the
    holder to perform certain functions and or services.
- name: communityProviders
  description: This entity represents an educational organization that includes staff
    and students who participate in classes and educational activity groups.
- name: competencyObjectives
  description: This entity holds additional competencies for student achievement
    that are not associated with specific learning objectives (e.g., paying attention
    in class).
- name: contractedStaffs
  description: This financial entity represents the sum of the financial transactions
    to date for contracted staff. ContractedStaff includes \"contractors\" or \
    consultants\" who perform services for an agreed upon fee, or an employee of a
    management service contracted to work on site.
- name: courseOfferings
  description: This entity represents an entry in the course catalog of available
    courses offered by the school during a session.
- name: courses
  description: This educational entity represents the organization of subject matter
    and related learning experiences provided for the instruction of students on a
    regular or systematic basis.
- name: courseTranscripts
  description: This entity is the final record of a student's performance in their
    courses at the end of a semester or school year.
- name: credentials
  description: The legal document giving authorization to perform teaching assignment
    services.
- name: disciplineActions
  description: This event entity represents actions taken by an education organization
    after a disruptive event that is recorded as a discipline incident.
- name: disciplineIncidents
  description: This event entity represents an occurrence of an infraction ranging
    from a minor behavioral problem that disrupts the orderly functioning of a school
    or classroom (such as tardiness) to a criminal act that results in the involvement
    of a law enforcement official (such as robbery). A single event (e.g., a fight)
    is one incident regardless of how many perpetrators or victims are involved.
    Discipline incidents are events classified as warranting discipline action.
- name: educationContents
  description: This entity represents materials for students or teachers that can
    be used for teaching, learning, research, and more. Education content includes
    full courses, course materials, modules, intervention descriptions, textbooks,
    streaming videos, tests, software, and any other tools, materials, or techniques
    used to support access to knowledge.
- name: educationOrganizationInterventionPrescriptionAssociations
  description: This association indicates interventions made available by an education
    organization. Often, a district-level education organization purchases a set
    of intervention prescriptions and makes them available to its schools for use
    on demand.
- name: educationOrganizationNetworkAssociations
  description: Properties of the association between the EducationOrganization and
    its network(s).
- name: educationOrganizationNetworks
  description: This entity is a self-organized membership network of peer-level education
    organizations intended to provide shared services or collective procurement.
- name: educationOrganizationPeerAssociations
  description: The association from an education organization to its peers.
- name: educationServiceCenters
  description: This entity represents a regional, multi-services public agency authorized
    by state law to develop, manage and provide services, programs, or other support
    options (e.g., construction, food services, and technology services) to LEAs.
- name: educatorPreparationPrograms
  description: The Educator Preparation Program is designed to prepare students to
    become licensed educators.
- name: evaluationElementRatings
  description: The lowest-level rating for an Evaluation Element for an individual
    educator.
- name: evaluationElements
  description: The lowest-level Elements or criterion of performance being evaluated
    by rubric, quantitative measure, or aggregate survey response.
- name: evaluationObjectiveRatings
  description: The rating for the component Evaluation Objective for an individual
    educator.
- name: evaluationObjectives
  description: A subcomponent of an Evaluation, a specific educator Objective or
    domain of performance that is being evaluated.
- name: evaluationRatings
  description: The summary weighting for the Evaluation instrument for an individual
    educator.
- name: evaluations
  description: An evaluation instrument appled to evaluate an educator.  The evaluation
    could be internally developed, or could be an industry recognized instrument`
    such as TTESS or Marzano.
- name: feederSchoolAssociations
  description: The association from feeder school to the receiving school.
- name: financialAids
  description: This entity represents the financial aid a person is awarded.
- name: gradebookEntries
  description: This entity represents an assignment, homework, or classroom assessment
    to be recorded in a gradebook.
- name: grades
  description: This educational entity represents an overall score or assessment
    tied to a course over a period of time (i.e., the grading period). Student grades
    are usually a compilation of marks and other scores.
- name: gradingPeriods
  description: This entity represents the time span for which grades are reported.
- name: graduationPlans
  description: This entity is a plan outlining the required credits, credits by subject,
    credits by course, and other criteria required for graduation. A graduation
    plan may be one or more standard plans defined by an education organization
    and/or individual plans for some or all students.
- name: interventionPrescriptions
  description: This entity represents a formal prescription of an instructional approach
    focusing on the specific techniques and materials used to teach a given subject.
    This can be prescribed by academic research, an interventions vendor, or another
    entity.
- name: interventions
  description: An implementation of an instructional approach focusing on the specific
    techniques and materials used to teach a given subject.
- name: interventionStudies
  description: An experimental or quasi-experimental study of an intervention technique.
- name: learningObjectives
  description: "Deprecated: Users of this element are advised to use LearningStandard\
    \ instead. Expect removal of this element in a future release. This entity represents\
    \ identified learning objectives for courses in specific grades."
- name: learningStandardEquivalenceAssociations
  description: Indicates a directional association of equivalence from a source to
    a target learning standard.
- name: learningStandards
  description: A statement that describes a specific competency or academic standard.
- name: localEducationAgencies
  description: This entity represents an administrative unit at the local level which
    exists primarily to operate schools or to contract for educational services.
    It includes school districts, charter schools, charter management organizations,
    or other local administrative organizations.
- name: locations
  description: This entity represents the physical space where students gather for
    a particular class/section. The Location may be an indoor or outdoor area designated
    for the purpose of meeting the educational needs of students.
- name: objectiveAssessments
  description: This entity represents subtests that assess specific learning objectives.
- name: openStaffPositions
  description: This entity represents an open staff position that the education organization
    is seeking to fill.
- name: organizationDepartments
  description: An organizational unit of another education organization, often devoted
    to a particular academic discipline, area of study, or organization function.
- name: parents
  description: This entity represents a parent or guardian of a student, such as
    mother, father, or caretaker.
- name: payrolls
  description: This financial entity represents the sum of the financial transactions
    to date for employee compensation. An \"employee\" who performs services under
    the direction of the employing institution or agency, is compensated for such
    services by the employer and is eligible for employee benefits and wage or salary
    tax withholdings.
- name: people
  description: This entity represents a human being.
- name: performanceEvaluationRatings
  description: The summary rating for a Performance Evaluation across all Evaluation
    instruments for an individual educator.
- name: performanceEvaluations
  description: A performance evaluation of an educator, typically regularly scheduled
    and uniformly applied, composed of one or more Evaluations.
- name: postSecondaryEvents
  description: This entity captures significant postsecondary events during a student's
    high school tenure (e.g., FAFSA application or college application, acceptance,
    and enrollment) or during a student's enrollment at a post-secondary institution.
- name: postSecondaryInstitutions
  description: An organization that provides educational programs for individuals
    who have completed or otherwise left educational programs in secondary school(s).
- name: programs
  description: This entity represents any program designed to work in conjunction
    with, or as a supplement to, the main academic program. Programs may provide
    instruction, training, services, or benefits through federal, state, or local
    agencies. Programs may also include organized extracurricular activities for
    students.
- name: reportCards
  description: This educational entity represents the collection of student grades
    for courses taken during a grading period.
- name: restraintEvents
  description: This event entity represents the instances where a special education
    student was physically or mechanically restrained due to imminent serious physical
    harm to themselves or others, imminent serious property destruction or a combination
    of both imminent serious physical harm to themselves or others and imminent
    serious property destruction.
- name: rubricDimensions
  description: The cells of a rubric, consisting of a qualitative decription, definition,
    or exemplar with the associated rubric rating and rating level.
- name: schools
  description: This entity represents an educational organization that includes staff
    and students who participate in classes and educational activity groups.
- name: schoolYearTypes
  description: Identifier for a school year.
- name: sectionAttendanceTakenEvents
  description: Captures attendance taken event for given section.
- name: sections
  description: This entity represents a setting in which organized instruction of
    course content is provided, in-person or otherwise, to one or more students
    for a given period of time. A course offering may be offered to more than one
    section.
- name: sessions
  description: A term in the school year, generally a unit of time into which courses
    are scheduled, instruction occurs and by which credits are awarded. Sessions
    may be interrupted by vacations or other events.
- name: staffAbsenceEvents
  description: This event entity represents the recording of the dates of staff absence.
- name: staffCohortAssociations
  description: This association indicates the staff associated with a cohort of students.
- name: staffDisciplineIncidentAssociations
  description: This association indicates those staff who were victims, perpetrators,
    witnesses, and reporters for a discipline incident.
- name: staffEducationOrganizationAssignmentAssociations
  description: This association indicates the education organization to which a staff
    member provides services.
- name: staffEducationOrganizationContactAssociations
  description: This association provides the contact information of the staff associated
    with the education organization.
- name: staffEducationOrganizationEmploymentAssociations
  description: This association indicates the EducationOrganization an employee,
    contractor, volunteer, or other service provider is formally associated with
    typically indicated by which organization the staff member has a services contract
    with or receives compensation from.
- name: staffLeaves
  description: This entity represents the recording of the dates of staff leave (e.g.,
    sick leave, personal time, vacation).
- name: staffProgramAssociations
  description: This association indicates the staff associated with a program.
- name: staffs
  description: "This entity represents an individual who performs specified activities\
    \ for any public or private education institution or agency that provides instructional\
    \ and/or support services to students or staff at the early childhood level through\
    \ high school completion. For example, this includes:    1. An \"employee\" who\
    \ performs services under the direction of the employing institution or agency\
    \ is compensated for such services by the employer and is eligible for employee\
    \ benefits and wage or salary tax withholdings    2. A \"contractor\" or \"consultant\\
    \ who performs services for an agreed upon fee or an employee of a management\
    \ service contracted to work on site    3. A \"volunteer\" who performs services\
    \ on a voluntary and uncompensated basis    4. An in-kind service provider\
    \ 5. An independent contractor or businessperson working at a school site."
- name: staffSchoolAssociations
  description: This association indicates the School(s) to which a staff member provides
    instructional services.
- name: staffSectionAssociations
  description: This association indicates the class sections to which a staff member
    is assigned.
- name: stateEducationAgencies
  description: This entity represents the agency of the state charged with the primary
    responsibility for coordinating and supervising public instruction, including
    the setting of standards for elementary and secondary instructional programs.
- name: studentAcademicRecords
  description: This educational entity represents the cumulative record of academic
    achievement for a student.
- name: studentAssessments
  description: This entity represents the analysis or scoring of a student's response
    on an assessment. The analysis results in a value that represents a student's
    performance on a set of items on a test.
- name: studentCohortAssociations
  description: This association represents the Cohort(s) for which a student is designated.
- name: studentCompetencyObjectives
  description: This entity represents the competency assessed or evaluated for the
    student against a specific competency objective.
- name: studentCTEProgramAssociations
  description: This association represents the career and technical education (CTE)
    program that a student participates in. The association is an extension of the
    StudentProgramAssociation particular for CTE programs.
- name: studentDisciplineIncidentAssociations
  description: "Deprecated: Users of this element are advised to use StudentDisciplineIncidentBehaviorAssociation\
    \ or StudentDisciplineIncidentNonOffenderAssociation instead. Expect removal of\
    \ this element in a future release. This association indicates those students\
    \ who were victims, perpetrators, witnesses, and reporters for a discipline incident."
- name: studentDisciplineIncidentBehaviorAssociations
  description: This association describes the behavior of students involved in a discipline
    incident.
- name: studentDisciplineIncidentNonOffenderAssociations
  description: This association indicates those students who were involved and not
    perpetrators for a discipline incident.
- name: studentEducationOrganizationAssociations
  description: This association represents student information as reported in the
    context of the student's relationship to the Education Organization. Enrollment
    relationship semantics are covered by StudentSchoolAssociation.
- name: studentEducationOrganizationResponsibilityAssociations
  description: This association indicates a relationship between a student and an
    education organization other than an enrollment relationship, and generally
    indicating some kind of responsibility of the education organization for the
    student. Enrollment relationship semantics are covered by StudentSchoolAssociation.
- name: studentGradebookEntries
  description: This entity holds a student's grade or competency level for a gradebook
    entry.
- name: studentHomelessProgramAssociations
  description: This association represents the McKinney-Vento Homeless Program program(s)
    that a student participates in or from which the Student receives services.
- name: studentInterventionAssociations
  description: This association indicates the students participating in an intervention.
- name: studentInterventionAttendanceEvents
  description: This event entity represents the recording of whether a student is
    in attendance for an intervention service.
- name: studentLanguageInstructionProgramAssociations
  description: This association represents the Title III Language Instruction for
    Limited English Proficient and Immigrant Students program(s) that a student participates
    in or from which the Student receives services.
- name: studentLearningObjectives
  description: "Deprecated: Users of this element are advised to use Grade.LearningStandardGrade\
    \ instead. Expect removal of this element in a future release. This entity represents\
    \ the competency assessed or evaluated for the student against a specific LearningObjective."
- name: studentMigrantEducationProgramAssociations
  description: This association represents the migrant education program(s) that a
    student participates in or receives services from. The association is an extension
    of the StudentProgramAssociation with added elements particular to migrant education
    programs.
- name: studentNeglectedOrDelinquentProgramAssociations
  description: This association represents the Title I Part D Neglected or Delinquent
    program(s) that a student participates in or from which the Student receives services.
- name: studentParentAssociations
  description: This association relates students to their parents, guardians, or
    caretakers.
- name: studentProgramAssociations
  description: This association represents the Program(s) that a student participates
    in or is served by.
- name: studentProgramAttendanceEvents
  description: This event entity represents the recording of whether a student is
    in attendance to receive or participate in program services.
- name: students
  description: This entity represents an individual for whom instruction, services,
    and/or care are provided in an early childhood, elementary, or secondary educational
    program under the jurisdiction of a school, education agency or other institution
    or program. A student is a person who has been enrolled in a school or other
    educational institution.
- name: studentSchoolAssociations
  description: This association represents the School in which a student is enrolled.
    The semantics of enrollment may differ slightly by state. Non-enrollment relationships
    between a student and an education organization may be described using the StudentEducationOrganizationAssociation.
- name: studentSchoolAttendanceEvents
  description: This event entity represents the recording of whether a student is
    in attendance for a school day.
- name: studentSchoolFoodServiceProgramAssociations
  description: This association represents the school food services program(s), such
    as the Free or Reduced Lunch Program, that a student participates in or from
    which the Student receives services.
- name: studentSectionAssociations
  description: This association indicates the course sections to which a student is
    assigned.
- name: studentSectionAttendanceEvents
  description: This event entity represents the recording of whether a student is
    in attendance for a section.
- name: studentSpecialEducationProgramAssociations
  description: This association represents the special education program(s) that a
    student participates in or receives services from. The association is an extension
    of the StudentProgramAssociation particular for special education programs.
- name: studentTitleIPartAProgramAssociations
  description: This association represents the Title I Part A program(s) that a student
    participates in or from which the Student receives services. The association is
    an extension of the StudentProgramAssociation particular for Title I Part A programs.
- name: surveyCourseAssociations
  description: The course associated with the survey.
- name: surveyProgramAssociations
  description: The program associated with the survey.
- name: surveyQuestionResponses
  description: The response to a survey question.
- name: surveyQuestions
  description: The questions for the survey.
- name: surveyResponseEducationOrganizationTargetAssociations
  description: This association provides information about the survey being taken
    and the education organization the survey is about.
- name: surveyResponsePersonTargetAssociations
  description: The association provides information about the survey being taken and
    who the survey is about.
- name: surveyResponses
  description: Responses to a Survey for named or anonymous persons.
- name: surveyResponseStaffTargetAssociations
  description: The association provides information about the survey being taken and
    who the survey is about.
- name: surveys
  description: A survey to identified or anonymous respondents.
- name: surveySectionAssociations
  description: The section associated with the survey.
- name: surveySectionResponseEducationOrganizationTargetAssociations
  description: This association provides information about the survey section and
    the Education Organization the survey section is about.
- name: surveySectionResponsePersonTargetAssociations
  description: This association provides information about the survey section and
    the person the survey section is about.
- name: surveySectionResponses
  description: Optional information about the responses provided for a section of
    a survey.
- name: surveySectionResponseStaffTargetAssociations
  description: This association provides information about the survey section and
    the staff the survey section is about.
- name: surveySections
  description: The section of questions for the survey.
paths:
  /ed-fi/academicWeeks:
    get:
      tags:
      - academicWeeks
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAcademicWeeks
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: weekIdentifier
        in: query
        description: The school label for the week.
        schema:
          maxLength: 80
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: The start date for the academic week.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: The end date for the academic week.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: totalInstructionalDays
        in: query
        description: The total instructional days during the academic week.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_academicWeek"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - academicWeeks
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAcademicWeek
      requestBody:
        description: The JSON representation of the "academicWeek" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_academicWeek"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/academicWeeks/{id}:
    get:
      tags:
      - academicWeeks
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAcademicWeeksById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_academicWeek"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - academicWeeks
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAcademicWeek
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "academicWeek" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_academicWeek"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - academicWeeks
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAcademicWeekById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accounts:
    get:
      tags:
      - accounts
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAccounts
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: accountIdentifier
        in: query
        description: The alphanumeric string that identifies the account.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountName
        in: query
        description: A descriptive name for the account.
        schema:
          maxLength: 100
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_account"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - accounts
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAccount
      requestBody:
        description: The JSON representation of the "account" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_account"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accounts/{id}:
    get:
      tags:
      - accounts
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAccountsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_account"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - accounts
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAccount
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "account" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_account"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - accounts
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAccountById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accountabilityRatings:
    get:
      tags:
      - accountabilityRatings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAccountabilityRatings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: ratingTitle
        in: query
        description: The title of the rating (e.g., School Rating, Safety Score).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The school year for which the AccountabilityRating is assessed.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      - name: rating
        in: query
        description: An accountability rating level, designation, or assessment.
        schema:
          maxLength: 35
          type: string
      - name: ratingDate
        in: query
        description: The date the rating was awarded.
        schema:
          type: string
          format: date
      - name: ratingOrganization
        in: query
        description: The organization that assessed the rating.
        schema:
          maxLength: 35
          type: string
      - name: ratingProgram
        in: query
        description: The program associated with the AccountabilityRating (e.g.,
          NCLB, AEIS).
        schema:
          maxLength: 30
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_accountabilityRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - accountabilityRatings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAccountabilityRating
      requestBody:
        description: The JSON representation of the "accountabilityRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_accountabilityRating"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accountabilityRatings/{id}:
    get:
      tags:
      - accountabilityRatings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAccountabilityRatingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_accountabilityRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - accountabilityRatings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAccountabilityRating
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "accountabilityRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_accountabilityRating"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - accountabilityRatings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAccountabilityRatingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accountCodes:
    get:
      tags:
      - accountCodes
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAccountCodes
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: accountClassificationDescriptor
        in: query
        description: The type of account code associated with the account.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountCodeNumber
        in: query
        description: An account code defined for the education accounting system by
          the education organization.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountCodeDescription
        in: query
        description: A description of the account code.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_accountCode"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - accountCodes
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAccountCode
      requestBody:
        description: The JSON representation of the "accountCode" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_accountCode"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/accountCodes/{id}:
    get:
      tags:
      - accountCodes
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAccountCodesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_accountCode"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - accountCodes
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAccountCode
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "accountCode" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_accountCode"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - accountCodes
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAccountCodeById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/actuals:
    get:
      tags:
      - actuals
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getActuals
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: asOfDate
        in: query
        description: The date of the reported actual element.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountIdentifier
        in: query
        description: The alphanumeric string that identifies the account.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: amountToDate
        in: query
        description: Current balance for the account.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_actual"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - actuals
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postActual
      requestBody:
        description: The JSON representation of the "actual" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_actual"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/actuals/{id}:
    get:
      tags:
      - actuals
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getActualsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_actual"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - actuals
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putActual
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "actual" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_actual"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - actuals
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteActualById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessments:
    get:
      tags:
      - assessments
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAssessments
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: assessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Assessment.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: assessmentCategoryDescriptor
        in: query
        description: "The category of an assessment based on format and content. For\
          \ example:        Achievement test        Advanced placement test\
          \  Alternate assessment/grade-level standards Attitudinal test        Cognitive\
          \ and perceptual skills test ..."
        schema:
          maxLength: 306
          type: string
      - name: adaptiveAssessment
        in: query
        description: Indicates that the assessment is adaptive.
        schema:
          type: boolean
      - name: assessmentFamily
        in: query
        description: The AssessmentFamily this Assessment is a member of.
        schema:
          maxLength: 60
          type: string
      - name: assessmentForm
        in: query
        description: Identifies the form of the assessment, for example a regular
          versus makeup form, multiple choice versus constructed response, etc.
        schema:
          maxLength: 60
          type: string
      - name: assessmentTitle
        in: query
        description: The title or name of the Assessment.
        schema:
          maxLength: 100
          type: string
      - name: assessmentVersion
        in: query
        description: The version identifier for the assessment.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      - name: maxRawScore
        in: query
        description: The maximum raw score achievable across all assessment items
          that are correct and scored at the maximum.
        schema:
          type: number
          format: double
      - name: nomenclature
        in: query
        description: Reflects the specific nomenclature used for Assessment.
        schema:
          maxLength: 35
          type: string
      - name: revisionDate
        in: query
        description: The month, day, and year that the conceptual design for the
          assessment was most recently revised substantially.
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_assessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - assessments
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAssessment
      requestBody:
        description: The JSON representation of the "assessment" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessment"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessments/{id}:
    get:
      tags:
      - assessments
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAssessmentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_assessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - assessments
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAssessment
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "assessment" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessment"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - assessments
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAssessmentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessmentItems:
    get:
      tags:
      - assessmentItems
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAssessmentItems
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: identificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a space, room,
          site, building, individual, organization, program, or institution by a
          school, school system, state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: assessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Assessment.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: assessmentItemCategoryDescriptor
        in: query
        description: "Category or type of the AssessmentItem. For example:\
          \ Multiple choice        Analytic        Prose        ..."
        schema:
          maxLength: 306
          type: string
      - name: assessmentItemURI
        in: query
        description: The URI (typical a URL) pointing to the entry in an assessment
          item bank, which describes this content item.
        schema:
          maxLength: 255
          type: string
      - name: correctResponse
        in: query
        description: The correct response for the AssessmentItem.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use PossibleResponse.CorrectResponse
            instead, which supports capture of all or a subset of all possible responses
            to an assessment item. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use PossibleResponse.CorrectResponse
          instead, which supports capture of all or a subset of all possible responses
          to an assessment item. Expect removal of this element in a future release.
      - name: expectedTimeAssessed
        in: query
        description: The duration of time allotted for the AssessmentItem.
        schema:
          maxLength: 30
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: itemText
        in: query
        description: The text of the item.
        schema:
          maxLength: 1024
          type: string
      - name: maxRawScore
        in: query
        description: The maximum raw score achievable across all assessment items
          that are correct and scored at the maximum.
        schema:
          type: number
          format: double
      - name: nomenclature
        in: query
        description: Reflects the specific nomenclature used for AssessmentItem.
        schema:
          maxLength: 35
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_assessmentItem"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - assessmentItems
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAssessmentItem
      requestBody:
        description: The JSON representation of the "assessmentItem" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessmentItem"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessmentItems/{id}:
    get:
      tags:
      - assessmentItems
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAssessmentItemsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_assessmentItem"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - assessmentItems
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAssessmentItem
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "assessmentItem" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessmentItem"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - assessmentItems
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAssessmentItemById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessmentScoreRangeLearningStandards:
    get:
      tags:
      - assessmentScoreRangeLearningStandards
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getAssessmentScoreRangeLearningStandards
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: scoreRangeId
        in: query
        description: A unique number or alphanumeric code assigned to the score range
          associated with one or more learning standards.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: assessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Assessment.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: identificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a space, room,
          site, building, individual, organization, program, or institution by a
          school, school system, a state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
      - name: assessmentReportingMethodDescriptor
        in: query
        description: The assessment reporting method defined (e.g., scale score,
          RIT scale score) associated with the referenced learning standard(s).
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: maximumScore
        in: query
        description: The maximum score in the score range.
        schema:
          maxLength: 35
          type: string
      - name: minimumScore
        in: query
        description: The minimum score in the score range.
        schema:
          maxLength: 35
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - assessmentScoreRangeLearningStandards
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postAssessmentScoreRangeLearningStandard
      requestBody:
        description: The JSON representation of the "assessmentScoreRangeLearningStandard
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/assessmentScoreRangeLearningStandards/{id}:
    get:
      tags:
      - assessmentScoreRangeLearningStandards
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getAssessmentScoreRangeLearningStandardsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - assessmentScoreRangeLearningStandards
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putAssessmentScoreRangeLearningStandard
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "assessmentScoreRangeLearningStandard
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_assessmentScoreRangeLearningStandard"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - assessmentScoreRangeLearningStandards
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteAssessmentScoreRangeLearningStandardById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/bellSchedules:
    get:
      tags:
      - bellSchedules
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getBellSchedules
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: bellScheduleName
        in: query
        description: Name or title of the BellSchedule.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: alternateDayName
        in: query
        description: An alternate name for the day (e.g., Red, Blue).
        schema:
          maxLength: 20
          type: string
      - name: endTime
        in: query
        description: An indication of the time of day the bell schedule ends.
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: startTime
        in: query
        description: An indication of the time of day the bell schedule begins.
        schema:
          type: string
      - name: totalInstructionalTime
        in: query
        description: The total instructional time in minutes per day for the bell
          schedule.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_bellSchedule"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - bellSchedules
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postBellSchedule
      requestBody:
        description: The JSON representation of the "bellSchedule" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_bellSchedule"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/bellSchedules/{id}:
    get:
      tags:
      - bellSchedules
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getBellSchedulesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_bellSchedule"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - bellSchedules
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putBellSchedule
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "bellSchedule" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_bellSchedule"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - bellSchedules
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteBellScheduleById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/budgets:
    get:
      tags:
      - budgets
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getBudgets
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: asOfDate
        in: query
        description: The date of the reported budget element.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountIdentifier
        in: query
        description: The alphanumeric string that identifies the account.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: amount
        in: query
        description: Amount budgeted for the account for this fiscal year.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_budget"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - budgets
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postBudget
      requestBody:
        description: The JSON representation of the "budget" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_budget"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/budgets/{id}:
    get:
      tags:
      - budgets
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getBudgetsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_budget"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - budgets
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putBudget
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "budget" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_budget"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - budgets
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteBudgetById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/calendars:
    get:
      tags:
      - calendars
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCalendars
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: calendarCode
        in: query
        description: The identifier for the Calendar.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year associated with the Calendar.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: calendarTypeDescriptor
        in: query
        description: Indicates the type of Calendar.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_calendar"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - calendars
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCalendar
      requestBody:
        description: The JSON representation of the "calendar" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_calendar"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/calendars/{id}:
    get:
      tags:
      - calendars
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCalendarsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_calendar"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - calendars
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCalendar
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "calendar" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_calendar"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - calendars
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCalendarById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/calendarDates:
    get:
      tags:
      - calendarDates
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCalendarDates
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: date
        in: query
        description: The month, day, and year of the CalendarEvent.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: calendarCode
        in: query
        description: The identifier for the Calendar.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year associated with the Calendar.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_calendarDate"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - calendarDates
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCalendarDate
      requestBody:
        description: The JSON representation of the "calendarDate" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_calendarDate"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/calendarDates/{id}:
    get:
      tags:
      - calendarDates
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCalendarDatesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_calendarDate"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - calendarDates
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCalendarDate
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "calendarDate" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_calendarDate"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - calendarDates
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCalendarDateById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/candidates:
    get:
      tags:
      - candidates
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCandidates
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: candidateIdentifier
        in: query
        description: A unique alphanumeric code assigned to a candidate.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
      - name: birthCountryDescriptor
        in: query
        description: The country in which an individual is born. It is strongly recommended
          that entries use only ISO 3166 2-letter country codes.
        schema:
          maxLength: 306
          type: string
      - name: englishLanguageExamDescriptor
        in: query
        description: Indicates that a person passed, failed, or did not take an English
          Language assessment (e.g., TOEFFL).
        schema:
          maxLength: 306
          type: string
      - name: genderDescriptor
        in: query
        description: The gender of the candidate.
        schema:
          maxLength: 306
          type: string
      - name: limitedEnglishProficiencyDescriptor
        in: query
        description: An indication that the student has been identified as limited
          English proficient by the Language Proficiency Assessment Committee (LPAC),
          or English proficient.
        schema:
          maxLength: 306
          type: string
      - name: sexDescriptor
        in: query
        description: The sex of the candidate.
        schema:
          maxLength: 306
          type: string
      - name: birthSexDescriptor
        in: query
        description: A person's gender at birth.
        schema:
          maxLength: 306
          type: string
      - name: birthStateAbbreviationDescriptor
        in: query
        description: The abbreviation for the name of the state (within the United
          States) or extra-state jurisdiction in which an individual was born.
        schema:
          maxLength: 306
          type: string
      - name: birthCity
        in: query
        description: The city the student was born in.
        schema:
          maxLength: 30
          type: string
      - name: birthDate
        in: query
        description: The month, day, and year on which an individual was born.
        schema:
          type: string
          format: date
      - name: birthInternationalProvince
        in: query
        description: For students born outside of the U.S., the Province or jurisdiction
          in which an individual is born.
        schema:
          maxLength: 150
          type: string
      - name: dateEnteredUS
        in: query
        description: For students born outside of the U.S., the date the student
          entered the U.S.
        schema:
          type: string
          format: date
      - name: displacementStatus
        in: query
        description: Indicates a state health or weather related event that displaces
          a group of students, and may require additional funding, educational,
          or social services.
        schema:
          maxLength: 30
          type: string
      - name: economicDisadvantaged
        in: query
        description: An indication of inadequate financial condition of an individual's
          family, as determined by family income, number of family members/dependents,
          participation in public assistance programs, and/or other characteristics
          considered relevant by federal, state, and local policy.
        schema:
          type: boolean
      - name: firstGenerationStudent
        in: query
        description: Indicator of whether individual is a first generation college
          student.
        schema:
          type: boolean
      - name: firstName
        in: query
        description: A name given to an individual at birth, baptism, or during another
          naming ceremony, or through legal change.
        schema:
          maxLength: 75
          type: string
      - name: generationCodeSuffix
        in: query
        description: An appendage, if any, used to denote an individual's generation
          in his family (e.g., Jr., Sr., III).
        schema:
          maxLength: 10
          type: string
      - name: hispanicLatinoEthnicity
        in: query
        description: An indication that the individual traces his or her origin or
          descent to Mexico, Puerto Rico, Cuba, Central, and South America, and
          other Spanish cultures, regardless of race. The term, \"Spanish origin,\
          can be used in addition to \"Hispanic or Latino.\"
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: lastSurname
        in: query
        description: The name borne in common by members of a family.
        schema:
          maxLength: 75
          type: string
      - name: maidenName
        in: query
        description: The person's maiden name.
        schema:
          maxLength: 75
          type: string
      - name: middleName
        in: query
        description: A secondary name given to an individual at birth, baptism, or
          during another naming ceremony.
        schema:
          maxLength: 75
          type: string
      - name: multipleBirthStatus
        in: query
        description: Indicator of whether the student was born with other siblings
          (i.e., twins, triplets, etc.)
        schema:
          type: boolean
      - name: personalTitlePrefix
        in: query
        description: A prefix used to denote the title, degree, position, or seniority
          of the person.
        schema:
          maxLength: 30
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_candidate"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - candidates
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCandidate
      requestBody:
        description: The JSON representation of the "candidate" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_candidate"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/candidates/{id}:
    get:
      tags:
      - candidates
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCandidatesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_candidate"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - candidates
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCandidate
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "candidate" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_candidate"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - candidates
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCandidateById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/candidateEducatorPreparationProgramAssociations:
    get:
      tags:
      - candidateEducatorPreparationProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCandidateEducatorPreparationProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The begin date for the association.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: candidateIdentifier
        in: query
        description: A unique alphanumeric code assigned to a candidate.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The name of the Educator Preparation Program.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eppProgramPathwayDescriptor
        in: query
        description: "The program pathway the candidate is following; for example:\
          \ Residency, Internship, Traditional"
        schema:
          maxLength: 306
          type: string
      - name: reasonExitedDescriptor
        in: query
        description: Reason exited for the association.
        schema:
          maxLength: 306
          type: string
      - name: endDate
        in: query
        description: The end date for the association.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - candidateEducatorPreparationProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCandidateEducatorPreparationProgramAssociation
      requestBody:
        description: The JSON representation of the "candidateEducatorPreparationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/candidateEducatorPreparationProgramAssociations/{id}:
    get:
      tags:
      - candidateEducatorPreparationProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCandidateEducatorPreparationProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - candidateEducatorPreparationProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCandidateEducatorPreparationProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "candidateEducatorPreparationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - candidateEducatorPreparationProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCandidateEducatorPreparationProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/classPeriods:
    get:
      tags:
      - classPeriods
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getClassPeriods
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: classPeriodName
        in: query
        description: An indication of the portion of a typical daily session in which
          students receive instruction in a specified subject (e.g., morning, sixth
          period, block period, or AB schedules).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      - name: officialAttendancePeriod
        in: query
        description: Indicator of whether this class period is used for official
          daily attendance. Alternatively, official daily attendance may be tied
          to a Section.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_classPeriod"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - classPeriods
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postClassPeriod
      requestBody:
        description: The JSON representation of the "classPeriod" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_classPeriod"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/classPeriods/{id}:
    get:
      tags:
      - classPeriods
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getClassPeriodsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_classPeriod"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - classPeriods
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putClassPeriod
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "classPeriod" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_classPeriod"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - classPeriods
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteClassPeriodById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/cohorts:
    get:
      tags:
      - cohorts
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCohorts
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: cohortIdentifier
        in: query
        description: The name or ID for the Cohort.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: academicSubjectDescriptor
        in: query
        description: The academic subject associated with an academic intervention.
        schema:
          maxLength: 306
          type: string
      - name: cohortScopeDescriptor
        in: query
        description: The scope of cohort (e.g., school, district, classroom).
        schema:
          maxLength: 306
          type: string
      - name: cohortTypeDescriptor
        in: query
        description: The type of cohort (e.g., academic intervention, classroom breakout).
        schema:
          maxLength: 306
          type: string
      - name: cohortDescription
        in: query
        description: The description of the Cohort and its purpose.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_cohort"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - cohorts
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCohort
      requestBody:
        description: The JSON representation of the "cohort" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_cohort"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/cohorts/{id}:
    get:
      tags:
      - cohorts
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCohortsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_cohort"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - cohorts
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCohort
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "cohort" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_cohort"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - cohorts
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCohortById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityOrganizations:
    get:
      tags:
      - communityOrganizations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCommunityOrganizations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: communityOrganizationId
        in: query
        description: The identifier assigned to a CommunityOrganization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_communityOrganization"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - communityOrganizations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCommunityOrganization
      requestBody:
        description: The JSON representation of the "communityOrganization" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityOrganization"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityOrganizations/{id}:
    get:
      tags:
      - communityOrganizations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCommunityOrganizationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_communityOrganization"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - communityOrganizations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCommunityOrganization
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "communityOrganization" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityOrganization"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - communityOrganizations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCommunityOrganizationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityProviders:
    get:
      tags:
      - communityProviders
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCommunityProviders
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: communityProviderId
        in: query
        description: The identifier assigned to a CommunityProvider.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: communityOrganizationId
        in: query
        description: The identifier assigned to a CommunityOrganization.
        schema:
          type: integer
          format: int32
      - name: providerCategoryDescriptor
        in: query
        description: Indicates the category of the provider.
        schema:
          maxLength: 306
          type: string
      - name: providerProfitabilityDescriptor
        in: query
        description: Indicates the profitability status of the provider.
        schema:
          maxLength: 306
          type: string
      - name: providerStatusDescriptor
        in: query
        description: Indicates the status of the provider.
        schema:
          maxLength: 306
          type: string
      - name: licenseExemptIndicator
        in: query
        description: An indication of whether the provider is exempt from having a
          license.
        schema:
          type: boolean
      - name: schoolIndicator
        in: query
        description: An indication of whether the community provider is a school.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_communityProvider"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - communityProviders
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCommunityProvider
      requestBody:
        description: The JSON representation of the "communityProvider" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityProvider"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityProviders/{id}:
    get:
      tags:
      - communityProviders
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCommunityProvidersById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_communityProvider"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - communityProviders
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCommunityProvider
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "communityProvider" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityProvider"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - communityProviders
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCommunityProviderById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityProviderLicenses:
    get:
      tags:
      - communityProviderLicenses
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCommunityProviderLicenses
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: licenseIdentifier
        in: query
        description: The unique identifier issued by the licensing organization.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: licensingOrganization
        in: query
        description: The organization issuing the license.
        schema:
          maxLength: 75
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: communityProviderId
        in: query
        description: The identifier assigned to a CommunityProvider.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: licenseStatusDescriptor
        in: query
        description: An indication of the status of the license.
        schema:
          maxLength: 306
          type: string
      - name: licenseTypeDescriptor
        in: query
        description: An indication of the category of the license.
        schema:
          maxLength: 306
          type: string
      - name: authorizedFacilityCapacity
        in: query
        description: The maximum number that can be contained or accommodated which
          a provider is authorized or licensed to serve.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      - name: licenseEffectiveDate
        in: query
        description: The month, day, and year on which a license is active or becomes
          effective.
        schema:
          type: string
          format: date
      - name: licenseExpirationDate
        in: query
        description: The month, day, and year on which a license will expire.
        schema:
          type: string
          format: date
      - name: licenseIssueDate
        in: query
        description: The month, day, and year on which an active license was issued.
        schema:
          type: string
          format: date
      - name: oldestAgeAuthorizedToServe
        in: query
        description: The oldest age of children a provider is authorized or licensed
          to serve.
        schema:
          type: integer
          format: int32
      - name: youngestAgeAuthorizedToServe
        in: query
        description: The youngest age of children a provider is authorized or licensed
          to serve.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_communityProviderLicense"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - communityProviderLicenses
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCommunityProviderLicense
      requestBody:
        description: The JSON representation of the "communityProviderLicense" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityProviderLicense"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/communityProviderLicenses/{id}:
    get:
      tags:
      - communityProviderLicenses
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCommunityProviderLicensesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_communityProviderLicense"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - communityProviderLicenses
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCommunityProviderLicense
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "communityProviderLicense" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_communityProviderLicense"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - communityProviderLicenses
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCommunityProviderLicenseById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/competencyObjectives:
    get:
      tags:
      - competencyObjectives
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCompetencyObjectives
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: objectiveGradeLevelDescriptor
        in: query
        description: The grade level for which the CompetencyObjective is targeted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: objective
        in: query
        description: The designated title of the CompetencyObjective.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: competencyObjectiveId
        in: query
        description: The Identifier for the CompetencyObjective.
        schema:
          maxLength: 60
          type: string
      - name: description
        in: query
        description: The description of the student competency objective.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: successCriteria
        in: query
        description: One or more statements that describes the criteria used by teachers
          and students to check for attainment of a competency objective. This criteria
          gives clear indications as to the degree to which learning is moving through
          the Zone or Proximal Development toward independent achievement of the CompetencyObjective.
        schema:
          maxLength: 150
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_competencyObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - competencyObjectives
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCompetencyObjective
      requestBody:
        description: The JSON representation of the "competencyObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_competencyObjective"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/competencyObjectives/{id}:
    get:
      tags:
      - competencyObjectives
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCompetencyObjectivesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_competencyObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - competencyObjectives
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCompetencyObjective
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "competencyObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_competencyObjective"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - competencyObjectives
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCompetencyObjectiveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/contractedStaffs:
    get:
      tags:
      - contractedStaffs
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getContractedStaffs
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: asOfDate
        in: query
        description: The date of the reported contracted staff element.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountIdentifier
        in: query
        description: The alphanumeric string that identifies the account.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: amountToDate
        in: query
        description: Current balance (amount paid to contractor) for account for the
          fiscal year.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_contractedStaff"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - contractedStaffs
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postContractedStaff
      requestBody:
        description: The JSON representation of the "contractedStaff" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_contractedStaff"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/contractedStaffs/{id}:
    get:
      tags:
      - contractedStaffs
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getContractedStaffsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_contractedStaff"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - contractedStaffs
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putContractedStaff
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "contractedStaff" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_contractedStaff"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - contractedStaffs
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteContractedStaffById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courses:
    get:
      tags:
      - courses
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCourses
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: courseCode
        in: query
        description: A unique alphanumeric code assigned to a course.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: academicSubjectDescriptor
        in: query
        description: The intended major subject area of the course.
        schema:
          maxLength: 306
          type: string
      - name: careerPathwayDescriptor
        in: query
        description: Indicates the career cluster or pathway the course is associated
          with as part of a CTE curriculum.
        schema:
          maxLength: 306
          type: string
      - name: courseDefinedByDescriptor
        in: query
        description: Specifies whether the course was defined by the SEA, LEA, School,
          or national organization.
        schema:
          maxLength: 306
          type: string
      - name: courseGPAApplicabilityDescriptor
        in: query
        description: An indicator of whether or not the course being described is
          included in the computation of the student's Grade Point Average, and
          if so, if it is weighted differently from regular courses.
        schema:
          maxLength: 306
          type: string
      - name: minimumAvailableCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: maximumAvailableCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: courseDescription
        in: query
        description: A description of the content standards and goals covered in the
          course. Reference may be made to state or national content standards.
        schema:
          maxLength: 1024
          type: string
      - name: courseTitle
        in: query
        description: The descriptive name given to a course of study offered in a
          school or other institution or organization. In departmentalized classes
          at the elementary, secondary, and postsecondary levels (and for staff
          development activities), this refers to the name by which a course is
          identified (e.g., American History, English III). For elementary and other
          non-departmentalized classes, it refers to any portion of the instruction
          for which a grade or report is assigned (e.g., reading, composition, spelling,
          and language arts).
        schema:
          maxLength: 60
          type: string
      - name: dateCourseAdopted
        in: query
        description: Date the course was adopted by the education agency.
        schema:
          type: string
          format: date
      - name: highSchoolCourseRequirement
        in: query
        description: An indication that this course may satisfy high school graduation
          requirements in the course's subject area.
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: maxCompletionsForCredit
        in: query
        description: Designates how many times the course may be taken with credit
          received by the student.
        schema:
          type: integer
          format: int32
      - name: maximumAvailableCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: maximumAvailableCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: minimumAvailableCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: minimumAvailableCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: numberOfParts
        in: query
        description: The number of parts identified for a course.
        schema:
          type: integer
          format: int32
      - name: timeRequiredForCompletion
        in: query
        description: The actual or estimated number of clock minutes required for
          class completion.  This number is especially important for career and technical
          education classes and may represent (in minutes) the clock hour requirement
          of the class.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_course"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - courses
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCourse
      requestBody:
        description: The JSON representation of the "course" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_course"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courses/{id}:
    get:
      tags:
      - courses
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCoursesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_course"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - courses
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCourse
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "course" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_course"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - courses
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCourseById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courseOfferings:
    get:
      tags:
      - courseOfferings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCourseOfferings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: courseCode
        in: query
        description: A unique alphanumeric code assigned to a course.
        schema:
          maxLength: 60
          type: string
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      - name: instructionalTimePlanned
        in: query
        description: The planned total number of clock minutes of instruction for
          this course offering. Generally, this should be at least as many minutes
          as is required for completion by the related state- or district-defined
          course.
        schema:
          type: integer
          format: int32
      - name: localCourseTitle
        in: query
        description: The descriptive name given to a course of study offered in the
          school, if different from the CourseTitle.
        schema:
          maxLength: 60
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_courseOffering"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - courseOfferings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCourseOffering
      requestBody:
        description: The JSON representation of the "courseOffering" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_courseOffering"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courseOfferings/{id}:
    get:
      tags:
      - courseOfferings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCourseOfferingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_courseOffering"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - courseOfferings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCourseOffering
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "courseOffering" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_courseOffering"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - courseOfferings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCourseOfferingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courseTranscripts:
    get:
      tags:
      - courseTranscripts
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCourseTranscripts
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: courseAttemptResultDescriptor
        in: query
        description: "The result from the student's attempt to take the course, for\
          \ example:        Pass        Fail        Incomplete        Withdrawn."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: courseCode
        in: query
        description: A unique alphanumeric code assigned to a course.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: courseEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: externalEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: courseRepeatCodeDescriptor
        in: query
        description: Indicates that an academic course has been repeated by a student
          and how that repeat is to be computed in the student's academic grade average.
        schema:
          maxLength: 306
          type: string
      - name: attemptedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: earnedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: whenTakenGradeLevelDescriptor
        in: query
        description: Student's grade level at time of course.
        schema:
          maxLength: 306
          type: string
      - name: methodCreditEarnedDescriptor
        in: query
        description: The method the credits were earned (e.g., Classroom, Examination,
          Transfer).
        schema:
          maxLength: 306
          type: string
      - name: alternativeCourseCode
        in: query
        description: The local code assigned by the school that identifies the course
          offering, the code from an external educational organization, or other
          alternate course code.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use AlternativeCourseIdentificationCode
            instead. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use AlternativeCourseIdentificationCode
          instead. Expect removal of this element in a future release.
      - name: alternativeCourseTitle
        in: query
        description: The descriptive name given to a course of study offered in the
          school, if different from the CourseTitle.
        schema:
          maxLength: 60
          type: string
      - name: assigningOrganizationIdentificationCode
        in: query
        description: The organization code or name assigning the course identification
          code.
        schema:
          maxLength: 60
          type: string
      - name: attemptedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: attemptedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: courseCatalogURL
        in: query
        description: The URL for the course catalog that defines the course identification
          code.
        schema:
          maxLength: 255
          type: string
      - name: courseTitle
        in: query
        description: The descriptive name given to a course of study offered in a
          school or other institution or organization. In departmentalized classes
          at the elementary, secondary, and postsecondary levels (and for staff
          development activities), this refers to the name by which a course is
          identified (e.g., American History, English III). For elementary and other
          non-departmentalized classes, it refers to any portion of the instruction
          for which a grade or report is assigned (e.g., reading, composition, spelling,
          language arts).
        schema:
          maxLength: 60
          type: string
      - name: earnedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: earnedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: externalEducationOrganizationNameOfInstitution
        in: query
        description: Name of the external institution where the student completed
          the course; to be used only when the reference ExternalEducationOrganization
          is not available.
        schema:
          maxLength: 75
          type: string
      - name: finalLetterGradeEarned
        in: query
        description: The final indicator of student performance in a class as submitted
          by the instructor.
        schema:
          maxLength: 20
          type: string
      - name: finalNumericGradeEarned
        in: query
        description: The final indicator of student performance in a class as submitted
          by the instructor.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_courseTranscript"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - courseTranscripts
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCourseTranscript
      requestBody:
        description: The JSON representation of the "courseTranscript" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_courseTranscript"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/courseTranscripts/{id}:
    get:
      tags:
      - courseTranscripts
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCourseTranscriptsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_courseTranscript"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - courseTranscripts
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCourseTranscript
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "courseTranscript" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_courseTranscript"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - courseTranscripts
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCourseTranscriptById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/credentials:
    get:
      tags:
      - credentials
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getCredentials
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: stateOfIssueStateAbbreviationDescriptor
        in: query
        description: The abbreviation for the name of the state (within the United
          States) or extra-state jurisdiction in which a license/credential was issued.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: credentialIdentifier
        in: query
        description: Identifier or serial number assigned to the credential.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: credentialFieldDescriptor
        in: query
        description: The field of certification for the certificate (e.g., Mathematics,
          Music).
        schema:
          maxLength: 306
          type: string
      - name: credentialTypeDescriptor
        in: query
        description: An indication of the category of credential an individual holds.
        schema:
          maxLength: 306
          type: string
      - name: teachingCredentialBasisDescriptor
        in: query
        description: An indication of the pre-determined criteria for granting the
          teaching credential that an individual holds.
        schema:
          maxLength: 306
          type: string
      - name: teachingCredentialDescriptor
        in: query
        description: An indication of the category of a legal document giving authorization
          to perform teaching assignment services.
        schema:
          maxLength: 306
          type: string
      - name: effectiveDate
        in: query
        description: The year, month and day on which an active credential held by
          an individual was issued.
        schema:
          type: string
          format: date
      - name: expirationDate
        in: query
        description: The month, day, and year on which an active credential held
          by an individual will expire.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: issuanceDate
        in: query
        description: The month, day, and year on which an active credential was issued
          to an individual.
        schema:
          type: string
          format: date
      - name: namespace
        in: query
        description: Namespace for the Credential.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_credential"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - credentials
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postCredential
      requestBody:
        description: The JSON representation of the "credential" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_credential"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/credentials/{id}:
    get:
      tags:
      - credentials
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getCredentialsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_credential"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - credentials
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putCredential
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "credential" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_credential"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - credentials
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteCredentialById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/disciplineActions:
    get:
      tags:
      - disciplineActions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getDisciplineActions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: disciplineActionIdentifier
        in: query
        description: Identifier assigned by the education organization to the DisciplineAction.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: disciplineDate
        in: query
        description: The date of the DisciplineAction.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: responsibilitySchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
      - name: assignmentSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
      - name: disciplineActionLengthDifferenceReasonDescriptor
        in: query
        description: Indicates the reason for the difference, if any, between the
          official and actual lengths of a student's disciplinary assignment.
        schema:
          maxLength: 306
          type: string
      - name: actualDisciplineActionLength
        in: query
        description: Indicates the actual length in school days of a student's disciplinary
          assignment.
        schema:
          type: number
          format: double
      - name: disciplineActionLength
        in: query
        description: The length of time in school days for the DisciplineAction (e.g.
          removal, detention), if applicable.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: iepPlacementMeetingIndicator
        in: query
        description: An indication as to whether an offense and/or disciplinary action
          resulted in a meeting of a student's Individualized Education Program (IEP)
          team to determine appropriate placement.
        schema:
          type: boolean
      - name: receivedEducationServicesDuringExpulsion
        in: query
        description: An indication of whether the student received educational services
          when removed from the regular school program for disciplinary reasons.
        schema:
          type: boolean
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use the
            Discipline descriptor value "Explusion with Services" instead. Expect
            removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use the Discipline
          descriptor value "Explusion with Services" instead. Expect removal of this
          element in a future release.
      - name: relatedToZeroTolerancePolicy
        in: query
        description: An indication of whether or not this disciplinary action taken
          against a student was imposed as a consequence of state or local zero tolerance
          policies.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_disciplineAction"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - disciplineActions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postDisciplineAction
      requestBody:
        description: The JSON representation of the "disciplineAction" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_disciplineAction"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/disciplineActions/{id}:
    get:
      tags:
      - disciplineActions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getDisciplineActionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_disciplineAction"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - disciplineActions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putDisciplineAction
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "disciplineAction" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_disciplineAction"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - disciplineActions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteDisciplineActionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/disciplineIncidents:
    get:
      tags:
      - disciplineIncidents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getDisciplineIncidents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: incidentIdentifier
        in: query
        description: A locally assigned unique identifier (within the school or school
          district) to identify each specific DisciplineIncident or occurrence. The
          same identifier should be used to document the entire DisciplineIncident
          even if it included multiple offenses and multiple offenders.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
      - name: incidentLocationDescriptor
        in: query
        description: "Identifies where the DisciplineIncident occurred and whether\
          \ or not it occurred on school, for example:        On school Administrative\
          \ offices area        Cafeteria area Classroom        Hallway or stairs\
          \        ..."
        schema:
          maxLength: 306
          type: string
      - name: reporterDescriptionDescriptor
        in: query
        description: "Information on the type of individual who reported the DisciplineIncident.\
          \ When known and/or if useful, use a more specific option code (e.g., \
          \ Counselor\" rather than \"Professional Staff\"); for example:        Student\
          \        Parent/guardian        Law enforcement officer        Nonschool\
          \ personnel        Representative of visiting school        ..."
        schema:
          maxLength: 306
          type: string
      - name: caseNumber
        in: query
        description: The case number assigned to the DisciplineIncident by law enforcement
          or other organization.
        schema:
          maxLength: 20
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: incidentCost
        in: query
        description: The value of any quantifiable monetary loss directly resulting
          from the DisciplineIncident. Examples include the value of repairs necessitated
          by vandalism of a school facility, or the value of personnel resources
          used for repairs or consumed by the incident.
        schema:
          type: number
          format: double
      - name: incidentDate
        in: query
        description: The month, day, and year on which the DisciplineIncident occurred.
        schema:
          type: string
          format: date
      - name: incidentDescription
        in: query
        description: The description for an incident.
        schema:
          maxLength: 1024
          type: string
      - name: incidentTime
        in: query
        description: An indication of the time of day the incident took place.
        schema:
          type: string
      - name: reportedToLawEnforcement
        in: query
        description: Indicator of whether the incident was reported to law enforcement.
        schema:
          type: boolean
      - name: reporterName
        in: query
        description: Identifies the reporter of the DisciplineIncident by name.
        schema:
          maxLength: 75
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_disciplineIncident"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - disciplineIncidents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postDisciplineIncident
      requestBody:
        description: The JSON representation of the "disciplineIncident" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_disciplineIncident"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/disciplineIncidents/{id}:
    get:
      tags:
      - disciplineIncidents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getDisciplineIncidentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_disciplineIncident"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - disciplineIncidents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putDisciplineIncident
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "disciplineIncident" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_disciplineIncident"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - disciplineIncidents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteDisciplineIncidentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationContents:
    get:
      tags:
      - educationContents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationContents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: contentIdentifier
        in: query
        description: A unique identifier for the EducationContent.
        schema:
          maxLength: 225
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: learningStandardId
        in: query
        description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
      - name: contentClassDescriptor
        in: query
        description: The predominate type or kind characterizing the learning resource.
        schema:
          maxLength: 306
          type: string
      - name: costRateDescriptor
        in: query
        description: The rate by which the cost applies.
        schema:
          maxLength: 306
          type: string
      - name: interactivityStyleDescriptor
        in: query
        description: The predominate mode of learning supported by the learning resource.
          Acceptable values are active, expositive, or mixed.
        schema:
          maxLength: 306
          type: string
      - name: additionalAuthorsIndicator
        in: query
        description: Indicates whether there are additional un-named authors. In
          a research report, this is often marked by the abbreviation \"et al\".
        schema:
          type: boolean
      - name: cost
        in: query
        description: An amount that has to be paid or spent to buy or obtain the EducationContent.
        schema:
          type: number
          format: double
      - name: description
        in: query
        description: An extended written representation of the education content.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: learningResourceMetadataURI
        in: query
        description: The URI (typical a URL) pointing to the metadata entry in a
          LRMI metadata repository, which describes this content item.
        schema:
          maxLength: 255
          type: string
      - name: namespace
        in: query
        description: Namespace for the EducationContent.
        schema:
          maxLength: 255
          type: string
      - name: publicationDate
        in: query
        description: The date on which this content was first published.
        schema:
          type: string
          format: date
      - name: publicationYear
        in: query
        description: The year at which this content was first published.
        schema:
          type: integer
          format: int32
      - name: publisher
        in: query
        description: The organization credited with publishing the resource.
        schema:
          maxLength: 50
          type: string
      - name: shortDescription
        in: query
        description: A short description or name of the entity.
        schema:
          maxLength: 75
          type: string
      - name: timeRequired
        in: query
        description: Approximate or typical time it takes to work with or through
          this learning resource for the typical intended target audience.
        schema:
          maxLength: 30
          type: string
      - name: useRightsURL
        in: query
        description: The URL where the owner specifies permissions for using the resource.
        schema:
          maxLength: 255
          type: string
      - name: version
        in: query
        description: The version identifier for the content.
        schema:
          maxLength: 10
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationContent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationContents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationContent
      requestBody:
        description: The JSON representation of the "educationContent" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationContent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationContents/{id}:
    get:
      tags:
      - educationContents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationContentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationContent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationContents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationContent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationContent" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationContent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationContents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationContentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationInterventionPrescriptionAssociations:
    get:
      tags:
      - educationOrganizationInterventionPrescriptionAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationOrganizationInterventionPrescriptionAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: interventionPrescriptionEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: interventionPrescriptionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention
          prescription.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: The begin date of the period during which the InterventionPrescription
          is available.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: The end date of the period during which the InterventionPrescription
          is available.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationOrganizationInterventionPrescriptionAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationOrganizationInterventionPrescriptionAssociation
      requestBody:
        description: The JSON representation of the "educationOrganizationInterventionPrescriptionAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationInterventionPrescriptionAssociations/{id}:
    get:
      tags:
      - educationOrganizationInterventionPrescriptionAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationOrganizationInterventionPrescriptionAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationOrganizationInterventionPrescriptionAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationOrganizationInterventionPrescriptionAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationOrganizationInterventionPrescriptionAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationInterventionPrescriptionAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationOrganizationInterventionPrescriptionAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationOrganizationInterventionPrescriptionAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationNetworks:
    get:
      tags:
      - educationOrganizationNetworks
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationOrganizationNetworks
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationNetworkId
        in: query
        description: The identifier assigned to a network of education organizations.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: networkPurposeDescriptor
        in: query
        description: The purpose(s) of the network (e.g., shared services, collective
          procurement).
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationOrganizationNetwork"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationOrganizationNetworks
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationOrganizationNetwork
      requestBody:
        description: The JSON representation of the "educationOrganizationNetwork
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationNetwork"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationNetworks/{id}:
    get:
      tags:
      - educationOrganizationNetworks
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationOrganizationNetworksById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationOrganizationNetwork"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationOrganizationNetworks
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationOrganizationNetwork
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationOrganizationNetwork
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationNetwork"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationOrganizationNetworks
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationOrganizationNetworkById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationNetworkAssociations:
    get:
      tags:
      - educationOrganizationNetworkAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationOrganizationNetworkAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: memberEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationNetworkId
        in: query
        description: The identifier assigned to a network of education organizations.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: The date on which the EducationOrganization joined this network.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: The date on which the EducationOrganization left this network.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationOrganizationNetworkAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationOrganizationNetworkAssociation
      requestBody:
        description: The JSON representation of the "educationOrganizationNetworkAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationNetworkAssociations/{id}:
    get:
      tags:
      - educationOrganizationNetworkAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationOrganizationNetworkAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationOrganizationNetworkAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationOrganizationNetworkAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationOrganizationNetworkAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationNetworkAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationOrganizationNetworkAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationOrganizationNetworkAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationPeerAssociations:
    get:
      tags:
      - educationOrganizationPeerAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationOrganizationPeerAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: peerEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationOrganizationPeerAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationOrganizationPeerAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationOrganizationPeerAssociation
      requestBody:
        description: The JSON representation of the "educationOrganizationPeerAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationPeerAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationOrganizationPeerAssociations/{id}:
    get:
      tags:
      - educationOrganizationPeerAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationOrganizationPeerAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationOrganizationPeerAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationOrganizationPeerAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationOrganizationPeerAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationOrganizationPeerAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationOrganizationPeerAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationOrganizationPeerAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationOrganizationPeerAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationServiceCenters:
    get:
      tags:
      - educationServiceCenters
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducationServiceCenters
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationServiceCenterId
        in: query
        description: The identifier assigned to an education service center.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: stateEducationAgencyId
        in: query
        description: The identifier assigned to a state education agency.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_educationServiceCenter"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educationServiceCenters
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducationServiceCenter
      requestBody:
        description: The JSON representation of the "educationServiceCenter" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationServiceCenter"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/educationServiceCenters/{id}:
    get:
      tags:
      - educationServiceCenters
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducationServiceCentersById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_educationServiceCenter"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educationServiceCenters
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducationServiceCenter
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educationServiceCenter" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_educationServiceCenter"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educationServiceCenters
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducationServiceCenterById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/educatorPreparationPrograms:
    get:
      tags:
      - educatorPreparationPrograms
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEducatorPreparationPrograms
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The name of the Educator Preparation Program.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accreditationStatusDescriptor
        in: query
        description: The current accreditation status of the Educator Preparation
          Program.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: programId
        in: query
        description: A unique number or alphanumeric code assigned to a program by
          a school, school system, a state, or other agency or entity.
        schema:
          maxLength: 20
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_educatorPreparationProgram"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - educatorPreparationPrograms
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEducatorPreparationProgram
      requestBody:
        description: The JSON representation of the "educatorPreparationProgram" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_educatorPreparationProgram"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/educatorPreparationPrograms/{id}:
    get:
      tags:
      - educatorPreparationPrograms
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEducatorPreparationProgramsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_educatorPreparationProgram"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - educatorPreparationPrograms
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEducatorPreparationProgram
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "educatorPreparationProgram" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_educatorPreparationProgram"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - educatorPreparationPrograms
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEducatorPreparationProgramById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluations:
    get:
      tags:
      - evaluations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTypeDescriptor
        in: query
        description: The type of the evaluation (e.g., observation, principal, peer,
          student survey, student growth).
        schema:
          maxLength: 306
          type: string
      - name: evaluationDescription
        in: query
        description: The long description of the Evaluation.
        schema:
          maxLength: 255
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: interRaterReliabilityScore
        in: query
        description: A score indicating how much homogeneity, or consensus, there
          is in the ratings given by judges. Most commonly a percentage scale (1-100)
        schema:
          type: integer
          format: int32
      - name: maxRating
        in: query
        description: The maximum summary numerical rating or score for the evaluation.
        schema:
          type: number
          format: double
      - name: minRating
        in: query
        description: The minimum summary numerical rating or score for the evaluation.
          If omitted, assumed to be 0.0.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluation
      requestBody:
        description: The JSON representation of the "evaluation" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluations/{id}:
    get:
      tags:
      - evaluations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluation" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationElements:
    get:
      tags:
      - evaluationElements
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluationElements
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: evaluationElementTitle
        in: query
        description: The name or title of the evaluation element.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationObjectiveTitle
        in: query
        description: The name or title of the evaluation Objective.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTypeDescriptor
        in: query
        description: The type of the evaluation (e.g., observation, principal, peer,
          student survey, student growth).
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: maxRating
        in: query
        description: The maximum summary numerical rating or score for the evaluation
          element.
        schema:
          type: number
          format: double
      - name: minRating
        in: query
        description: The minimum summary numerical rating or score for the evaluation
          element. If omitted, assumed to be 0.0.
        schema:
          type: number
          format: double
      - name: sortOrder
        in: query
        description: The sort order of this Evaluation Element.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluationElement"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluationElements
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluationElement
      requestBody:
        description: The JSON representation of the "evaluationElement" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationElement"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationElements/{id}:
    get:
      tags:
      - evaluationElements
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationElementsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluationElement"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluationElements
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluationElement
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluationElement" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationElement"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluationElements
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationElementById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationElementRatings:
    get:
      tags:
      - evaluationElementRatings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluationElementRatings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationElementTitle
        in: query
        description: The name or title of the evaluation element.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationObjectiveTitle
        in: query
        description: The name or title of the evaluation Objective.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationDate
        in: query
        description: The date for the person's evaluation.
        schema:
          type: string
          format: date-time
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationElementRatingLevelDescriptor
        in: query
        description: The rating level achieved based upon the rating or score.
        schema:
          maxLength: 306
          type: string
      - name: areaOfRefinement
        in: query
        description: Area identified for person to refine or improve as part of the
          evaluation.
        schema:
          maxLength: 1024
          type: string
      - name: areaOfReinforcement
        in: query
        description: Area identified for reinforcement or positive feedback as part
          of the evaluation.
        schema:
          maxLength: 1024
          type: string
      - name: comments
        in: query
        description: Any comments about the performance evaluation to be captured.
        schema:
          maxLength: 1024
          type: string
      - name: feedback
        in: query
        description: Feedback provided to the evaluated person.
        schema:
          maxLength: 2048
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluationElementRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluationElementRatings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluationElementRating
      requestBody:
        description: The JSON representation of the "evaluationElementRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationElementRating"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationElementRatings/{id}:
    get:
      tags:
      - evaluationElementRatings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationElementRatingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluationElementRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluationElementRatings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluationElementRating
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluationElementRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationElementRating"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluationElementRatings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationElementRatingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationObjectives:
    get:
      tags:
      - evaluationObjectives
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluationObjectives
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: evaluationObjectiveTitle
        in: query
        description: The name or title of the evaluation Objective.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTypeDescriptor
        in: query
        description: The type of the evaluation Objective (e.g., observation, principal,
          peer, student survey, student growth).
        schema:
          maxLength: 306
          type: string
      - name: evaluationObjectiveDescription
        in: query
        description: The long description of the Evaluation Objective.
        schema:
          maxLength: 255
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: maxRating
        in: query
        description: The maximum summary numerical rating or score for the evaluation
          Objective.
        schema:
          type: number
          format: double
      - name: minRating
        in: query
        description: The minimum summary numerical rating or score for the evaluation
          Objective. If omitted, assumed to be 0.0.
        schema:
          type: number
          format: double
      - name: sortOrder
        in: query
        description: The sort order of this Evaluation Objective.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluationObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluationObjectives
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluationObjective
      requestBody:
        description: The JSON representation of the "evaluationObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationObjective"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationObjectives/{id}:
    get:
      tags:
      - evaluationObjectives
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationObjectivesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluationObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluationObjectives
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluationObjective
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluationObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationObjective"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluationObjectives
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationObjectiveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationObjectiveRatings:
    get:
      tags:
      - evaluationObjectiveRatings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluationObjectiveRatings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationObjectiveTitle
        in: query
        description: The name or title of the evaluation Objective.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationDate
        in: query
        description: The date for the person's evaluation.
        schema:
          type: string
          format: date-time
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: objectiveRatingLevelDescriptor
        in: query
        description: The rating level achieved based upon the rating or score.
        schema:
          maxLength: 306
          type: string
      - name: comments
        in: query
        description: Any comments about the performance evaluation to be captured.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluationObjectiveRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluationObjectiveRatings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluationObjectiveRating
      requestBody:
        description: The JSON representation of the "evaluationObjectiveRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationObjectiveRating"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationObjectiveRatings/{id}:
    get:
      tags:
      - evaluationObjectiveRatings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationObjectiveRatingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluationObjectiveRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluationObjectiveRatings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluationObjectiveRating
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluationObjectiveRating" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationObjectiveRating"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluationObjectiveRatings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationObjectiveRatingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationRatings:
    get:
      tags:
      - evaluationRatings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getEvaluationRatings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: evaluationDate
        in: query
        description: The date for the person's evaluation.
        schema:
          type: string
          format: date-time
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
      - name: evaluationRatingLevelDescriptor
        in: query
        description: The rating level achieved based upon the rating or score.
        schema:
          maxLength: 306
          type: string
      - name: evaluationRatingStatusDescriptor
        in: query
        description: The Status of the poerformance evaluation.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_evaluationRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - evaluationRatings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postEvaluationRating
      requestBody:
        description: The JSON representation of the "evaluationRating" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationRating"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/evaluationRatings/{id}:
    get:
      tags:
      - evaluationRatings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getEvaluationRatingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_evaluationRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - evaluationRatings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putEvaluationRating
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "evaluationRating" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_evaluationRating"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - evaluationRatings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteEvaluationRatingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/feederSchoolAssociations:
    get:
      tags:
      - feederSchoolAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getFeederSchoolAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The month, day, and year of the first day of the feeder school
          association.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: feederSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: The month, day, and year of the last day of the feeder school
          association.
        schema:
          type: string
          format: date
      - name: feederRelationshipDescription
        in: query
        description: Describes the relationship from the feeder school to the receiving
          school, for example by program emphasis, such as special education, language
          immersion, science, or performing art.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_feederSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - feederSchoolAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postFeederSchoolAssociation
      requestBody:
        description: The JSON representation of the "feederSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_feederSchoolAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/feederSchoolAssociations/{id}:
    get:
      tags:
      - feederSchoolAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getFeederSchoolAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_feederSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - feederSchoolAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putFeederSchoolAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "feederSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_feederSchoolAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - feederSchoolAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteFeederSchoolAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/financialAids:
    get:
      tags:
      - financialAids
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getFinancialAids
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: aidTypeDescriptor
        in: query
        description: The classification of financial aid awarded to a person for the
          academic term/year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: The date the award was designated.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: aidAmount
        in: query
        description: The amount of financial aid awarded to a person for the term/year.
        schema:
          type: number
          format: double
      - name: aidConditionDescription
        in: query
        description: The description of the condition (e.g., placement in a high
          need school) under which the aid was given.
        schema:
          maxLength: 1024
          type: string
      - name: endDate
        in: query
        description: The date the award was removed.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: pellGrantRecipient
        in: query
        description: Indicates a person who receives Pell Grant aid.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_financialAid"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - financialAids
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postFinancialAid
      requestBody:
        description: The JSON representation of the "financialAid" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_financialAid"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/financialAids/{id}:
    get:
      tags:
      - financialAids
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getFinancialAidsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_financialAid"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - financialAids
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putFinancialAid
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "financialAid" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_financialAid"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - financialAids
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteFinancialAidById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/grades:
    get:
      tags:
      - grades
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getGrades
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: gradeTypeDescriptor
        in: query
        description: The type of grade reported (e.g., Exam, Final, Grading Period).
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolYear
        in: query
        description: The identifier for the grading period school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: Month, day, and year of the Student's entry or assignment to
          the Section.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceBaseConversionDescriptor
        in: query
        description: A conversion of the level to a standard set of performance levels.
        schema:
          maxLength: 306
          type: string
      - name: diagnosticStatement
        in: query
        description: A statement provided by the teacher that provides information
          in addition to the grade or assessment score.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: letterGradeEarned
        in: query
        description: A final or interim (grading period) indicator of student performance
          in a class as submitted by the instructor.
        schema:
          maxLength: 20
          type: string
      - name: numericGradeEarned
        in: query
        description: A final or interim (grading period) indicator of student performance
          in a class as submitted by the instructor.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_grade"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - grades
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postGrade
      requestBody:
        description: The JSON representation of the "grade" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_grade"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/grades/{id}:
    get:
      tags:
      - grades
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getGradesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_grade"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - grades
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putGrade
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "grade" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_grade"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - grades
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteGradeById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/gradebookEntries:
    get:
      tags:
      - gradebookEntries
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getGradebookEntries
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: dateAssigned
        in: query
        description: The date the assignment, homework, or assessment was assigned
          or executed.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradebookEntryTitle
        in: query
        description: The name or title of the activity to be recorded in the GradebookEntry.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
      - name: periodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
      - name: gradebookEntryTypeDescriptor
        in: query
        description: The type of the GradebookEntry; for example, homework, assignment,
          quiz, unit test, oral presentation, etc.
        schema:
          maxLength: 306
          type: string
      - name: description
        in: query
        description: A description of the assignment, homework, or classroom assessment.
        schema:
          maxLength: 1024
          type: string
      - name: dueDate
        in: query
        description: The date the assignment, homework, or assessment is due.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_gradebookEntry"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - gradebookEntries
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postGradebookEntry
      requestBody:
        description: The JSON representation of the "gradebookEntry" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_gradebookEntry"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/gradebookEntries/{id}:
    get:
      tags:
      - gradebookEntries
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getGradebookEntriesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_gradebookEntry"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - gradebookEntries
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putGradebookEntry
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "gradebookEntry" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_gradebookEntry"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - gradebookEntries
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteGradebookEntryById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/gradingPeriods:
    get:
      tags:
      - gradingPeriods
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getGradingPeriods
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: periodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the grading period school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: Month, day, and year of the first day of the GradingPeriod.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: Month, day, and year of the last day of the GradingPeriod.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: totalInstructionalDays
        in: query
        description: Total days available for educational instruction during the GradingPeriod.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_gradingPeriod"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - gradingPeriods
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postGradingPeriod
      requestBody:
        description: The JSON representation of the "gradingPeriod" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_gradingPeriod"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/gradingPeriods/{id}:
    get:
      tags:
      - gradingPeriods
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getGradingPeriodsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_gradingPeriod"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - gradingPeriods
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putGradingPeriod
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "gradingPeriod" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_gradingPeriod"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - gradingPeriods
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteGradingPeriodById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/graduationPlans:
    get:
      tags:
      - graduationPlans
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getGraduationPlans
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: graduationPlanTypeDescriptor
        in: query
        description: "The type of academic plan the student is following for graduation:\
          \ for example, Minimum, Recommended, Distinguished, or Standard."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: graduationSchoolYear
        in: query
        description: The school year the student is expected to graduate.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: totalRequiredCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: individualPlan
        in: query
        description: An indicator of whether the GraduationPlan is tailored for an
          individual.
        schema:
          type: boolean
      - name: totalRequiredCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: totalRequiredCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_graduationPlan"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - graduationPlans
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postGraduationPlan
      requestBody:
        description: The JSON representation of the "graduationPlan" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_graduationPlan"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/graduationPlans/{id}:
    get:
      tags:
      - graduationPlans
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getGraduationPlansById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_graduationPlan"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - graduationPlans
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putGraduationPlan
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "graduationPlan" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_graduationPlan"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - graduationPlans
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteGraduationPlanById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventions:
    get:
      tags:
      - interventions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getInterventions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: interventionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: deliveryMethodDescriptor
        in: query
        description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        schema:
          maxLength: 306
          type: string
      - name: interventionClassDescriptor
        in: query
        description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        schema:
          maxLength: 306
          type: string
      - name: beginDate
        in: query
        description: The start date for the intervention implementation.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: The end date for the intervention implementation.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: maxDosage
        in: query
        description: The maximum duration of time in minutes that may be assigned
          for the intervention.
        schema:
          type: integer
          format: int32
      - name: minDosage
        in: query
        description: The minimum duration of time in minutes that may be assigned
          for the intervention.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_intervention"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - interventions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postIntervention
      requestBody:
        description: The JSON representation of the "intervention" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_intervention"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventions/{id}:
    get:
      tags:
      - interventions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getInterventionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_intervention"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - interventions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putIntervention
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "intervention" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_intervention"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - interventions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteInterventionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventionPrescriptions:
    get:
      tags:
      - interventionPrescriptions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getInterventionPrescriptions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: interventionPrescriptionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention
          prescription.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: deliveryMethodDescriptor
        in: query
        description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        schema:
          maxLength: 306
          type: string
      - name: interventionClassDescriptor
        in: query
        description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: maxDosage
        in: query
        description: The maximum duration of time in minutes that is recommended for
          the intervention.
        schema:
          type: integer
          format: int32
      - name: minDosage
        in: query
        description: The minimum duration of time in minutes that is recommended for
          the intervention.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_interventionPrescription"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - interventionPrescriptions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postInterventionPrescription
      requestBody:
        description: The JSON representation of the "interventionPrescription" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_interventionPrescription"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventionPrescriptions/{id}:
    get:
      tags:
      - interventionPrescriptions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getInterventionPrescriptionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_interventionPrescription"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - interventionPrescriptions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putInterventionPrescription
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "interventionPrescription" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_interventionPrescription"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - interventionPrescriptions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteInterventionPrescriptionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventionStudies:
    get:
      tags:
      - interventionStudies
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getInterventionStudies
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: interventionStudyIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention
          study.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: interventionPrescriptionEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: interventionPrescriptionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention
          prescription.
        schema:
          maxLength: 60
          type: string
      - name: deliveryMethodDescriptor
        in: query
        description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        schema:
          maxLength: 306
          type: string
      - name: interventionClassDescriptor
        in: query
        description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: participants
        in: query
        description: The number of participants observed in the study.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_interventionStudy"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - interventionStudies
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postInterventionStudy
      requestBody:
        description: The JSON representation of the "interventionStudy" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_interventionStudy"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/interventionStudies/{id}:
    get:
      tags:
      - interventionStudies
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getInterventionStudiesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_interventionStudy"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - interventionStudies
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putInterventionStudy
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "interventionStudy" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_interventionStudy"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - interventionStudies
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteInterventionStudyById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/learningObjectives:
    get:
      tags:
      - learningObjectives
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getLearningObjectives
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: learningObjectiveId
        in: query
        description: The identifier for the specific learning objective in the context
          of a standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the LearningObjective.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: parentLearningObjectiveId
        in: query
        description: The identifier for the specific learning objective in the context
          of a standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
      - name: parentNamespace
        in: query
        description: Namespace for the LearningObjective.
        schema:
          maxLength: 255
          type: string
      - name: description
        in: query
        description: The description of the LearningObjective.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: nomenclature
        in: query
        description: Reflects the specific nomenclature used for the LearningObjective.
        schema:
          maxLength: 35
          type: string
      - name: objective
        in: query
        description: The designated title of the LearningObjective.
        schema:
          maxLength: 60
          type: string
      - name: successCriteria
        in: query
        description: One or more statements that describes the criteria used by teachers
          and students to check for attainment of a learning objective. This criteria
          gives clear indications as to the degree to which learning is moving through
          the Zone or Proximal Development toward independent achievement of the LearningObjective.
        schema:
          maxLength: 150
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_learningObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    post:
      tags:
      - learningObjectives
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postLearningObjective
      requestBody:
        description: The JSON representation of the "learningObjective" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningObjective"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/learningObjectives/{id}:
    get:
      tags:
      - learningObjectives
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getLearningObjectivesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_learningObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    put:
      tags:
      - learningObjectives
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putLearningObjective
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "learningObjective" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningObjective"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    delete:
      tags:
      - learningObjectives
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteLearningObjectiveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/learningStandards:
    get:
      tags:
      - learningStandards
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getLearningStandards
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: learningStandardId
        in: query
        description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: parentLearningStandardId
        in: query
        description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
      - name: learningStandardCategoryDescriptor
        in: query
        description: An additional classification of the type of a specific learning
          standard.
        schema:
          maxLength: 306
          type: string
      - name: learningStandardScopeDescriptor
        in: query
        description: Signals the scope of usage the standard. Does not necessarily
          relate the standard to the governing body.
        schema:
          maxLength: 306
          type: string
      - name: courseTitle
        in: query
        description: The official Course Title with which this learning standard is
          associated.
        schema:
          maxLength: 60
          type: string
      - name: description
        in: query
        description: The text of the statement. The textual content that either describes
          a specific competency such as \"Apply the Pythagorean Theorem to determine
          unknown side lengths in right triangles in real-world and mathematical
          problems in two and three dimensions.\" or describes a less granular group
          of competencies within the taxonomy of the standards document, e.g. \
          Understand and apply the Pythagorean Theorem,\" or \"Geometry\".
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: learningStandardItemCode
        in: query
        description: A code designated by the promulgating body to identify the statement,
          e.g. 1.N.3 (usually not globally unique).
        schema:
          maxLength: 60
          type: string
      - name: namespace
        in: query
        description: The namespace of the organization or entity who governs the standard.
          It is recommended the namespaces observe a URI format and begin with a domain
          name under the governing organization or entity control.
        schema:
          maxLength: 255
          type: string
      - name: successCriteria
        in: query
        description: One or more statements that describes the criteria used by teachers
          and students to check for attainment of a learning standard. This criteria
          gives clear indications as to the degree to which learning is moving through
          the Zone or Proximal Development toward independent achievement of the LearningStandard.
        schema:
          maxLength: 150
          type: string
      - name: uri
        in: query
        description: An unambiguous reference to the statement using a network-resolvable
          URI.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_learningStandard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - learningStandards
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postLearningStandard
      requestBody:
        description: The JSON representation of the "learningStandard" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningStandard"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/learningStandards/{id}:
    get:
      tags:
      - learningStandards
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getLearningStandardsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_learningStandard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - learningStandards
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putLearningStandard
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "learningStandard" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningStandard"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - learningStandards
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteLearningStandardById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/learningStandardEquivalenceAssociations:
    get:
      tags:
      - learningStandardEquivalenceAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getLearningStandardEquivalenceAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: namespace
        in: query
        description: The namespace of the organization that has created and owns the
          association.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceLearningStandardId
        in: query
        description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: targetLearningStandardId
        in: query
        description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: learningStandardEquivalenceStrengthDescriptor
        in: query
        description: A measure that indicates the strength or quality of the equivalence
          relationship.
        schema:
          maxLength: 306
          type: string
      - name: effectiveDate
        in: query
        description: The date that the association is considered to be applicable
          or effective.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: learningStandardEquivalenceStrengthDescription
        in: query
        description: Captures supplemental information on the relationship. Recommended
          for use only when the match is  partial.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - learningStandardEquivalenceAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postLearningStandardEquivalenceAssociation
      requestBody:
        description: The JSON representation of the "learningStandardEquivalenceAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/learningStandardEquivalenceAssociations/{id}:
    get:
      tags:
      - learningStandardEquivalenceAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getLearningStandardEquivalenceAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - learningStandardEquivalenceAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putLearningStandardEquivalenceAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "learningStandardEquivalenceAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_learningStandardEquivalenceAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - learningStandardEquivalenceAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteLearningStandardEquivalenceAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/localEducationAgencies:
    get:
      tags:
      - localEducationAgencies
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getLocalEducationAgencies
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: localEducationAgencyId
        in: query
        description: The identifier assigned to a local education agency.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationServiceCenterId
        in: query
        description: The identifier assigned to an education service center.
        schema:
          type: integer
          format: int32
      - name: parentLocalEducationAgencyId
        in: query
        description: The identifier assigned to a local education agency.
        schema:
          type: integer
          format: int32
      - name: stateEducationAgencyId
        in: query
        description: The identifier assigned to a state education agency.
        schema:
          type: integer
          format: int32
      - name: charterStatusDescriptor
        in: query
        description: A school or agency providing free public elementary or secondary
          education to eligible students under a specific charter granted by the state
          legislature or other appropriate authority and designated by such authority
          to be a charter school.
        schema:
          maxLength: 306
          type: string
      - name: localEducationAgencyCategoryDescriptor
        in: query
        description: "The category of local education agency/district. For example:\
          \ Independent or Charter."
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_localEducationAgency"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - localEducationAgencies
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postLocalEducationAgency
      requestBody:
        description: The JSON representation of the "localEducationAgency" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_localEducationAgency"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/localEducationAgencies/{id}:
    get:
      tags:
      - localEducationAgencies
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getLocalEducationAgenciesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_localEducationAgency"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - localEducationAgencies
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putLocalEducationAgency
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "localEducationAgency" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_localEducationAgency"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - localEducationAgencies
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteLocalEducationAgencyById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/locations:
    get:
      tags:
      - locations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getLocations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: classroomIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a room by a
          school, school system, state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      - name: maximumNumberOfSeats
        in: query
        description: The most number of seats the class can maintain.
        schema:
          type: integer
          format: int32
      - name: optimalNumberOfSeats
        in: query
        description: The number of seats that is most favorable to the class.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_location"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - locations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postLocation
      requestBody:
        description: The JSON representation of the "location" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_location"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/locations/{id}:
    get:
      tags:
      - locations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getLocationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_location"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - locations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putLocation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "location" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_location"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - locations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteLocationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/objectiveAssessments:
    get:
      tags:
      - objectiveAssessments
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getObjectiveAssessments
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: identificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a space, room,
          site, building, individual, organization, program, or institution by a
          school, school system, a state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: assessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Assessment.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: parentIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a space, room,
          site, building, individual, organization, program, or institution by a
          school, school system, a state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
      - name: academicSubjectDescriptor
        in: query
        description: The subject area of the objective assessment.
        schema:
          maxLength: 306
          type: string
      - name: description
        in: query
        description: The description of the ObjectiveAssessment (e.g., vocabulary,
          measurement, or geometry).
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: maxRawScore
        in: query
        description: The maximum raw score achievable across all assessment items
          that are correct and scored at the maximum.
        schema:
          type: number
          format: double
      - name: nomenclature
        in: query
        description: Reflects the specific nomenclature used for this level of ObjectiveAssessment.
        schema:
          maxLength: 35
          type: string
      - name: percentOfAssessment
        in: query
        description: The percentage of the Assessment that tests this objective.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_objectiveAssessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - objectiveAssessments
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postObjectiveAssessment
      requestBody:
        description: The JSON representation of the "objectiveAssessment" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_objectiveAssessment"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/objectiveAssessments/{id}:
    get:
      tags:
      - objectiveAssessments
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getObjectiveAssessmentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_objectiveAssessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - objectiveAssessments
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putObjectiveAssessment
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "objectiveAssessment" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_objectiveAssessment"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - objectiveAssessments
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteObjectiveAssessmentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/openStaffPositions:
    get:
      tags:
      - openStaffPositions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getOpenStaffPositions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: requisitionNumber
        in: query
        description: The number or identifier assigned to an open staff position,
          typically a requisition number assigned by Human Resources.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: employmentStatusDescriptor
        in: query
        description: "Reflects the type of employment or contract desired for the\
          \ position; for example:        Probationary        Contractual Substitute/temporary\
          \        Tenured or permanent        Volunteer/no contract        ..."
        schema:
          maxLength: 306
          type: string
      - name: postingResultDescriptor
        in: query
        description: Indication of whether the OpenStaffPosition was filled or retired
          without filling.
        schema:
          maxLength: 306
          type: string
      - name: programAssignmentDescriptor
        in: query
        description: "The name of the program for which the OpenStaffPosition will\
          \ be assigned; for example:        Regular education        Title I-Academic\
          \        Title I-Non-Academic        Special Education'        Bilingual/English\
          \ as a Second Language."
        schema:
          maxLength: 306
          type: string
      - name: staffClassificationDescriptor
        in: query
        description: The titles of employment, official status, or rank of education
          staff.
        schema:
          maxLength: 306
          type: string
      - name: datePosted
        in: query
        description: Date the OpenStaffPosition was posted.
        schema:
          type: string
          format: date
      - name: datePostingRemoved
        in: query
        description: The date the posting was removed or filled.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: positionTitle
        in: query
        description: The descriptive name of an individual's position.
        schema:
          maxLength: 100
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_openStaffPosition"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - openStaffPositions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postOpenStaffPosition
      requestBody:
        description: The JSON representation of the "openStaffPosition" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_openStaffPosition"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/openStaffPositions/{id}:
    get:
      tags:
      - openStaffPositions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getOpenStaffPositionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_openStaffPosition"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - openStaffPositions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putOpenStaffPosition
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "openStaffPosition" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_openStaffPosition"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - openStaffPositions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteOpenStaffPositionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/organizationDepartments:
    get:
      tags:
      - organizationDepartments
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getOrganizationDepartments
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: organizationDepartmentId
        in: query
        description: The unique identification code for the OrganizationDepartment.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: parentEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: academicSubjectDescriptor
        in: query
        description: The intended major subject area of the department.
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_organizationDepartment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - organizationDepartments
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postOrganizationDepartment
      requestBody:
        description: The JSON representation of the "organizationDepartment" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_organizationDepartment"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/organizationDepartments/{id}:
    get:
      tags:
      - organizationDepartments
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getOrganizationDepartmentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_organizationDepartment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - organizationDepartments
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putOrganizationDepartment
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "organizationDepartment" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_organizationDepartment"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - organizationDepartments
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteOrganizationDepartmentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/parents:
    get:
      tags:
      - parents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getParents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: parentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a parent.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
      - name: highestCompletedLevelOfEducationDescriptor
        in: query
        description: The extent of formal instruction an individual has received
          (e.g., the highest grade in school completed or its equivalent or the
          highest degree received).
        schema:
          maxLength: 306
          type: string
      - name: sexDescriptor
        in: query
        description: A person's gender.
        schema:
          maxLength: 306
          type: string
      - name: firstName
        in: query
        description: A name given to an individual at birth, baptism, or during another
          naming ceremony, or through legal change.
        schema:
          maxLength: 75
          type: string
      - name: generationCodeSuffix
        in: query
        description: An appendage, if any, used to denote an individual's generation
          in his family (e.g., Jr., Sr., III).
        schema:
          maxLength: 10
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: lastSurname
        in: query
        description: The name borne in common by members of a family.
        schema:
          maxLength: 75
          type: string
      - name: loginId
        in: query
        description: The login ID for the user; used for security access control interface.
        schema:
          maxLength: 60
          type: string
      - name: maidenName
        in: query
        description: The person's maiden name.
        schema:
          maxLength: 75
          type: string
      - name: middleName
        in: query
        description: A secondary name given to an individual at birth, baptism, or
          during another naming ceremony.
        schema:
          maxLength: 75
          type: string
      - name: personalTitlePrefix
        in: query
        description: A prefix used to denote the title, degree, position, or seniority
          of the person.
        schema:
          maxLength: 30
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_parent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - parents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postParent
      requestBody:
        description: The JSON representation of the "parent" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_parent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/parents/{id}:
    get:
      tags:
      - parents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getParentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_parent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - parents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putParent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "parent" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_parent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - parents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteParentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/payrolls:
    get:
      tags:
      - payrolls
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPayrolls
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: asOfDate
        in: query
        description: The date of the reported payroll element.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: accountIdentifier
        in: query
        description: The alphanumeric string that identifies the account.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: fiscalYear
        in: query
        description: The financial accounting year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: amountToDate
        in: query
        description: Current balance (amount paid to employee) for account for the
          fiscal year.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_payroll"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - payrolls
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPayroll
      requestBody:
        description: The JSON representation of the "payroll" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_payroll"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/payrolls/{id}:
    get:
      tags:
      - payrolls
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPayrollsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_payroll"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - payrolls
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPayroll
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "payroll" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_payroll"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - payrolls
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePayrollById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/performanceEvaluations:
    get:
      tags:
      - performanceEvaluations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPerformanceEvaluations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: academicSubjectDescriptor
        in: query
        description: The description of the content or subject area of a performance
          evaluation.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: performanceEvaluationDescription
        in: query
        description: The long description of the Performance Evaluation.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_performanceEvaluation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - performanceEvaluations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPerformanceEvaluation
      requestBody:
        description: The JSON representation of the "performanceEvaluation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_performanceEvaluation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/performanceEvaluations/{id}:
    get:
      tags:
      - performanceEvaluations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPerformanceEvaluationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_performanceEvaluation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - performanceEvaluations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPerformanceEvaluation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "performanceEvaluation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_performanceEvaluation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - performanceEvaluations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePerformanceEvaluationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/performanceEvaluationRatings:
    get:
      tags:
      - performanceEvaluationRatings
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPerformanceEvaluationRatings
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: coteachingStyleObservedDescriptor
        in: query
        description: A type of co-teaching observed as part of the performance evaluation.
        schema:
          maxLength: 306
          type: string
      - name: performanceEvaluationRatingLevelDescriptor
        in: query
        description: The rating level achieved based upon the rating or score.
        schema:
          maxLength: 306
          type: string
      - name: actualDate
        in: query
        description: The month, day, and year on which the performance evaluation
          was conducted.
        schema:
          type: string
          format: date
      - name: actualDuration
        in: query
        description: The actual or estimated number of clock minutes during which
          the performance evaluation was conducted.
        schema:
          type: integer
          format: int32
      - name: actualTime
        in: query
        description: An indication of the the time at which the performance evaluation
          was conducted.
        schema:
          type: string
      - name: announced
        in: query
        description: An indicator of whether the performance evaluation was announced
          or not.
        schema:
          type: boolean
      - name: comments
        in: query
        description: Any comments about the performance evaluation to be captured.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: scheduleDate
        in: query
        description: The month, day, and year on which the performance evaluation
          was scheduled.
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_performanceEvaluationRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - performanceEvaluationRatings
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPerformanceEvaluationRating
      requestBody:
        description: The JSON representation of the "performanceEvaluationRating
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_performanceEvaluationRating"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/performanceEvaluationRatings/{id}:
    get:
      tags:
      - performanceEvaluationRatings
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPerformanceEvaluationRatingsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_performanceEvaluationRating"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - performanceEvaluationRatings
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPerformanceEvaluationRating
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "performanceEvaluationRating
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_performanceEvaluationRating"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - performanceEvaluationRatings
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePerformanceEvaluationRatingById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/people:
    get:
      tags:
      - people
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPeople
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_person"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - people
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPerson
      requestBody:
        description: The JSON representation of the "person" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_person"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/people/{id}:
    get:
      tags:
      - people
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPeopleById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_person"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - people
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPerson
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "person" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_person"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - people
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePersonById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/postSecondaryEvents:
    get:
      tags:
      - postSecondaryEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPostSecondaryEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: postSecondaryEventCategoryDescriptor
        in: query
        description: The PostSecondaryEvent that is logged (e.g., FAFSA application,
          college application, college acceptance).
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: The date the event occurred or was recorded.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: postSecondaryInstitutionId
        in: query
        description: The ID of the post secondary institution.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_postSecondaryEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - postSecondaryEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPostSecondaryEvent
      requestBody:
        description: The JSON representation of the "postSecondaryEvent" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_postSecondaryEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/postSecondaryEvents/{id}:
    get:
      tags:
      - postSecondaryEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPostSecondaryEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_postSecondaryEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - postSecondaryEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPostSecondaryEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "postSecondaryEvent" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_postSecondaryEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - postSecondaryEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePostSecondaryEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/postSecondaryInstitutions:
    get:
      tags:
      - postSecondaryInstitutions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPostSecondaryInstitutions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: postSecondaryInstitutionId
        in: query
        description: The ID of the post secondary institution.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: administrativeFundingControlDescriptor
        in: query
        description: A classification of whether a postsecondary institution is operated
          by publicly elected or appointed officials (public control) or by privately
          elected or appointed officials and derives its major source of funds from
          private sources (private control).
        schema:
          maxLength: 306
          type: string
      - name: postSecondaryInstitutionLevelDescriptor
        in: query
        description: A classification of whether a post secondary institution's highest
          level of offering is a program of 4-years or higher (4 year), 2-but-less-than
          4-years (2 year), or less than 2-years.
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_postSecondaryInstitution"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - postSecondaryInstitutions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postPostSecondaryInstitution
      requestBody:
        description: The JSON representation of the "postSecondaryInstitution" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_postSecondaryInstitution"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/postSecondaryInstitutions/{id}:
    get:
      tags:
      - postSecondaryInstitutions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getPostSecondaryInstitutionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_postSecondaryInstitution"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - postSecondaryInstitutions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putPostSecondaryInstitution
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "postSecondaryInstitution" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_postSecondaryInstitution"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - postSecondaryInstitutions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deletePostSecondaryInstitutionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/programs:
    get:
      tags:
      - programs
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getPrograms
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      - name: programId
        in: query
        description: A unique number or alphanumeric code assigned to a program by
          a school, school system, a state, or other agency or entity.
        schema:
          maxLength: 20
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_program"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - programs
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postProgram
      requestBody:
        description: The JSON representation of the "program" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_program"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/programs/{id}:
    get:
      tags:
      - programs
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getProgramsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_program"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - programs
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putProgram
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "program" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_program"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - programs
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteProgramById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/reportCards:
    get:
      tags:
      - reportCards
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getReportCards
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolYear
        in: query
        description: The identifier for the grading period school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gpaCumulative
        in: query
        description: A measure of cumulative average performance in all courses taken
          by an individual from the beginning of the school year through the current
          grading period.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
          instead, which supports capture of multiple (e.g., weighted, unweighted)
          GPAs. Expect removal of this element in a future release.
      - name: gpaGivenGradingPeriod
        in: query
        description: A measure of average performance in all courses taken by an individual
          for the current grading period.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
          instead, which supports capture of multiple (e.g., weighted, unweighted)
          GPAs. Expect removal of this element in a future release.
      - name: id
        in: query
        schema:
          type: string
      - name: numberOfDaysAbsent
        in: query
        description: The number of days an individual is absent when school is in
          session during a given reporting period.
        schema:
          type: number
          format: double
      - name: numberOfDaysInAttendance
        in: query
        description: The number of days an individual is present when school is in
          session during a given reporting period.
        schema:
          type: number
          format: double
      - name: numberOfDaysTardy
        in: query
        description: The number of days an individual is tardy during a given reporting
          period.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_reportCard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - reportCards
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postReportCard
      requestBody:
        description: The JSON representation of the "reportCard" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_reportCard"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/reportCards/{id}:
    get:
      tags:
      - reportCards
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getReportCardsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_reportCard"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - reportCards
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putReportCard
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "reportCard" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_reportCard"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - reportCards
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteReportCardById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/restraintEvents:
    get:
      tags:
      - restraintEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getRestraintEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: restraintEventIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to a restraint
          event by a school, school system, state, or other agency or entity.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationalEnvironmentDescriptor
        in: query
        description: The setting where the RestraintEvent was exercised.
        schema:
          maxLength: 306
          type: string
      - name: eventDate
        in: query
        description: Month, day, and year of the RestraintEvent.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_restraintEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - restraintEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postRestraintEvent
      requestBody:
        description: The JSON representation of the "restraintEvent" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_restraintEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/restraintEvents/{id}:
    get:
      tags:
      - restraintEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getRestraintEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_restraintEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - restraintEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putRestraintEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "restraintEvent" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_restraintEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - restraintEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteRestraintEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/rubricDimensions:
    get:
      tags:
      - rubricDimensions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getRubricDimensions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: rubricRating
        in: query
        description: The rating achieved for the rubric dimension.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationElementTitle
        in: query
        description: The name or title of the evaluation element.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationObjectiveTitle
        in: query
        description: The name or title of the evaluation Objective.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationPeriodDescriptor
        in: query
        description: The period for the evaluation.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: evaluationTitle
        in: query
        description: The name or title of the evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTitle
        in: query
        description: An assigned unique identifier for the performance evaluation.
        schema:
          maxLength: 50
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: performanceEvaluationTypeDescriptor
        in: query
        description: The type of performance evaluation conducted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: rubricRatingLevelDescriptor
        in: query
        description: The rating level achieved for the rubric dimension.
        schema:
          maxLength: 306
          type: string
      - name: criterionDescription
        in: query
        description: The criterion description for the rubric dimension.
        schema:
          maxLength: 1024
          type: string
      - name: dimensionOrder
        in: query
        description: The order for the rubric dimension.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_rubricDimension"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - rubricDimensions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postRubricDimension
      requestBody:
        description: The JSON representation of the "rubricDimension" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_rubricDimension"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/rubricDimensions/{id}:
    get:
      tags:
      - rubricDimensions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getRubricDimensionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_rubricDimension"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - rubricDimensions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putRubricDimension
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "rubricDimension" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_rubricDimension"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - rubricDimensions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteRubricDimensionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/schools:
    get:
      tags:
      - schools
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSchools
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localEducationAgencyId
        in: query
        description: The identifier assigned to a local education agency.
        schema:
          type: integer
          format: int32
      - name: charterApprovalSchoolYear
        in: query
        description: The school year in which a charter school was initially approved.
        schema:
          type: integer
          format: int32
      - name: administrativeFundingControlDescriptor
        in: query
        description: The type of education institution as classified by its funding
          source, for example public or private.
        schema:
          maxLength: 306
          type: string
      - name: charterApprovalAgencyTypeDescriptor
        in: query
        description: The type of agency that approved the establishment or continuation
          of a charter school.
        schema:
          maxLength: 306
          type: string
      - name: charterStatusDescriptor
        in: query
        description: A school or agency providing free public elementary or secondary
          education to eligible students under a specific charter granted by the state
          legislature or other appropriate authority and designated by such authority
          to be a charter school.
        schema:
          maxLength: 306
          type: string
      - name: internetAccessDescriptor
        in: query
        description: The type of Internet access available.
        schema:
          maxLength: 306
          type: string
      - name: magnetSpecialProgramEmphasisSchoolDescriptor
        in: query
        description: "A school that has been designed: 1) to attract students of different\
          \ racial/ethnic backgrounds for the purpose of reducing, preventing, or\
          \ eliminating racial isolation; and/or 2) to provide an academic or social\
          \ focus on a particular theme (e.g., science/math, performing arts, gifted/talented,\
          \ or foreign language)."
        schema:
          maxLength: 306
          type: string
      - name: schoolTypeDescriptor
        in: query
        description: The type of education institution as classified by its primary
          focus.
        schema:
          maxLength: 306
          type: string
      - name: titleIPartASchoolDesignationDescriptor
        in: query
        description: Denotes the Title I Part A designation for the school.
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_school"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - schools
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSchool
      requestBody:
        description: The JSON representation of the "school" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_school"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/schools/{id}:
    get:
      tags:
      - schools
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSchoolsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_school"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - schools
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSchool
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "school" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_school"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - schools
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSchoolById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/schoolYearTypes:
    get:
      tags:
      - schoolYearTypes
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSchoolYearTypes
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: schoolYear
        in: query
        description: Key for School Year
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: currentSchoolYear
        in: query
        description: The code for the current school year.
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: schoolYearDescription
        in: query
        description: The description for the SchoolYear type.
        schema:
          maxLength: 50
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_schoolYearType"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - schoolYearTypes
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSchoolYearType
      requestBody:
        description: The JSON representation of the "schoolYearType" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_schoolYearType"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/schoolYearTypes/{id}:
    get:
      tags:
      - schoolYearTypes
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSchoolYearTypesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_schoolYearType"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - schoolYearTypes
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSchoolYearType
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "schoolYearType" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_schoolYearType"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - schoolYearTypes
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSchoolYearTypeById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sections:
    get:
      tags:
      - sections
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSections
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: locationClassroomIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to a room by a
          school, school system, state, or other agency or entity.
        schema:
          maxLength: 60
          type: string
      - name: locationSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
      - name: availableCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: educationalEnvironmentDescriptor
        in: query
        description: "The setting in which a child receives education and related\
          \ services; for example:        Center-based instruction Home-based instruction\
          \        Hospital class Mainstream        Residential care and treatment\
          \ facility        ..."
        schema:
          maxLength: 306
          type: string
      - name: instructionLanguageDescriptor
        in: query
        description: The primary language of instruction, if omitted English is assumed.
        schema:
          maxLength: 306
          type: string
      - name: mediumOfInstructionDescriptor
        in: query
        description: "The media through which teachers provide instruction to students\
          \ and students and teachers communicate about instructional matters; for\
          \ example:        Technology-based instruction in classroom Correspondence\
          \ instruction        Face-to-face instruction Virtual/On-line Distance learning\
          \        Center-based instruction        ..."
        schema:
          maxLength: 306
          type: string
      - name: populationServedDescriptor
        in: query
        description: "The type of students the Section is offered and tailored to;\
          \ for example:        Bilingual students        Remedial education students\
          \        Gifted and talented students        Career and Technical Education\
          \ students        Special education students        ..."
        schema:
          maxLength: 306
          type: string
      - name: availableCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: availableCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: officialAttendancePeriod
        in: query
        description: Indicator of whether this section is used for official daily
          attendance. Alternatively, official daily attendance may be tied to a
          Class Period.
        schema:
          type: boolean
      - name: sectionName
        in: query
        description: A locally-defined name for the section, generally created to
          make the section more recognizable in informal contexts and generally
          distinct from the SectionIdentifier.
        schema:
          maxLength: 100
          type: string
      - name: sequenceOfCourse
        in: query
        description: When a section is part of a sequence of parts for a course,
          the number of the sequence. If the course has only one part, the value
          of this section attribute should be 1.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_section"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - sections
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSection
      requestBody:
        description: The JSON representation of the "section" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_section"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sections/{id}:
    get:
      tags:
      - sections
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSectionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_section"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - sections
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putSection
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "section" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_section"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - sections
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSectionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sectionAttendanceTakenEvents:
    get:
      tags:
      - sectionAttendanceTakenEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSectionAttendanceTakenEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: calendarCode
        in: query
        description: The identifier for the Calendar.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: date
        in: query
        description: The month, day, and year of the CalendarEvent.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
      - name: eventDate
        in: query
        description: The date the SectionAttendanceTakenEvent was submitted, which
          could be a different date than the instructional day.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_sectionAttendanceTakenEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - sectionAttendanceTakenEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSectionAttendanceTakenEvent
      requestBody:
        description: The JSON representation of the "sectionAttendanceTakenEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_sectionAttendanceTakenEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sectionAttendanceTakenEvents/{id}:
    get:
      tags:
      - sectionAttendanceTakenEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSectionAttendanceTakenEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_sectionAttendanceTakenEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - sectionAttendanceTakenEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSectionAttendanceTakenEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "sectionAttendanceTakenEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_sectionAttendanceTakenEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - sectionAttendanceTakenEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSectionAttendanceTakenEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sessions:
    get:
      tags:
      - sessions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSessions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: termDescriptor
        in: query
        description: An descriptor value indicating the term (e.g. 'Semester', 'Quarter',
          etc.).
        schema:
          maxLength: 306
          type: string
      - name: beginDate
        in: query
        description: Month, day, and year of the first day of the Session.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: Month, day and year of the last day of the Session.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: totalInstructionalDays
        in: query
        description: The total number of instructional days in the school calendar.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_session"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - sessions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSession
      requestBody:
        description: The JSON representation of the "session" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_session"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/sessions/{id}:
    get:
      tags:
      - sessions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSessionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_session"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - sessions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putSession
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "session" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_session"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - sessions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSessionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffs:
    get:
      tags:
      - staffs
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffs
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
      - name: citizenshipStatusDescriptor
        in: query
        description: An indicator of whether or not the person is a U.S. citizen.
        schema:
          maxLength: 306
          type: string
      - name: highestCompletedLevelOfEducationDescriptor
        in: query
        description: The extent of formal instruction an individual has received
          (e.g., the highest grade in school completed or its equivalent or the
          highest degree received).
        schema:
          maxLength: 306
          type: string
      - name: oldEthnicityDescriptor
        in: query
        description: "Previous definition of Ethnicity combining Hispanic/Latino and\
          \ race:        1 - American Indian or Alaskan Native        2 - Asian or
          \ Pacific Islander        3 - Black, not of Hispanic origin 4 - Hispanic
          \        5 - White, not of Hispanic origin."
        schema:
          maxLength: 306
          type: string
      - name: sexDescriptor
        in: query
        description: A person's gender.
        schema:
          maxLength: 306
          type: string
      - name: birthDate
        in: query
        description: The month, day, and year on which an individual was born.
        schema:
          type: string
          format: date
      - name: firstName
        in: query
        description: A name given to an individual at birth, baptism, or during another
          naming ceremony, or through legal change.
        schema:
          maxLength: 75
          type: string
      - name: generationCodeSuffix
        in: query
        description: An appendage, if any, used to denote an individual's generation
          in his family (e.g., Jr., Sr., III).
        schema:
          maxLength: 10
          type: string
      - name: highlyQualifiedTeacher
        in: query
        description: An indication of whether a teacher is classified as highly qualified
          for his/her assignment according to state definition. This attribute indicates
          the teacher is highly qualified for ALL Sections being taught.
        schema:
          type: boolean
      - name: hispanicLatinoEthnicity
        in: query
        description: An indication that the individual traces his or her origin or
          descent to Mexico, Puerto Rico, Cuba, Central, and South America, and
          other Spanish cultures, regardless of race. The term, \"Spanish origin,\
          can be used in addition to \"Hispanic or Latino.\"
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: lastSurname
        in: query
        description: The name borne in common by members of a family.
        schema:
          maxLength: 75
          type: string
      - name: loginId
        in: query
        description: The login ID for the user; used for security access control interface.
        schema:
          maxLength: 60
          type: string
      - name: maidenName
        in: query
        description: The person's maiden name.
        schema:
          maxLength: 75
          type: string
      - name: middleName
        in: query
        description: A secondary name given to an individual at birth, baptism, or
          during another naming ceremony.
        schema:
          maxLength: 75
          type: string
      - name: personalTitlePrefix
        in: query
        description: A prefix used to denote the title, degree, position, or seniority
          of the person.
        schema:
          maxLength: 30
          type: string
      - name: yearsOfPriorProfessionalExperience
        in: query
        description: The total number of years that an individual has previously held
          a similar professional position in one or more education institutions.
        schema:
          type: number
          format: double
      - name: yearsOfPriorTeachingExperience
        in: query
        description: The total number of years that an individual has previously held
          a teaching position in one or more education institutions.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staff"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffs
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaff
      requestBody:
        description: The JSON representation of the "staff" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staff"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffs/{id}:
    get:
      tags:
      - staffs
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staff"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffs
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaff
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staff" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staff"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffs
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffAbsenceEvents:
    get:
      tags:
      - staffAbsenceEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffAbsenceEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: absenceEventCategoryDescriptor
        in: query
        description: The code describing the type of absence.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: Date for this leave event.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: absenceEventReason
        in: query
        description: Expanded reason for the staff absence.
        schema:
          maxLength: 40
          type: string
      - name: hoursAbsent
        in: query
        description: The hours the staff was absent, if not the entire working day.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffAbsenceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffAbsenceEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffAbsenceEvent
      requestBody:
        description: The JSON representation of the "staffAbsenceEvent" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffAbsenceEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffAbsenceEvents/{id}:
    get:
      tags:
      - staffAbsenceEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffAbsenceEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffAbsenceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffAbsenceEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffAbsenceEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffAbsenceEvent" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffAbsenceEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffAbsenceEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffAbsenceEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffCohortAssociations:
    get:
      tags:
      - staffCohortAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffCohortAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: Start date for the association of staff to this cohort.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: cohortIdentifier
        in: query
        description: The name or ID for the Cohort.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: End date for the association of staff to this cohort.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: studentRecordAccess
        in: query
        description: Indicator of whether the staff has access to the student records
          of the cohort per district interpretation of FERPA and other privacy laws,
          regulations, and policies.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffCohortAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffCohortAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffCohortAssociation
      requestBody:
        description: The JSON representation of the "staffCohortAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffCohortAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffCohortAssociations/{id}:
    get:
      tags:
      - staffCohortAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffCohortAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffCohortAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffCohortAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffCohortAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffCohortAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffCohortAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffCohortAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffCohortAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffDisciplineIncidentAssociations:
    get:
      tags:
      - staffDisciplineIncidentAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffDisciplineIncidentAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: incidentIdentifier
        in: query
        description: A locally assigned unique identifier (within the school or school
          district) to identify each specific DisciplineIncident or occurrence. The
          same identifier should be used to document the entire DisciplineIncident
          even if it included multiple offenses and multiple offenders.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffDisciplineIncidentAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffDisciplineIncidentAssociation
      requestBody:
        description: The JSON representation of the "staffDisciplineIncidentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffDisciplineIncidentAssociations/{id}:
    get:
      tags:
      - staffDisciplineIncidentAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffDisciplineIncidentAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffDisciplineIncidentAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffDisciplineIncidentAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffDisciplineIncidentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffDisciplineIncidentAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffDisciplineIncidentAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffDisciplineIncidentAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationAssignmentAssociations:
    get:
      tags:
      - staffEducationOrganizationAssignmentAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffEducationOrganizationAssignmentAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: staffClassificationDescriptor
        in: query
        description: The titles of employment, official status, or rank of education
          staff.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: Month, day, and year of the start or effective date of a staff
          member's employment, contract, or relationship with the education organization.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: credentialIdentifier
        in: query
        description: Identifier or serial number assigned to the credential.
        schema:
          maxLength: 60
          type: string
      - name: stateOfIssueStateAbbreviationDescriptor
        in: query
        description: The abbreviation for the name of the state (within the United
          States) or extra-state jurisdiction in which a license/credential was issued.
        schema:
          maxLength: 306
          type: string
      - name: employmentEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: employmentStatusDescriptor
        in: query
        description: "Reflects the type of employment or contract; for example: Probationary\
            \     Contractual        Substitute/temporary Tenured or permanent\
            \   Volunteer/no contract        ..."
        schema:
          maxLength: 306
          type: string
      - name: employmentHireDate
        in: query
        description: The month, day, and year on which an individual was hired for
          a position.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: Month, day, and year of the end or termination date of a staff
          member's employment, contract, or relationship with the education organization.
        schema:
          type: string
          format: date
      - name: fullTimeEquivalency
        in: query
        description: The ratio between the hours of work expected in a position and
          the hours of work normally expected in a full-time position in the same
          setting.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: orderOfAssignment
        in: query
        description: Describes whether the assignment is this the staff member's
          primary assignment, secondary assignment, etc.
        schema:
          type: integer
          format: int32
      - name: positionTitle
        in: query
        description: The descriptive name of an individual's position.
        schema:
          maxLength: 100
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffEducationOrganizationAssignmentAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffEducationOrganizationAssignmentAssociation
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationAssignmentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationAssignmentAssociations/{id}:
    get:
      tags:
      - staffEducationOrganizationAssignmentAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffEducationOrganizationAssignmentAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffEducationOrganizationAssignmentAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffEducationOrganizationAssignmentAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationAssignmentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationAssignmentAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffEducationOrganizationAssignmentAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffEducationOrganizationAssignmentAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationContactAssociations:
    get:
      tags:
      - staffEducationOrganizationContactAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffEducationOrganizationContactAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: contactTitle
        in: query
        description: The title of the contact in the context of the EducationOrganization.
        schema:
          maxLength: 75
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: contactTypeDescriptor
        in: query
        description: Indicates the type for the contact information.
        schema:
          maxLength: 306
          type: string
      - name: electronicMailAddress
        in: query
        description: The email for the contact associated with the EducationOrganization.
        schema:
          maxLength: 128
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffEducationOrganizationContactAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffEducationOrganizationContactAssociation
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationContactAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationContactAssociations/{id}:
    get:
      tags:
      - staffEducationOrganizationContactAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffEducationOrganizationContactAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffEducationOrganizationContactAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffEducationOrganizationContactAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationContactAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffEducationOrganizationContactAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffEducationOrganizationContactAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationEmploymentAssociations:
    get:
      tags:
      - staffEducationOrganizationEmploymentAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffEducationOrganizationEmploymentAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: employmentStatusDescriptor
        in: query
        description: "Reflects the type of employment or contract; for example: Probationary\
            \     Contractual        Substitute/temporary Tenured or permanent\
            \   Volunteer/no contract        ..."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: hireDate
        in: query
        description: The month, day, and year on which an individual was hired for
          a position.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: credentialIdentifier
        in: query
        description: Identifier or serial number assigned to the credential.
        schema:
          maxLength: 60
          type: string
      - name: stateOfIssueStateAbbreviationDescriptor
        in: query
        description: The abbreviation for the name of the state (within the United
          States) or extra-state jurisdiction in which a license/credential was issued.
        schema:
          maxLength: 306
          type: string
      - name: separationDescriptor
        in: query
        description: "Type of employment separation; for example: Voluntary separation,\
          \ Involuntary separation,        Mutual agreement        Other, etc."
        schema:
          maxLength: 306
          type: string
      - name: separationReasonDescriptor
        in: query
        description: "Reason for terminating the employment; for example: Employment\
          \ in education        Employment outside of education        Retirement\
          \        Family/personal relocation Change of assignment."
        schema:
          maxLength: 306
          type: string
      - name: department
        in: query
        description: The department or suborganization the employee/contractor is
          associated with in the EducationOrganization.
        schema:
          maxLength: 60
          type: string
      - name: endDate
        in: query
        description: The month, day, and year on which a contract between an individual
          and a governing authority ends or is terminated under the provisions of
          the contract (or the date on which the agreement is made invalid).
        schema:
          type: string
          format: date
      - name: fullTimeEquivalency
        in: query
        description: The ratio between the hours of work expected in a position and
          the hours of work normally expected in a full-time position in the same
          setting.
        schema:
          type: number
          format: double
      - name: hourlyWage
        in: query
        description: Hourly wage associated with the employment position being reported.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: offerDate
        in: query
        description: Date at which the staff member was made an official offer for
          this employment.
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffEducationOrganizationEmploymentAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffEducationOrganizationEmploymentAssociation
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationEmploymentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffEducationOrganizationEmploymentAssociations/{id}:
    get:
      tags:
      - staffEducationOrganizationEmploymentAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffEducationOrganizationEmploymentAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffEducationOrganizationEmploymentAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffEducationOrganizationEmploymentAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffEducationOrganizationEmploymentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffEducationOrganizationEmploymentAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffEducationOrganizationEmploymentAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffLeaves:
    get:
      tags:
      - staffLeaves
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffLeaves
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: staffLeaveEventCategoryDescriptor
        in: query
        description: "The code describing the type of leave taken, for example: Sick,\
          \ Personal, Vacation."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: The begin date of the staff leave.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: The end date of the staff leave.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: reason
        in: query
        description: Expanded reason for the staff leave.
        schema:
          maxLength: 40
          type: string
      - name: substituteAssigned
        in: query
        description: Indicator of whether a substitute was assigned during the period
          of staff leave.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffLeave"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffLeaves
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffLeave
      requestBody:
        description: The JSON representation of the "staffLeave" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffLeave"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffLeaves/{id}:
    get:
      tags:
      - staffLeaves
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffLeavesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffLeave"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffLeaves
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffLeave
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffLeave" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffLeave"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffLeaves
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffLeaveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffProgramAssociations:
    get:
      tags:
      - staffProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: Start date for the association of staff to this program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: End date for the association of staff to this program.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      - name: studentRecordAccess
        in: query
        description: Indicator of whether the staff has access to the student records
          of the program per district interpretation of FERPA and other privacy
          laws, regulations, and policies.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffProgramAssociation
      requestBody:
        description: The JSON representation of the "staffProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffProgramAssociations/{id}:
    get:
      tags:
      - staffProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffSchoolAssociations:
    get:
      tags:
      - staffSchoolAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffSchoolAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: programAssignmentDescriptor
        in: query
        description: "The name of the program for which the individual is assigned;\
          \ for example:        Regular education        Title I-Academic Title I-Non-Academic\
          \       Special Education Bilingual/English as a Second Language."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: calendarCode
        in: query
        description: The identifier for the Calendar.
        schema:
          maxLength: 60
          type: string
      - name: schoolYear
        in: query
        description: Identifier for a school year.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffSchoolAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffSchoolAssociation
      requestBody:
        description: The JSON representation of the "staffSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffSchoolAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffSchoolAssociations/{id}:
    get:
      tags:
      - staffSchoolAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffSchoolAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffSchoolAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffSchoolAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffSchoolAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffSchoolAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffSchoolAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffSectionAssociations:
    get:
      tags:
      - staffSectionAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStaffSectionAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: classroomPositionDescriptor
        in: query
        description: "The type of position the Staff member holds in the specific\
          \ class/section; for example:        Teacher of Record, Assistant Teacher,\
          \ Support Teacher, Substitute Teacher..."
        schema:
          maxLength: 306
          type: string
      - name: beginDate
        in: query
        description: Month, day, and year of a teacher's assignment to the Section.
          If blank, defaults to the first day of the first grading period for the
          Section.
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        description: Month, day, and year of the last day of a staff member's assignment
          to the Section.
        schema:
          type: string
          format: date
      - name: highlyQualifiedTeacher
        in: query
        description: An indication of whether a teacher is classified as highly qualified
          for his/her assignment according to state definition. This attribute indicates
          the teacher is highly qualified for this section being taught.
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: percentageContribution
        in: query
        description: Indicates the percentage of the total scheduled course time,
          academic standards, and/or learning activities delivered in this section
          by this staff member. A teacher of record designation may be based solely
          or partially on this contribution percentage.
        schema:
          type: number
          format: double
      - name: teacherStudentDataLinkExclusion
        in: query
        description: Indicates that the entire section is excluded from calculation
          of value-added or growth attribution calculations used for a particular
          teacher evaluation.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_staffSectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - staffSectionAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStaffSectionAssociation
      requestBody:
        description: The JSON representation of the "staffSectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffSectionAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/staffSectionAssociations/{id}:
    get:
      tags:
      - staffSectionAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStaffSectionAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_staffSectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - staffSectionAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStaffSectionAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "staffSectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_staffSectionAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - staffSectionAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStaffSectionAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/stateEducationAgencies:
    get:
      tags:
      - stateEducationAgencies
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStateEducationAgencies
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: stateEducationAgencyId
        in: query
        description: The identifier assigned to a state education agency.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_stateEducationAgency"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - stateEducationAgencies
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStateEducationAgency
      requestBody:
        description: The JSON representation of the "stateEducationAgency" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_stateEducationAgency"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/stateEducationAgencies/{id}:
    get:
      tags:
      - stateEducationAgencies
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStateEducationAgenciesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_stateEducationAgency"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - stateEducationAgencies
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStateEducationAgency
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "stateEducationAgency" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_stateEducationAgency"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - stateEducationAgencies
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStateEducationAgencyById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/students:
    get:
      tags:
      - students
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
      - name: citizenshipStatusDescriptor
        in: query
        description: An indicator of whether or not the person is a U.S. citizen.
        schema:
          maxLength: 306
          type: string
      - name: birthCountryDescriptor
        in: query
        description: The country in which an individual is born. It is strongly recommended
          that entries use only ISO 3166 2-letter country codes.
        schema:
          maxLength: 306
          type: string
      - name: birthSexDescriptor
        in: query
        description: A person's gender at birth.
        schema:
          maxLength: 306
          type: string
      - name: birthStateAbbreviationDescriptor
        in: query
        description: The abbreviation for the name of the state (within the United
          States) or extra-state jurisdiction in which an individual was born.
        schema:
          maxLength: 306
          type: string
      - name: birthCity
        in: query
        description: The city the student was born in.
        schema:
          maxLength: 30
          type: string
      - name: birthDate
        in: query
        description: The month, day, and year on which an individual was born.
        schema:
          type: string
          format: date
      - name: birthInternationalProvince
        in: query
        description: For students born outside of the U.S., the Province or jurisdiction
          in which an individual is born.
        schema:
          maxLength: 150
          type: string
      - name: dateEnteredUS
        in: query
        description: For students born outside of the U.S., the date the student
          entered the U.S.
        schema:
          type: string
          format: date
      - name: firstName
        in: query
        description: A name given to an individual at birth, baptism, or during another
          naming ceremony, or through legal change.
        schema:
          maxLength: 75
          type: string
      - name: generationCodeSuffix
        in: query
        description: An appendage, if any, used to denote an individual's generation
          in his family (e.g., Jr., Sr., III).
        schema:
          maxLength: 10
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: lastSurname
        in: query
        description: The name borne in common by members of a family.
        schema:
          maxLength: 75
          type: string
      - name: maidenName
        in: query
        description: The person's maiden name.
        schema:
          maxLength: 75
          type: string
      - name: middleName
        in: query
        description: A secondary name given to an individual at birth, baptism, or
          during another naming ceremony.
        schema:
          maxLength: 75
          type: string
      - name: multipleBirthStatus
        in: query
        description: Indicator of whether the student was born with other siblings
          (i.e., twins, triplets, etc.)
        schema:
          type: boolean
      - name: personalTitlePrefix
        in: query
        description: A prefix used to denote the title, degree, position, or seniority
          of the person.
        schema:
          maxLength: 30
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_student"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - students
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudent
      requestBody:
        description: The JSON representation of the "student" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_student"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/students/{id}:
    get:
      tags:
      - students
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_student"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - students
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "student" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_student"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - students
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentAcademicRecords:
    get:
      tags:
      - studentAcademicRecords
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentAcademicRecords
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: termDescriptor
        in: query
        description: The term for the session during the school year.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: cumulativeEarnedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: cumulativeAttemptedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: sessionEarnedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: sessionAttemptedCreditTypeDescriptor
        in: query
        description: The type of credits or units of value awarded for the completion
          of a course.
        schema:
          maxLength: 306
          type: string
      - name: cumulativeAttemptedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: cumulativeAttemptedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: cumulativeEarnedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: cumulativeEarnedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: cumulativeGradePointAverage
        in: query
        description: A measure of average performance in all courses taken by an individual
          during his or her school career as determined for record-keeping purposes.
          This is obtained by dividing the total grade points received by the total
          number of credits attempted. This usually includes grade points received
          and credits attempted in his or her current school as well as those transferred
          from schools in which the individual was previously enrolled.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
          instead, which supports capture of multiple (e.g., weighted, unweighted)
          GPAs. Expect removal of this element in a future release.
      - name: cumulativeGradePointsEarned
        in: query
        description: The cumulative number of grade points an individual earns by
          successfully completing courses or examinations during his or her enrollment
          in the current school as well as those transferred from schools in which
          the individual had been previously enrolled.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
            this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
          this element in a future release.
      - name: gradeValueQualifier
        in: query
        description: The scale of equivalents, if applicable, for grades awarded
          as indicators of performance in schoolwork. For example, numerical equivalents
          for letter grades used in determining a student's Grade Point Average
          (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for
          percentage grades (90-100%=A, 80-90%=B, etc.)
        schema:
          maxLength: 80
          type: string
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used and in many cases
            would not permit full capture of the semantics of GPA calculations without
            access to significant external information that would be ambiguous to
            try to capture in this field. Expect removal of this element in a future
            release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: This element is rarely used and in many cases would
          not permit full capture of the semantics of GPA calculations without access
          to significant external information that would be ambiguous to try to capture
          in this field. Expect removal of this element in a future release.
      - name: id
        in: query
        schema:
          type: string
      - name: projectedGraduationDate
        in: query
        description: The month and year the student is projected to graduate.
        schema:
          type: string
          format: date
      - name: sessionAttemptedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: sessionAttemptedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: sessionEarnedCreditConversion
        in: query
        description: Conversion factor that when multiplied by the number of credits
          is equivalent to Carnegie units.
        schema:
          type: number
          format: double
      - name: sessionEarnedCredits
        in: query
        description: The value of credits or units of value awarded for the completion
          of a course.
        schema:
          type: number
          format: double
      - name: sessionGradePointAverage
        in: query
        description: The grade point average for an individual computed as the grade
          points earned during the session divided by the number of credits attempted.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
          instead, which supports capture of multiple (e.g., weighted, unweighted)
          GPAs. Expect removal of this element in a future release.
      - name: sessionGradePointsEarned
        in: query
        description: The number of grade points an individual earned for this session.
        schema:
          type: number
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
            this element in a future release.
        x-Ed-Fi-isDeprecated: true
        x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
          this element in a future release.
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentAcademicRecord"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentAcademicRecords
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentAcademicRecord
      requestBody:
        description: The JSON representation of the "studentAcademicRecord" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentAcademicRecord"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentAcademicRecords/{id}:
    get:
      tags:
      - studentAcademicRecords
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentAcademicRecordsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentAcademicRecord"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentAcademicRecords
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentAcademicRecord
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentAcademicRecord" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentAcademicRecord"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentAcademicRecords
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentAcademicRecordById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentAssessments:
    get:
      tags:
      - studentAssessments
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentAssessments
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: studentAssessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment
          administered to a student.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: assessmentIdentifier
        in: query
        description: A unique number or alphanumeric code assigned to an assessment.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Assessment.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The school year for which the assessment was administered to
          a student. Among other uses, handles cases in which a student takes a
          prior-year exam in a subsequent school year during an exam re-test.
        schema:
          type: integer
          format: int32
      - name: administrationEnvironmentDescriptor
        in: query
        description: The environment in which the test was administered.
        schema:
          maxLength: 306
          type: string
      - name: eventCircumstanceDescriptor
        in: query
        description: An unusual event occurred during the administration of the assessment.
          This could include fire alarm, student became ill, etc.
        schema:
          maxLength: 306
          type: string
      - name: whenAssessedGradeLevelDescriptor
        in: query
        description: The grade level of a student when assessed.
        schema:
          maxLength: 306
          type: string
      - name: administrationLanguageDescriptor
        in: query
        description: The language in which an assessment is written and/or administered.
        schema:
          maxLength: 306
          type: string
      - name: platformTypeDescriptor
        in: query
        description: The platform with which the assessment was delivered to the student
          during the assessment session.
        schema:
          maxLength: 306
          type: string
      - name: reasonNotTestedDescriptor
        in: query
        description: "The primary reason student is not tested. For example: Absent\
            \      Refusal by parent        Refusal by student Medical waiver\
            \  Illness        Disruptive behavior        LEP Exempt        ..."
        schema:
          maxLength: 306
          type: string
      - name: retestIndicatorDescriptor
        in: query
        description: "Indicator if the test was retaken. For example:        Primary\
          \ administration        First retest        Second retest        ..."
        schema:
          maxLength: 306
          type: string
      - name: administrationDate
        in: query
        description: The date and time an assessment was completed by the student.
          The use of ISO-8601 formats with a timezone designator (UTC or time offset)
          is recommended in order to prevent ambiguity due to time zones.
        schema:
          type: string
          format: date-time
      - name: administrationEndDate
        in: query
        description: The date and time an assessment administration ended.
        schema:
          type: string
          format: date-time
      - name: eventDescription
        in: query
        description: Describes special events that occur before during or after the
          assessment session that may impact use of results.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: serialNumber
        in: query
        description: The unique number for the assessment form or answer document.
        schema:
          maxLength: 60
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentAssessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentAssessments
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentAssessment
      requestBody:
        description: The JSON representation of the "studentAssessment" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentAssessment"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentAssessments/{id}:
    get:
      tags:
      - studentAssessments
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentAssessmentsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentAssessment"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentAssessments
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentAssessment
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentAssessment" resource to
          be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentAssessment"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentAssessments
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentAssessmentById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCohortAssociations:
    get:
      tags:
      - studentCohortAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentCohortAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The month, day, and year on which the Student was first identified
          as part of the Cohort.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: cohortIdentifier
        in: query
        description: The name or ID for the Cohort.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: The month, day, and year on which the Student was removed as
          part of the Cohort.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentCohortAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentCohortAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentCohortAssociation
      requestBody:
        description: The JSON representation of the "studentCohortAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCohortAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCohortAssociations/{id}:
    get:
      tags:
      - studentCohortAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentCohortAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentCohortAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentCohortAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentCohortAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentCohortAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCohortAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentCohortAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentCohortAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCompetencyObjectives:
    get:
      tags:
      - studentCompetencyObjectives
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentCompetencyObjectives
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: objectiveEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: objective
        in: query
        description: The designated title of the CompetencyObjective.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: objectiveGradeLevelDescriptor
        in: query
        description: The grade level for which the CompetencyObjective is targeted.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolYear
        in: query
        description: The identifier for the grading period school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: competencyLevelDescriptor
        in: query
        description: The competency level assessed for the student for the referenced
          competency objective.
        schema:
          maxLength: 306
          type: string
      - name: diagnosticStatement
        in: query
        description: A statement provided by the teacher that provides information
          in addition to the grade or assessment score.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentCompetencyObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentCompetencyObjectives
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentCompetencyObjective
      requestBody:
        description: The JSON representation of the "studentCompetencyObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCompetencyObjective"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCompetencyObjectives/{id}:
    get:
      tags:
      - studentCompetencyObjectives
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentCompetencyObjectivesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentCompetencyObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentCompetencyObjectives
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentCompetencyObjective
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentCompetencyObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCompetencyObjective"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentCompetencyObjectives
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentCompetencyObjectiveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCTEProgramAssociations:
    get:
      tags:
      - studentCTEProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentCTEProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: technicalSkillsAssessmentDescriptor
        in: query
        description: Results of technical skills assessment aligned with industry
          recognized standards.
        schema:
          maxLength: 306
          type: string
      - name: nonTraditionalGenderStatus
        in: query
        description: Indicator that student is from a gender group that comprises
          less than 25% of the individuals employed in an occupation or field of work.
        schema:
          type: boolean
      - name: privateCTEProgram
        in: query
        description: Indicator that student participated in career and technical education
          at private agencies or institutions that are reported by the state for purposes
          of the Elementary and Secondary Education Act (ESEA).Students in private
          institutions which do not receive Perkins funding are reported only in the
          state file.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentCTEProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentCTEProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentCTEProgramAssociation
      requestBody:
        description: The JSON representation of the "studentCTEProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCTEProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentCTEProgramAssociations/{id}:
    get:
      tags:
      - studentCTEProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentCTEProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentCTEProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentCTEProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentCTEProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentCTEProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentCTEProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentCTEProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentCTEProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentDisciplineIncidentAssociations:
    get:
      tags:
      - studentDisciplineIncidentAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentDisciplineIncidentAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: incidentIdentifier
        in: query
        description: A locally assigned unique identifier (within the school or school
          district) to identify each specific DisciplineIncident or occurrence. The
          same identifier should be used to document the entire DisciplineIncident
          even if it included multiple offenses and multiple offenders.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentParticipationCodeDescriptor
        in: query
        description: "The role or type of participation of a student in a discipline\
          \ incident;        for example:        Victim Perpetrator        Witness\
          \        Reporter."
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    post:
      tags:
      - studentDisciplineIncidentAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentDisciplineIncidentAssociation
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/studentDisciplineIncidentAssociations/{id}:
    get:
      tags:
      - studentDisciplineIncidentAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentDisciplineIncidentAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    put:
      tags:
      - studentDisciplineIncidentAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentDisciplineIncidentAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    delete:
      tags:
      - studentDisciplineIncidentAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentDisciplineIncidentAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/studentDisciplineIncidentBehaviorAssociations:
    get:
      tags:
      - studentDisciplineIncidentBehaviorAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentDisciplineIncidentBehaviorAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: behaviorDescriptor
        in: query
        description: Describes behavior by category.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: incidentIdentifier
        in: query
        description: A locally assigned unique identifier (within the school or school
          district) to identify each specific DisciplineIncident or occurrence. The
          same identifier should be used to document the entire DisciplineIncident
          even if it included multiple offenses and multiple offenders.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: behaviorDetailedDescription
        in: query
        description: Specifies a more granular level of detail of a behavior involved
          in the incident.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentDisciplineIncidentBehaviorAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentDisciplineIncidentBehaviorAssociation
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentBehaviorAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentDisciplineIncidentBehaviorAssociations/{id}:
    get:
      tags:
      - studentDisciplineIncidentBehaviorAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentDisciplineIncidentBehaviorAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentDisciplineIncidentBehaviorAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentDisciplineIncidentBehaviorAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentBehaviorAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentDisciplineIncidentBehaviorAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentDisciplineIncidentBehaviorAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentDisciplineIncidentNonOffenderAssociations:
    get:
      tags:
      - studentDisciplineIncidentNonOffenderAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentDisciplineIncidentNonOffenderAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: incidentIdentifier
        in: query
        description: A locally assigned unique identifier (within the school or school
          district) to identify each specific DisciplineIncident or occurrence. The
          same identifier should be used to document the entire DisciplineIncident
          even if it included multiple offenses and multiple offenders.
        schema:
          maxLength: 20
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentDisciplineIncidentNonOffenderAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentDisciplineIncidentNonOffenderAssociation
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentNonOffenderAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentDisciplineIncidentNonOffenderAssociations/{id}:
    get:
      tags:
      - studentDisciplineIncidentNonOffenderAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentDisciplineIncidentNonOffenderAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentDisciplineIncidentNonOffenderAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentDisciplineIncidentNonOffenderAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentDisciplineIncidentNonOffenderAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentDisciplineIncidentNonOffenderAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentDisciplineIncidentNonOffenderAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentEducationOrganizationAssociations:
    get:
      tags:
      - studentEducationOrganizationAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentEducationOrganizationAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: barrierToInternetAccessInResidenceDescriptor
        in: query
        description: An indication of the barrier to having internet access in the
          student s primary place of residence.
        schema:
          maxLength: 306
          type: string
      - name: internetAccessTypeInResidenceDescriptor
        in: query
        description: The primary type of internet service used in the student s primary
          place of residence.
        schema:
          maxLength: 306
          type: string
      - name: internetPerformanceInResidenceDescriptor
        in: query
        description: An indication of whether the student can complete the full range
          of learning activities, including video streaming and assignment upload,
          without interruptions caused by poor internet performance in their primary
          place of residence.
        schema:
          maxLength: 306
          type: string
      - name: limitedEnglishProficiencyDescriptor
        in: query
        description: An indication that the student has been identified as limited
          English proficient by the Language Proficiency Assessment Committee (LPAC),
          or English proficient.
        schema:
          maxLength: 306
          type: string
      - name: oldEthnicityDescriptor
        in: query
        description: "Previous definition of Ethnicity combining Hispanic/Latino and\
          \ race:        1 - American Indian or Alaskan Native        2 - Asian or
          \ Pacific Islander        3 - Black, not of Hispanic origin 4 - Hispanic
          \        5 - White, not of Hispanic origin."
        schema:
          maxLength: 306
          type: string
      - name: primaryLearningDeviceAccessDescriptor
        in: query
        description: An indication of whether the primary learning device is shared
          or not shared with another individual.
        schema:
          maxLength: 306
          type: string
      - name: primaryLearningDeviceAwayFromSchoolDescriptor
        in: query
        description: The type of device the student uses most often to complete learning
          activities away from school.
        schema:
          maxLength: 306
          type: string
      - name: primaryLearningDeviceProviderDescriptor
        in: query
        description: The provider of the primary learning device.
        schema:
          maxLength: 306
          type: string
      - name: sexDescriptor
        in: query
        description: The student's gender as last reported to the education organization.
        schema:
          maxLength: 306
          type: string
      - name: hispanicLatinoEthnicity
        in: query
        description: An indication that the individual traces his or her origin or
          descent to Mexico, Puerto Rico, Cuba, Central, and South America, and
          other Spanish cultures, regardless of race, as last reported to the education
          organization. The term, \"Spanish origin,\" can be used in addition to
          \"Hispanic or Latino.\"
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: internetAccessInResidence
        in: query
        description: An indication of whether the student is able to access the internet
          in their primary place of residence.
        schema:
          type: boolean
      - name: loginId
        in: query
        description: The login ID for the user; used for security access control interface.
        schema:
          maxLength: 60
          type: string
      - name: profileThumbnail
        in: query
        description: Locator reference for the student photo. The specification for
          that reference is left to local definition.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentEducationOrganizationAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentEducationOrganizationAssociation
      requestBody:
        description: The JSON representation of the "studentEducationOrganizationAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentEducationOrganizationAssociations/{id}:
    get:
      tags:
      - studentEducationOrganizationAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentEducationOrganizationAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentEducationOrganizationAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentEducationOrganizationAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentEducationOrganizationAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentEducationOrganizationAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentEducationOrganizationAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentEducationOrganizationResponsibilityAssociations:
    get:
      tags:
      - studentEducationOrganizationResponsibilityAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentEducationOrganizationResponsibilityAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: responsibilityDescriptor
        in: query
        description: Indications of an education organization's responsibility for
          a student, such as accountability, attendance, funding, etc.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: Month, day, and year of the start date of an education organization's
          responsibility for a student.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: endDate
        in: query
        description: Month, day, and year of the end date of an education organization's
          responsibility for a student.
        schema:
          type: string
          format: date
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentEducationOrganizationResponsibilityAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentEducationOrganizationResponsibilityAssociation
      requestBody:
        description: The JSON representation of the "studentEducationOrganizationResponsibilityAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentEducationOrganizationResponsibilityAssociations/{id}:
    get:
      tags:
      - studentEducationOrganizationResponsibilityAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentEducationOrganizationResponsibilityAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentEducationOrganizationResponsibilityAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentEducationOrganizationResponsibilityAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentEducationOrganizationResponsibilityAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentEducationOrganizationResponsibilityAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentEducationOrganizationResponsibilityAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentEducationOrganizationResponsibilityAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentGradebookEntries:
    get:
      tags:
      - studentGradebookEntries
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentGradebookEntries
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: dateAssigned
        in: query
        description: The date the assignment, homework, or assessment was assigned
          or executed.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradebookEntryTitle
        in: query
        description: The name or title of the activity to be recorded in the GradebookEntry.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: beginDate
        in: query
        description: Month, day, and year of the Student's entry or assignment to
          the Section.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: competencyLevelDescriptor
        in: query
        description: The CompetencyLevel assessed for the student for the referenced
          LearningObjective.
        schema:
          maxLength: 306
          type: string
      - name: dateFulfilled
        in: query
        description: The date an assignment was turned in or the date of an assessment.
        schema:
          type: string
          format: date
      - name: diagnosticStatement
        in: query
        description: A statement provided by the teacher that provides information
          in addition to the grade or assessment score.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: letterGradeEarned
        in: query
        description: A final or interim (grading period) indicator of student performance
          in a class as submitted by the instructor.
        schema:
          maxLength: 20
          type: string
      - name: numericGradeEarned
        in: query
        description: A final or interim (grading period) indicator of student performance
          in a class as submitted by the instructor.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentGradebookEntry"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentGradebookEntries
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentGradebookEntry
      requestBody:
        description: The JSON representation of the "studentGradebookEntry" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentGradebookEntry"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentGradebookEntries/{id}:
    get:
      tags:
      - studentGradebookEntries
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentGradebookEntriesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentGradebookEntry"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentGradebookEntries
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentGradebookEntry
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentGradebookEntry" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentGradebookEntry"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentGradebookEntries
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentGradebookEntryById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentHomelessProgramAssociations:
    get:
      tags:
      - studentHomelessProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentHomelessProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: homelessPrimaryNighttimeResidenceDescriptor
        in: query
        description: The primary nighttime residence of the student at the time the
          student is identified as homeless.
        schema:
          maxLength: 306
          type: string
      - name: awaitingFosterCare
        in: query
        description: State defined definition for awaiting foster care.
        schema:
          type: boolean
      - name: homelessUnaccompaniedYouth
        in: query
        description: A homeless unaccompanied youth is a youth who is not in the physical
          custody of a parent or guardian and who fits the McKinney-Vento definition
          of homeless. Students must be both unaccompanied and homeless to be included
          as an unaccompanied homeless youth.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentHomelessProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentHomelessProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentHomelessProgramAssociation
      requestBody:
        description: The JSON representation of the "studentHomelessProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentHomelessProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentHomelessProgramAssociations/{id}:
    get:
      tags:
      - studentHomelessProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentHomelessProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentHomelessProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentHomelessProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentHomelessProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentHomelessProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentHomelessProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentHomelessProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentHomelessProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentInterventionAssociations:
    get:
      tags:
      - studentInterventionAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentInterventionAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: interventionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: cohortIdentifier
        in: query
        description: The name or ID for the Cohort.
        schema:
          maxLength: 20
          type: string
      - name: cohortEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: diagnosticStatement
        in: query
        description: A statement provided by the assigner that provides information
          regarding why the student was assigned to this intervention.
        schema:
          maxLength: 1024
          type: string
      - name: dosage
        in: query
        description: The duration of time in minutes for which the student was assigned
          to participate in the intervention.
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentInterventionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentInterventionAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentInterventionAssociation
      requestBody:
        description: The JSON representation of the "studentInterventionAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentInterventionAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentInterventionAssociations/{id}:
    get:
      tags:
      - studentInterventionAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentInterventionAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentInterventionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentInterventionAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentInterventionAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentInterventionAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentInterventionAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentInterventionAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentInterventionAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentInterventionAttendanceEvents:
    get:
      tags:
      - studentInterventionAttendanceEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentInterventionAttendanceEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: attendanceEventCategoryDescriptor
        in: query
        description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: Date for this attendance event.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: interventionIdentificationCode
        in: query
        description: A unique number or alphanumeric code assigned to an intervention.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationalEnvironmentDescriptor
        in: query
        description: The setting in which a child receives education and related services.
          This attribute is only used if it differs from the EducationalEnvironment
          of the Section. This is only used in the AttendanceEvent if different from
          the associated Section.
        schema:
          maxLength: 306
          type: string
      - name: attendanceEventReason
        in: query
        description: The reported reason for a student's absence.
        schema:
          maxLength: 255
          type: string
      - name: eventDuration
        in: query
        description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: interventionDuration
        in: query
        description: The duration in minutes in which the student participated in
          the intervention during this instance.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentInterventionAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentInterventionAttendanceEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentInterventionAttendanceEvent
      requestBody:
        description: The JSON representation of the "studentInterventionAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentInterventionAttendanceEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentInterventionAttendanceEvents/{id}:
    get:
      tags:
      - studentInterventionAttendanceEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentInterventionAttendanceEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentInterventionAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentInterventionAttendanceEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentInterventionAttendanceEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentInterventionAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentInterventionAttendanceEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentInterventionAttendanceEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentInterventionAttendanceEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentLanguageInstructionProgramAssociations:
    get:
      tags:
      - studentLanguageInstructionProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentLanguageInstructionProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: dosage
        in: query
        description: The duration of time in minutes for which the student was assigned
          to participate in the program.
        schema:
          type: integer
          format: int32
      - name: englishLearnerParticipation
        in: query
        description: An indication that an English Learner student is served by an
          English language instruction educational program supported with Title III
          of ESEA funds.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentLanguageInstructionProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentLanguageInstructionProgramAssociation
      requestBody:
        description: The JSON representation of the "studentLanguageInstructionProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentLanguageInstructionProgramAssociations/{id}:
    get:
      tags:
      - studentLanguageInstructionProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentLanguageInstructionProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentLanguageInstructionProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentLanguageInstructionProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentLanguageInstructionProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentLanguageInstructionProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentLanguageInstructionProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentLearningObjectives:
    get:
      tags:
      - studentLearningObjectives
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentLearningObjectives
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: gradingPeriodDescriptor
        in: query
        description: The name of the period for which grades are reported.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSequence
        in: query
        description: The sequential order of this period relative to other periods.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: gradingPeriodSchoolYear
        in: query
        description: The identifier for the grading period school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: learningObjectiveId
        in: query
        description: The identifier for the specific learning objective in the context
          of a standard (e.g., 111.15.3.1.A).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the LearningObjective.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: competencyLevelDescriptor
        in: query
        description: The CompetencyLevel assessed for the student for the referenced
          LearningObjective.
        schema:
          maxLength: 306
          type: string
      - name: diagnosticStatement
        in: query
        description: A statement provided by the teacher that provides information
          in addition to the grade or assessment score.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentLearningObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    post:
      tags:
      - studentLearningObjectives
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentLearningObjective
      requestBody:
        description: The JSON representation of the "studentLearningObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentLearningObjective"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/studentLearningObjectives/{id}:
    get:
      tags:
      - studentLearningObjectives
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentLearningObjectivesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentLearningObjective"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    put:
      tags:
      - studentLearningObjectives
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentLearningObjective
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentLearningObjective" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentLearningObjective"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
    delete:
      tags:
      - studentLearningObjectives
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentLearningObjectiveById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: true
  /ed-fi/studentMigrantEducationProgramAssociations:
    get:
      tags:
      - studentMigrantEducationProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentMigrantEducationProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: continuationOfServicesReasonDescriptor
        in: query
        description: The \"continuation of services\" provision found in Section
          1304(e) of the statute provides that (1) a child who ceases to be a migratory
          child during a school term shall be eligible for services until the end
          of such term; (2) a child who is no longer a migratory child may continue
          to receive services for one additional school year, but only if comparable
          services are not available through other programs; and (3) secondary school
          students who were eligible for services in secondary school may continue
          to be served through credit accrual programs until graduation. Only students
          who received services at any time during their 36 month eligibility period
          may continue to receive services (not necessarily the same service).
        schema:
          maxLength: 306
          type: string
      - name: eligibilityExpirationDate
        in: query
        description: The Eligibility Expiration Date is used to determine end of
          eligibility and to account for a child's eligibility expiring earlier
          than 36 months from the child's QAD. A child's eligibility would end earlier
          than 36 months from the child's QAD, if the child is no longer entitled
          to a free public education (e.g., graduated with a high school diploma,
          obtained a high school equivalency diploma (HSED), or for other reasons
          as determined by States' requirements), or if the child passes away.
        schema:
          type: string
          format: date
      - name: lastQualifyingMove
        in: query
        description: Date the last qualifying move occurred; used to compute MEP status.
        schema:
          type: string
          format: date
      - name: priorityForServices
        in: query
        description: Report migratory children who are classified as having \"priority
          for services\" because they are failing, or most at risk of failing to
          meet the State's challenging State academic content standards and challenging
          State student academic achievement standards, and their education has
          been interrupted during the regular school year.
        schema:
          type: boolean
      - name: qualifyingArrivalDate
        in: query
        description: The Qualifying Arrival Date (QAD) is the date the child joins
          the worker who has already moved, or the date when the worker joins the
          child who has already moved. The QAD is the date that the child's eligibility
          for the MEP begins. The QAD is not affected by subsequent non-qualifying
          moves.
        schema:
          type: string
          format: date
      - name: stateResidencyDate
        in: query
        description: The verified State residency for the student.
        schema:
          type: string
          format: date
      - name: usInitialEntry
        in: query
        description: The month, day, and year on which the Student first entered
          the U.S.
        schema:
          type: string
          format: date
      - name: usInitialSchoolEntry
        in: query
        description: The month, day, and year on which the Student first entered
          a U.S. school.
        schema:
          type: string
          format: date
      - name: usMostRecentEntry
        in: query
        description: The month, day, and year of the Student's most recent entry
          into the U.S.
        schema:
          type: string
          format: date
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentMigrantEducationProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentMigrantEducationProgramAssociation
      requestBody:
        description: The JSON representation of the "studentMigrantEducationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentMigrantEducationProgramAssociations/{id}:
    get:
      tags:
      - studentMigrantEducationProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentMigrantEducationProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentMigrantEducationProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentMigrantEducationProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentMigrantEducationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentMigrantEducationProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentMigrantEducationProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentMigrantEducationProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentNeglectedOrDelinquentProgramAssociations:
    get:
      tags:
      - studentNeglectedOrDelinquentProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentNeglectedOrDelinquentProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: neglectedOrDelinquentProgramDescriptor
        in: query
        description: The type of program under ESEA Title I, Part D, Subpart 1 (state
          programs) or Subpart 2 (LEA).
        schema:
          maxLength: 306
          type: string
      - name: elaProgressLevelDescriptor
        in: query
        description: The progress measured from pre- to post- test for ELA.
        schema:
          maxLength: 306
          type: string
      - name: mathematicsProgressLevelDescriptor
        in: query
        description: The progress measured from pre- to post-test for Mathematics.
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentNeglectedOrDelinquentProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentNeglectedOrDelinquentProgramAssociation
      requestBody:
        description: The JSON representation of the "studentNeglectedOrDelinquentProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentNeglectedOrDelinquentProgramAssociations/{id}:
    get:
      tags:
      - studentNeglectedOrDelinquentProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentNeglectedOrDelinquentProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentNeglectedOrDelinquentProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentNeglectedOrDelinquentProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentNeglectedOrDelinquentProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentNeglectedOrDelinquentProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentNeglectedOrDelinquentProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentParentAssociations:
    get:
      tags:
      - studentParentAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentParentAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: parentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a parent.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: relationDescriptor
        in: query
        description: The nature of an individual's relationship to a student, primarily
          used to capture family relationships.
        schema:
          maxLength: 306
          type: string
      - name: contactPriority
        in: query
        description: The numeric order of the preferred sequence or priority of contact.
        schema:
          type: integer
          format: int32
      - name: contactRestrictions
        in: query
        description: Restrictions for student and/or teacher contact with the individual
          (e.g., the student may not be picked up by the individual).
        schema:
          maxLength: 250
          type: string
      - name: emergencyContactStatus
        in: query
        description: Indicator of whether the person is a designated emergency contact
          for the Student.
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: legalGuardian
        in: query
        description: Indicator of whether the person is a legal guardian for the Student.
        schema:
          type: boolean
      - name: livesWith
        in: query
        description: Indicator of whether the Student lives with the associated parent.
        schema:
          type: boolean
      - name: primaryContactStatus
        in: query
        description: Indicator of whether the person is a primary parental contact
          for the Student.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentParentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentParentAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentParentAssociation
      requestBody:
        description: The JSON representation of the "studentParentAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentParentAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentParentAssociations/{id}:
    get:
      tags:
      - studentParentAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentParentAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentParentAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentParentAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentParentAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentParentAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentParentAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentParentAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentParentAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentProgramAssociations:
    get:
      tags:
      - studentProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentProgramAssociation
      requestBody:
        description: The JSON representation of the "studentProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentProgramAssociations/{id}:
    get:
      tags:
      - studentProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentProgramAttendanceEvents:
    get:
      tags:
      - studentProgramAttendanceEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentProgramAttendanceEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: attendanceEventCategoryDescriptor
        in: query
        description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: Date for this attendance event.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationalEnvironmentDescriptor
        in: query
        description: The setting in which a child receives education and related services.
          This attribute is only used if it differs from the EducationalEnvironment
          of the Section. This is only used in the AttendanceEvent if different from
          the associated Section.
        schema:
          maxLength: 306
          type: string
      - name: attendanceEventReason
        in: query
        description: The reported reason for a student's absence.
        schema:
          maxLength: 255
          type: string
      - name: eventDuration
        in: query
        description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: programAttendanceDuration
        in: query
        description: The duration in minutes of the program attendance event.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentProgramAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentProgramAttendanceEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentProgramAttendanceEvent
      requestBody:
        description: The JSON representation of the "studentProgramAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentProgramAttendanceEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentProgramAttendanceEvents/{id}:
    get:
      tags:
      - studentProgramAttendanceEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentProgramAttendanceEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentProgramAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentProgramAttendanceEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentProgramAttendanceEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentProgramAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentProgramAttendanceEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentProgramAttendanceEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentProgramAttendanceEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolAssociations:
    get:
      tags:
      - studentSchoolAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSchoolAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: entryDate
        in: query
        description: The month, day, and year on which an individual enters and begins
          to receive instructional services in a school.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: calendarCode
        in: query
        description: The identifier for the Calendar.
        schema:
          maxLength: 60
          type: string
      - name: schoolYear
        in: query
        description: The school year associated with the student's enrollment.
        schema:
          type: integer
          format: int32
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: graduationPlanTypeDescriptor
        in: query
        description: "The type of academic plan the student is following for graduation:\
          \ for example, Minimum, Recommended, Distinguished, or Standard."
        schema:
          maxLength: 306
          type: string
      - name: graduationSchoolYear
        in: query
        description: The school year the student is expected to graduate.
        schema:
          type: integer
          format: int32
      - name: classOfSchoolYear
        in: query
        description: Projected High School graduation year.
        schema:
          type: integer
          format: int32
      - name: entryGradeLevelReasonDescriptor
        in: query
        description: The primary reason as to why a staff member determined that a
          student should be promoted or not (or be demoted) at the end of a given
          school term.
        schema:
          maxLength: 306
          type: string
      - name: entryTypeDescriptor
        in: query
        description: The process by which a student enters a school during a given
          academic session.
        schema:
          maxLength: 306
          type: string
      - name: exitWithdrawTypeDescriptor
        in: query
        description: The circumstances under which the student exited from membership
          in an educational institution.
        schema:
          maxLength: 306
          type: string
      - name: entryGradeLevelDescriptor
        in: query
        description: The grade level or primary instructional level at which a student
          enters and receives services in a school or an educational institution during
          a given academic session.
        schema:
          maxLength: 306
          type: string
      - name: residencyStatusDescriptor
        in: query
        description: An indication of the location of a persons legal residence relative
          to (within or outside of) the boundaries of the public school attended and
          its administrative unit.
        schema:
          maxLength: 306
          type: string
      - name: employedWhileEnrolled
        in: query
        description: An individual who is a paid employee or works in his or her
          own business, profession, or farm and at the same time is enrolled in
          secondary, postsecondary, or adult education.
        schema:
          type: boolean
      - name: exitWithdrawDate
        in: query
        description: The recorded exit or withdraw date for the student.
        schema:
          type: string
          format: date
      - name: fullTimeEquivalency
        in: query
        description: The full-time equivalent ratio for the student s assignment
          to a school for services or instruction. For example, a full-time student
          would have an FTE value of 1 while a half-time student would have an FTE
          value of 0.5.
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: primarySchool
        in: query
        description: Indicates if a given enrollment record should be considered the
          primary record for a student.
        schema:
          type: boolean
      - name: repeatGradeIndicator
        in: query
        description: An indicator of whether the student is enrolling to repeat a
          grade level, either by failure or an agreement to hold the student back.
        schema:
          type: boolean
      - name: schoolChoiceTransfer
        in: query
        description: An indication of whether students transferred in or out of the
          school did so during the school year under the provisions for public school
          choice in accordance with Title I, Part A, Section 1116.
        schema:
          type: boolean
      - name: termCompletionIndicator
        in: query
        description: Idicates whether or not a student completed the most recent school
          term.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSchoolAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSchoolAssociation
      requestBody:
        description: The JSON representation of the "studentSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolAssociations/{id}:
    get:
      tags:
      - studentSchoolAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSchoolAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSchoolAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSchoolAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putStudentSchoolAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSchoolAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - studentSchoolAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSchoolAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolAttendanceEvents:
    get:
      tags:
      - studentSchoolAttendanceEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSchoolAttendanceEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: attendanceEventCategoryDescriptor
        in: query
        description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: Date for this attendance event.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationalEnvironmentDescriptor
        in: query
        description: The setting in which a child receives education and related services.
          This attribute is only used if it differs from the EducationalEnvironment
          of the Section. This is only used in the AttendanceEvent if different from
          the associated Section.
        schema:
          maxLength: 306
          type: string
      - name: arrivalTime
        in: query
        description: The time of day the student arrived for the attendance event
          in ISO 8601 format.
        schema:
          type: string
      - name: attendanceEventReason
        in: query
        description: The reported reason for a student's absence.
        schema:
          maxLength: 255
          type: string
      - name: departureTime
        in: query
        description: The time of day the student departed for the attendance event
          in ISO 8601 format.
        schema:
          type: string
      - name: eventDuration
        in: query
        description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: schoolAttendanceDuration
        in: query
        description: The duration in minutes of the school attendance event.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSchoolAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSchoolAttendanceEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSchoolAttendanceEvent
      requestBody:
        description: The JSON representation of the "studentSchoolAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolAttendanceEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolAttendanceEvents/{id}:
    get:
      tags:
      - studentSchoolAttendanceEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSchoolAttendanceEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSchoolAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSchoolAttendanceEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentSchoolAttendanceEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSchoolAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolAttendanceEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentSchoolAttendanceEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSchoolAttendanceEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolFoodServiceProgramAssociations:
    get:
      tags:
      - studentSchoolFoodServiceProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSchoolFoodServiceProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: directCertification
        in: query
        description: Indicates that the student's National School Lunch Program (NSLP)
          eligibility has been determined through direct certification.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSchoolFoodServiceProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSchoolFoodServiceProgramAssociation
      requestBody:
        description: The JSON representation of the "studentSchoolFoodServiceProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSchoolFoodServiceProgramAssociations/{id}:
    get:
      tags:
      - studentSchoolFoodServiceProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSchoolFoodServiceProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSchoolFoodServiceProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentSchoolFoodServiceProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSchoolFoodServiceProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentSchoolFoodServiceProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSchoolFoodServiceProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSectionAssociations:
    get:
      tags:
      - studentSectionAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSectionAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: Month, day, and year of the Student's entry or assignment to
          the Section.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: attemptStatusDescriptor
        in: query
        description: An indication of the student's completion status for the section.
        schema:
          maxLength: 306
          type: string
      - name: repeatIdentifierDescriptor
        in: query
        description: An indication as to whether a student has previously taken a
          given course.        Repeated, counted in grade point average Repeated,
          not counted in grade point average        Not repeated        Other.
        schema:
          maxLength: 306
          type: string
      - name: endDate
        in: query
        description: Month, day, and year of the withdrawal or exit of the Student
          from the Section.
        schema:
          type: string
          format: date
      - name: homeroomIndicator
        in: query
        description: Indicates the Section is the student's homeroom. Homeroom period
          may the convention for taking daily attendance.
        schema:
          type: boolean
      - name: id
        in: query
        schema:
          type: string
      - name: teacherStudentDataLinkExclusion
        in: query
        description: Indicates that the student-section combination is excluded from
          calculation of value-added or growth attribution calculations used for a
          particular teacher evaluation.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSectionAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSectionAssociation
      requestBody:
        description: The JSON representation of the "studentSectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSectionAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSectionAssociations/{id}:
    get:
      tags:
      - studentSectionAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSectionAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSectionAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier (\"id\") is provided in the JSON body, it will
        be ignored. Additionally, if natural key values are being updated by the
        JSON body, those changes will be applied to the resource and will also cascade
        through to dependent resources.
      operationId: putStudentSectionAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSectionAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
      x-Ed-Fi-isUpdatable: true
    delete:
      tags:
      - studentSectionAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSectionAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSectionAttendanceEvents:
    get:
      tags:
      - studentSectionAttendanceEvents
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSectionAttendanceEvents
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: attendanceEventCategoryDescriptor
        in: query
        description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: eventDate
        in: query
        description: Date for this attendance event.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationalEnvironmentDescriptor
        in: query
        description: The setting in which a child receives education and related services.
          This attribute is only used if it differs from the EducationalEnvironment
          of the Section. This is only used in the AttendanceEvent if different from
          the associated Section.
        schema:
          maxLength: 306
          type: string
      - name: arrivalTime
        in: query
        description: The time of day the student arrived for the attendance event
          in ISO 8601 format.
        schema:
          type: string
      - name: attendanceEventReason
        in: query
        description: The reported reason for a student's absence.
        schema:
          maxLength: 255
          type: string
      - name: departureTime
        in: query
        description: The time of day the student departed for the attendance event
          in ISO 8601 format.
        schema:
          type: string
      - name: eventDuration
        in: query
        description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
        schema:
          type: number
          format: double
      - name: id
        in: query
        schema:
          type: string
      - name: sectionAttendanceDuration
        in: query
        description: The duration in minutes of the section attendance event.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSectionAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSectionAttendanceEvents
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSectionAttendanceEvent
      requestBody:
        description: The JSON representation of the "studentSectionAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSectionAttendanceEvent"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSectionAttendanceEvents/{id}:
    get:
      tags:
      - studentSectionAttendanceEvents
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSectionAttendanceEventsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSectionAttendanceEvent"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSectionAttendanceEvents
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentSectionAttendanceEvent
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSectionAttendanceEvent
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSectionAttendanceEvent"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentSectionAttendanceEvents
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSectionAttendanceEventById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSpecialEducationProgramAssociations:
    get:
      tags:
      - studentSpecialEducationProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentSpecialEducationProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: specialEducationSettingDescriptor
        in: query
        description: The major instructional setting (more than 50 percent of a student's
          special education program).
        schema:
          maxLength: 306
          type: string
      - name: ideaEligibility
        in: query
        description: Indicator of the eligibility of the student to receive special
          education services according to the Individuals with Disabilities Education
          Act (IDEA).
        schema:
          type: boolean
      - name: iepBeginDate
        in: query
        description: The effective date of the most recent IEP.
        schema:
          type: string
          format: date
      - name: iepEndDate
        in: query
        description: The end date of the most recent IEP.
        schema:
          type: string
          format: date
      - name: iepReviewDate
        in: query
        description: The date of the last IEP review.
        schema:
          type: string
          format: date
      - name: lastEvaluationDate
        in: query
        description: The date of the last special education evaluation.
        schema:
          type: string
          format: date
      - name: medicallyFragile
        in: query
        description: "Indicates whether the Student receiving special education and\
          \ related services is:        1) in the age range of birth to 22 years,\
          \ and        2) has a serious, ongoing illness or a chronic condition that\
          \ has lasted or is anticipated to last at least 12 or more months or has\
          \ required at least one month of hospitalization, and that requires daily,\
          \ ongoing medical treatments and monitoring by appropriately trained personnel\
          \ which may include parents or other family members, and        3) requires\
          \ the routine use of medical device or of assistive technology to compensate\
          \ for the loss of usefulness of a body function needed to participate in\
          \ activities of daily living, and        4) lives with ongoing threat to\
          \ his or her continued well-being.        Aligns with federal requirements."
        schema:
          type: boolean
      - name: multiplyDisabled
        in: query
        description: Indicates whether the Student receiving special education and
          related services has been designated as multiply disabled by the admission,
          review, and dismissal committee as aligned with federal requirements.
        schema:
          type: boolean
      - name: schoolHoursPerWeek
        in: query
        description: Indicate the total number of hours of instructional time per
          week for the school that the student attends.
        schema:
          type: number
          format: double
      - name: specialEducationHoursPerWeek
        in: query
        description: The number of hours per week for special education instruction
          and therapy.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentSpecialEducationProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentSpecialEducationProgramAssociation
      requestBody:
        description: The JSON representation of the "studentSpecialEducationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentSpecialEducationProgramAssociations/{id}:
    get:
      tags:
      - studentSpecialEducationProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentSpecialEducationProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentSpecialEducationProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentSpecialEducationProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentSpecialEducationProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentSpecialEducationProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentSpecialEducationProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentTitleIPartAProgramAssociations:
    get:
      tags:
      - studentTitleIPartAProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getStudentTitleIPartAProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: beginDate
        in: query
        description: The earliest date the student is involved with the program.
          Typically, this is the date the student becomes eligible for the program.
        schema:
          type: string
          format: date
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programEducationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: titleIPartAParticipantDescriptor
        in: query
        description: "An indication of the type of Title I program, if any, in which\
          \ the student is participating and by which the student is served: Public\
          \ Targeted Assistance Program        Public Schoolwide Program        Private\
          \ School Students Participating        Local Neglected Program."
        schema:
          maxLength: 306
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - studentTitleIPartAProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postStudentTitleIPartAProgramAssociation
      requestBody:
        description: The JSON representation of the "studentTitleIPartAProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/studentTitleIPartAProgramAssociations/{id}:
    get:
      tags:
      - studentTitleIPartAProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getStudentTitleIPartAProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - studentTitleIPartAProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putStudentTitleIPartAProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "studentTitleIPartAProgramAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - studentTitleIPartAProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteStudentTitleIPartAProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveys:
    get:
      tags:
      - surveys
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveys
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The school year associated with the survey.
        schema:
          type: integer
          format: int32
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
      - name: surveyCategoryDescriptor
        in: query
        description: The category or type of survey.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: numberAdministered
        in: query
        description: Number of persons to whom this survey was administered.
        schema:
          type: integer
          format: int32
      - name: surveyTitle
        in: query
        description: The title of the survey.
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_survey"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveys
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurvey
      requestBody:
        description: The JSON representation of the "survey" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_survey"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveys/{id}:
    get:
      tags:
      - surveys
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveysById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_survey"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveys
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurvey
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "survey" resource to be created
          or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_survey"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveys
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyCourseAssociations:
    get:
      tags:
      - surveyCourseAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyCourseAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: courseCode
        in: query
        description: A unique alphanumeric code assigned to a course.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyCourseAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyCourseAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyCourseAssociation
      requestBody:
        description: The JSON representation of the "surveyCourseAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyCourseAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyCourseAssociations/{id}:
    get:
      tags:
      - surveyCourseAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyCourseAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyCourseAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyCourseAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyCourseAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyCourseAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyCourseAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyCourseAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyCourseAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyProgramAssociations:
    get:
      tags:
      - surveyProgramAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyProgramAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programName
        in: query
        description: The formal name of the Program of instruction, training, services,
          or benefits available through federal, state, or local agencies.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: programTypeDescriptor
        in: query
        description: The type of program.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyProgramAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyProgramAssociation
      requestBody:
        description: The JSON representation of the "surveyProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyProgramAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyProgramAssociations/{id}:
    get:
      tags:
      - surveyProgramAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyProgramAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyProgramAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyProgramAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyProgramAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyProgramAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyProgramAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyProgramAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyProgramAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyQuestions:
    get:
      tags:
      - surveyQuestions
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyQuestions
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: questionCode
        in: query
        description: The identifying code for the question, unique for the survey.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
      - name: questionFormDescriptor
        in: query
        description: The form or type of question.
        schema:
          maxLength: 306
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: questionText
        in: query
        description: The text of the question.
        schema:
          maxLength: 1024
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyQuestion"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyQuestions
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyQuestion
      requestBody:
        description: The JSON representation of the "surveyQuestion" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyQuestion"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyQuestions/{id}:
    get:
      tags:
      - surveyQuestions
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyQuestionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyQuestion"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyQuestions
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyQuestion
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyQuestion" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyQuestion"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyQuestions
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyQuestionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyQuestionResponses:
    get:
      tags:
      - surveyQuestionResponses
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyQuestionResponses
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: questionCode
        in: query
        description: The identifying code for the question, unique for the survey.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: comment
        in: query
        description: Additional information provided by the responder about the question
          in the survey.
        schema:
          maxLength: 1024
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: noResponse
        in: query
        description: Indicates there was no response to the question.
        schema:
          type: boolean
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyQuestionResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyQuestionResponses
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyQuestionResponse
      requestBody:
        description: The JSON representation of the "surveyQuestionResponse" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyQuestionResponse"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyQuestionResponses/{id}:
    get:
      tags:
      - surveyQuestionResponses
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyQuestionResponsesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyQuestionResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyQuestionResponses
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyQuestionResponse
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyQuestionResponse" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyQuestionResponse"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyQuestionResponses
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyQuestionResponseById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponses:
    get:
      tags:
      - surveyResponses
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyResponses
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: parentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a parent.
        schema:
          maxLength: 32
          type: string
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
      - name: studentUniqueId
        in: query
        description: A unique alphanumeric code assigned to a student.
        schema:
          maxLength: 32
          type: string
      - name: electronicMailAddress
        in: query
        description: Email address of the respondent.
        schema:
          maxLength: 128
          type: string
      - name: fullName
        in: query
        description: Full name of the respondent.
        schema:
          maxLength: 80
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: location
        in: query
        description: Location of the respondent, often a city, district, or school.
        schema:
          maxLength: 75
          type: string
      - name: responseDate
        in: query
        description: Date of the survey response.
        schema:
          type: string
          format: date
      - name: responseTime
        in: query
        description: The amount of time (in seconds) it took for the respondent to
          complete the survey.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyResponses
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyResponse
      requestBody:
        description: The JSON representation of the "surveyResponse" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponse"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponses/{id}:
    get:
      tags:
      - surveyResponses
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyResponsesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyResponses
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyResponse
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyResponse" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponse"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyResponses
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyResponseById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponseEducationOrganizationTargetAssociations:
    get:
      tags:
      - surveyResponseEducationOrganizationTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyResponseEducationOrganizationTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyResponseEducationOrganizationTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyResponseEducationOrganizationTargetAssociation
      requestBody:
        description: The JSON representation of the "surveyResponseEducationOrganizationTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponseEducationOrganizationTargetAssociations/{id}:
    get:
      tags:
      - surveyResponseEducationOrganizationTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyResponseEducationOrganizationTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyResponseEducationOrganizationTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyResponseEducationOrganizationTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyResponseEducationOrganizationTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponseEducationOrganizationTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyResponseEducationOrganizationTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyResponseEducationOrganizationTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/surveyResponsePersonTargetAssociations:
    get:
      tags:
      - surveyResponsePersonTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyResponsePersonTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyResponsePersonTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyResponsePersonTargetAssociation
      requestBody:
        description: The JSON representation of the "surveyResponsePersonTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/surveyResponsePersonTargetAssociations/{id}:
    get:
      tags:
      - surveyResponsePersonTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyResponsePersonTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyResponsePersonTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyResponsePersonTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyResponsePersonTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_surveyResponsePersonTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyResponsePersonTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyResponsePersonTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponseStaffTargetAssociations:
    get:
      tags:
      - surveyResponseStaffTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveyResponseStaffTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveyResponseStaffTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveyResponseStaffTargetAssociation
      requestBody:
        description: The JSON representation of the "surveyResponseStaffTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveyResponseStaffTargetAssociations/{id}:
    get:
      tags:
      - surveyResponseStaffTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveyResponseStaffTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveyResponseStaffTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveyResponseStaffTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveyResponseStaffTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveyResponseStaffTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveyResponseStaffTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveyResponseStaffTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySections:
    get:
      tags:
      - surveySections
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySections
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveySection"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySections
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySection
      requestBody:
        description: The JSON representation of the "surveySection" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySection"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySections/{id}:
    get:
      tags:
      - surveySections
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveySection"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySections
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySection
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySection" resource to be
          created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySection"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySections
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionAssociations:
    get:
      tags:
      - surveySectionAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySectionAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: localCourseCode
        in: query
        description: The local code assigned by the School that identifies the course
          offering provided for the instruction of students.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolId
        in: query
        description: The identifier assigned to a school.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: schoolYear
        in: query
        description: The identifier for the school year.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sectionIdentifier
        in: query
        description: The local identifier assigned to a section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sessionName
        in: query
        description: The identifier for the calendar for the academic session (e.g.,
          2010/11, 2011 Summer).
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveySectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySectionAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySectionAssociation
      requestBody:
        description: The JSON representation of the "surveySectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionAssociations/{id}:
    get:
      tags:
      - surveySectionAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveySectionAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySectionAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySectionAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySectionAssociation" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySectionAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponses:
    get:
      tags:
      - surveySectionResponses
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySectionResponses
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      - name: sectionRating
        in: query
        description: Numeric rating computed from the survey responses for the section.
        schema:
          type: number
          format: double
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveySectionResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySectionResponses
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySectionResponse
      requestBody:
        description: The JSON representation of the "surveySectionResponse" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponse"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponses/{id}:
    get:
      tags:
      - surveySectionResponses
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionResponsesById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveySectionResponse"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySectionResponses
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySectionResponse
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySectionResponse" resource
          to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponse"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySectionResponses
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionResponseById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponseEducationOrganizationTargetAssociations:
    get:
      tags:
      - surveySectionResponseEducationOrganizationTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySectionResponseEducationOrganizationTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: educationOrganizationId
        in: query
        description: The identifier assigned to an education organization.
        schema:
          type: integer
          format: int32
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySectionResponseEducationOrganizationTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySectionResponseEducationOrganizationTargetAssociation
      requestBody:
        description: The JSON representation of the "surveySectionResponseEducationOrganizationTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponseEducationOrganizationTargetAssociations/{id}:
    get:
      tags:
      - surveySectionResponseEducationOrganizationTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionResponseEducationOrganizationTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySectionResponseEducationOrganizationTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySectionResponseEducationOrganizationTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySectionResponseEducationOrganizationTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponseEducationOrganizationTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySectionResponseEducationOrganizationTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionResponseEducationOrganizationTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/surveySectionResponsePersonTargetAssociations:
    get:
      tags:
      - surveySectionResponsePersonTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySectionResponsePersonTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: personId
        in: query
        description: A unique alphanumeric code assigned to a person.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: sourceSystemDescriptor
        in: query
        description: This descriptor defines the originating record source system
          for the person.
        schema:
          maxLength: 306
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySectionResponsePersonTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySectionResponsePersonTargetAssociation
      requestBody:
        description: The JSON representation of the "surveySectionResponsePersonTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /tpdm/surveySectionResponsePersonTargetAssociations/{id}:
    get:
      tags:
      - surveySectionResponsePersonTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionResponsePersonTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySectionResponsePersonTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySectionResponsePersonTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySectionResponsePersonTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tpdm_surveySectionResponsePersonTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySectionResponsePersonTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionResponsePersonTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponseStaffTargetAssociations:
    get:
      tags:
      - surveySectionResponseStaffTargetAssociations
      summary: Retrieves specific resources using the resource's property values (using
        the "Get" pattern).
      description: This GET operation provides access to resources using the "Get
        search pattern.  The values of any properties of the resource that are specified
        will be used to return all matching results (if it exists).
      operationId: getSurveySectionResponseStaffTargetAssociations
      parameters:
      - $ref: ""#/components/parameters/offset""
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/MinChangeVersion"
      - $ref: "#/components/parameters/MaxChangeVersion"
      - $ref: "#/components/parameters/totalCount"
      - name: staffUniqueId
        in: query
        description: A unique alphanumeric code assigned to a staff.
        schema:
          maxLength: 32
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: namespace
        in: query
        description: Namespace for the Survey.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyIdentifier
        in: query
        description: The unique survey identifier from the survey tool.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveyResponseIdentifier
        in: query
        description: The identifier of the survey typically from the survey application.
        schema:
          maxLength: 60
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: surveySectionTitle
        in: query
        description: The title or label for the survey section.
        schema:
          maxLength: 255
          type: string
          x-Ed-Fi-isIdentity: true
        x-Ed-Fi-isIdentity: true
      - name: id
        in: query
        schema:
          type: string
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    post:
      tags:
      - surveySectionResponseStaffTargetAssociations
      summary: Creates or updates resources based on the natural key values of the
        supplied resource.
      description: The POST operation can be used to create or update resources.
        In database terms, this is often referred to as an "upsert" operation
        (insert + update). Clients should NOT include the resource "id" in the
        JSON body because it will result in an error. The web service will identify
        whether the resource already exists based on the natural key values provided,
        and update or create the resource appropriately. It is recommended to use
        POST for both create and update except while updating natural key of a resource
        in which case PUT operation must be used.
      operationId: postSurveySectionResponseStaffTargetAssociation
      requestBody:
        description: The JSON representation of the "surveySectionResponseStaffTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
        required: true
      responses:
        "200":
          description: The resource was updated.  An updated ETag value is available
            in the ETag header of the response.
          content: {}
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
  /ed-fi/surveySectionResponseStaffTargetAssociations/{id}:
    get:
      tags:
      - surveySectionResponseStaffTargetAssociations
      summary: Retrieves a specific resource using the resource's identifier (using
        the "Get By Id" pattern).
      description: This GET operation retrieves a resource by the specified resource
        identifier.
      operationId: getSurveySectionResponseStaffTargetAssociationsById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfNoneMatch"
      responses:
        "200":
          description: The requested resource was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
        "304":
          $ref: "#/components/responses/NotModified"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    put:
      tags:
      - surveySectionResponseStaffTargetAssociations
      summary: Updates a resource based on the resource identifier.
      description: The PUT operation is used to update a resource by identifier.
        If the resource identifier ("id") is provided in the JSON body, it will
        be ignored. Additionally, this API resource is not configured for cascading
        natural key updates. Natural key values for this resource cannot be changed
        using PUT operation and will not be modified in the database, and so recommendation
        is to use POST as that supports upsert behavior.
      operationId: putSurveySectionResponseStaffTargetAssociation
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      requestBody:
        description: The JSON representation of the "surveySectionResponseStaffTargetAssociation
          resource to be created or updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edFi_surveySectionResponseStaffTargetAssociation"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/Updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
    delete:
      tags:
      - surveySectionResponseStaffTargetAssociations
      summary: Deletes an existing resource using the resource identifier.
      description: The DELETE operation is used to delete an existing resource by
        identifier. If the resource doesn't exist, an error will result (the resource
        will not be found).
      operationId: deleteSurveySectionResponseStaffTargetAssociationById
      parameters:
      - $ref: "#/components/parameters/id"
      - $ref: "#/components/parameters/IfMatch"
      responses:
        "204":
          $ref: "#/components/responses/Deleted"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "412":
          $ref: "#/components/responses/PreconditionFailed"
        "500":
          $ref: "#/components/responses/Error"
      deprecated: false
components:
  schemas:
    credentialExtensions:
      type: object
      properties:
        tpdm:
          $ref: "#/components/schemas/tpdm_credentialExtension"
    edFi_academicWeek:
      required:
      - beginDate
      - endDate
      - schoolReference
      - totalInstructionalDays
      - weekIdentifier
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        weekIdentifier:
          maxLength: 80
          type: string
          description: The school label for the week.
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        beginDate:
          type: string
          description: The start date for the academic week.
          format: date
        endDate:
          type: string
          description: The end date for the academic week.
          format: date
        totalInstructionalDays:
          type: integer
          description: The total instructional days during the academic week.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_academicWeekReference:
      required:
      - schoolId
      - weekIdentifier
      type: object
      properties:
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        weekIdentifier:
          maxLength: 80
          type: string
          description: The school label for the week.
        link:
          $ref: "#/components/schemas/link"
    edFi_account:
      required:
      - accountCodes
      - accountIdentifier
      - educationOrganizationReference
      - fiscalYear
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        accountCodes:
          type: array
          description: An unordered collection of accountAccountCodes. The set of
            account codes defined for the education accounting system organized
            by account code type (e.g., fund, function, object) that map to the
            account.
          items:
            $ref: "#/components/schemas/edFi_accountAccountCode"
        accountIdentifier:
          maxLength: 50
          type: string
          description: The alphanumeric string that identifies the account.
          x-Ed-Fi-isIdentity: true
        fiscalYear:
          type: integer
          description: The financial accounting year.
          format: int32
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        accountName:
          maxLength: 100
          type: string
          description: A descriptive name for the account.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_accountabilityRating:
      required:
      - educationOrganizationReference
      - rating
      - ratingTitle
      - schoolYearTypeReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        ratingTitle:
          maxLength: 60
          type: string
          description: The title of the rating (e.g., School Rating, Safety Score).
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        rating:
          maxLength: 35
          type: string
          description: An accountability rating level, designation, or assessment.
        ratingDate:
          type: string
          description: The date the rating was awarded.
          format: date
        ratingOrganization:
          maxLength: 35
          type: string
          description: The organization that assessed the rating.
        ratingProgram:
          maxLength: 30
          type: string
          description: The program associated with the AccountabilityRating (e.g.,
            NCLB, AEIS).
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_accountAccountCode:
      required:
      - accountCodeReference
      type: object
      properties:
        accountCodeReference:
          $ref: "#/components/schemas/edFi_accountCodeReference"
    edFi_accountCode:
      required:
      - accountClassificationDescriptor
      - accountCodeNumber
      - educationOrganizationReference
      - fiscalYear
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        accountClassificationDescriptor:
          maxLength: 306
          type: string
          description: The type of account code associated with the account.
          x-Ed-Fi-isIdentity: true
        accountCodeNumber:
          maxLength: 50
          type: string
          description: An account code defined for the education accounting system
            by the education organization.
          x-Ed-Fi-isIdentity: true
        fiscalYear:
          type: integer
          description: The financial accounting year.
          format: int32
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        accountCodeDescription:
          maxLength: 1024
          type: string
          description: A description of the account code.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_accountCodeReference:
      required:
      - accountClassificationDescriptor
      - accountCodeNumber
      - educationOrganizationId
      - fiscalYear
      type: object
      properties:
        accountClassificationDescriptor:
          maxLength: 306
          type: string
          description: The type of account code associated with the account.
        accountCodeNumber:
          maxLength: 50
          type: string
          description: An account code defined for the education accounting system
            by the education organization.
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        fiscalYear:
          type: integer
          description: The financial accounting year.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_accountReference:
      required:
      - accountIdentifier
      - educationOrganizationId
      - fiscalYear
      type: object
      properties:
        accountIdentifier:
          maxLength: 50
          type: string
          description: The alphanumeric string that identifies the account.
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        fiscalYear:
          type: integer
          description: The financial accounting year.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_actual:
      required:
      - accountReference
      - amountToDate
      - asOfDate
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        asOfDate:
          type: string
          description: The date of the reported actual element.
          format: date
          x-Ed-Fi-isIdentity: true
        accountReference:
          $ref: "#/components/schemas/edFi_accountReference"
        amountToDate:
          type: number
          description: Current balance for the account.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_assessment:
      required:
      - academicSubjects
      - assessmentIdentifier
      - assessmentTitle
      - namespace
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        academicSubjects:
          type: array
          description: An unordered collection of assessmentAcademicSubjects. The
            description of the content or subject area (e.g., arts, mathematics,
            reading, stenography, or a foreign language) of an assessment.
          items:
            $ref: "#/components/schemas/edFi_assessmentAcademicSubject"
        assessmentIdentifier:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment.
          x-Ed-Fi-isIdentity: true
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Assessment.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        adaptiveAssessment:
          type: boolean
          description: Indicates that the assessment is adaptive.
        assessedGradeLevels:
          type: array
          description: An unordered collection of assessmentAssessedGradeLevels. The
            grade level(s) for which an assessment is designed. The semantics of null
            is assumed to mean that the assessment is not associated with any grade
            level.
          items:
            $ref: "#/components/schemas/edFi_assessmentAssessedGradeLevel"
        assessmentCategoryDescriptor:
          maxLength: 306
          type: string
          description: "The category of an assessment based on format and content.\
            \ For example:        Achievement test        Advanced placement test\
            \ Alternate assessment/grade-level standards        Attitudinal test\
            \       Cognitive and perceptual skills test        ..."
        assessmentFamily:
          maxLength: 60
          type: string
          description: The AssessmentFamily this Assessment is a member of.
        assessmentForm:
          maxLength: 60
          type: string
          description: Identifies the form of the assessment, for example a regular
            versus makeup form, multiple choice versus constructed response, etc.
        assessmentTitle:
          maxLength: 100
          type: string
          description: The title or name of the Assessment.
        assessmentVersion:
          type: integer
          description: The version identifier for the assessment.
          format: int32
        contentStandard:
          $ref: "#/components/schemas/edFi_assessmentContentStandard"
        identificationCodes:
          type: array
          description: An unordered collection of assessmentIdentificationCodes.
            A unique number or alphanumeric code assigned to an assessment by a
            school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_assessmentIdentificationCode"
        languages:
          type: array
          description: An unordered collection of assessmentLanguages. An indication
            of the languages in which the assessment is designed.
          items:
            $ref: "#/components/schemas/edFi_assessmentLanguage"
        maxRawScore:
          type: number
          description: The maximum raw score achievable across all assessment items
            that are correct and scored at the maximum.
          format: double
        nomenclature:
          maxLength: 35
          type: string
          description: Reflects the specific nomenclature used for Assessment.
        performanceLevels:
          type: array
          description: "An unordered collection of assessmentPerformanceLevels. Definition\
            \ of the performance levels and the associated cut scores. Three styles\
            \ are supported:        1. Specification of performance level by minimum\
            \ and maximum score        2. Specification of performance level by cut\
            \ score, using only minimum score        3. Specification of performance\
            \ level without any mapping to scores."
          items:
            $ref: "#/components/schemas/edFi_assessmentPerformanceLevel"
        period:
          $ref: "#/components/schemas/edFi_assessmentPeriod"
        platformTypes:
          type: array
          description: An unordered collection of assessmentPlatformTypes. The platforms
            with which the assessment may be delivered.
          items:
            $ref: "#/components/schemas/edFi_assessmentPlatformType"
        programs:
          type: array
          description: An unordered collection of assessmentPrograms. The programs
            associated with the Assessment.
          items:
            $ref: "#/components/schemas/edFi_assessmentProgram"
        revisionDate:
          type: string
          description: The month, day, and year that the conceptual design for the
            assessment was most recently revised substantially.
          format: date
        scores:
          type: array
          description: An unordered collection of assessmentScores. Definition of
            the scores to be expected from this assessment.
          items:
            $ref: "#/components/schemas/edFi_assessmentScore"
        sections:
          type: array
          description: An unordered collection of assessmentSections. The Section(s)
            to which the Assessment is associated.
          items:
            $ref: "#/components/schemas/edFi_assessmentSection"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_assessmentAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The description of the content or subject area (e.g., arts,
            mathematics, reading, stenography, or a foreign language) of an assessment.
          x-Ed-Fi-isIdentity: true
    edFi_assessmentAssessedGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level(s) for which an assessment is designed. The
            semantics of null is assumed to mean that the assessment is not associated
            with any grade level.
          x-Ed-Fi-isIdentity: true
    edFi_assessmentContentStandard:
      required:
      - title
      type: object
      properties:
        publicationStatusDescriptor:
          maxLength: 306
          type: string
          description: The publication status of the document (i.e., Adopted, Draft,
            Published, Deprecated, Unknown).
        beginDate:
          type: string
          description: The beginning of the period during which this learning standard
            document is intended for use.
          format: date
        endDate:
          type: string
          description: The end of the period during which this learning standard document
            is intended for use.
          format: date
        publicationDate:
          type: string
          description: The date on which this content was first published.
          format: date
        publicationYear:
          type: integer
          description: The year at which this content was first published.
          format: int32
        title:
          maxLength: 75
          type: string
          description: The name of the content standard, for example Common Core.
        uri:
          maxLength: 255
          type: string
          description: An unambiguous reference to the standards using a network-resolvable
            URI.
        version:
          maxLength: 50
          type: string
          description: The version identifier for the content.
        mandatingEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        authors:
          type: array
          description: An unordered collection of assessmentContentStandardAuthors.
            The person or organization chiefly responsible for the intellectual content
            of the standard.
          items:
            $ref: "#/components/schemas/edFi_assessmentContentStandardAuthor"
    edFi_assessmentContentStandardAuthor:
      required:
      - author
      type: object
      properties:
        author:
          maxLength: 100
          type: string
          description: The person or organization chiefly responsible for the intellectual
            content of the standard.
          x-Ed-Fi-isIdentity: true
    edFi_assessmentIdentificationCode:
      required:
      - assessmentIdentificationSystemDescriptor
      - identificationCode
      type: object
      properties:
        assessmentIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: A coding scheme that is used for identification and record-keeping
            purposes by schools, social services, or other agencies to refer to
            an assessment.
          x-Ed-Fi-isIdentity: true
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the assessment identification
            code.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment
            by a school, school system, state, or other agency or entity.
    edFi_assessmentItem:
      required:
      - assessmentReference
      - identificationCode
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a space,
            room, site, building, individual, organization, program, or institution
            by a school, school system, state, or other agency or entity.
          x-Ed-Fi-isIdentity: true
        assessmentReference:
          $ref: "#/components/schemas/edFi_assessmentReference"
        assessmentItemCategoryDescriptor:
          maxLength: 306
          type: string
          description: "Category or type of the AssessmentItem. For example:\
             \ Multiple choice        Analytic        Prose        ..."
        assessmentItemURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the entry in an assessment
            item bank, which describes this content item.
        correctResponse:
          maxLength: 20
          type: string
          description: The correct response for the AssessmentItem.
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use PossibleResponse.CorrectResponse
            instead, which supports capture of all or a subset of all possible responses
            to an assessment item. Expect removal of this element in a future release.
        expectedTimeAssessed:
          maxLength: 30
          type: string
          description: The duration of time allotted for the AssessmentItem.
        itemText:
          maxLength: 1024
          type: string
          description: The text of the item.
        learningStandards:
          type: array
          description: An unordered collection of assessmentItemLearningStandards.
            LearningStandard tested by this item.
          items:
            $ref: "#/components/schemas/edFi_assessmentItemLearningStandard"
        maxRawScore:
          type: number
          description: The maximum raw score achievable across all assessment items
            that are correct and scored at the maximum.
          format: double
        nomenclature:
          maxLength: 35
          type: string
          description: Reflects the specific nomenclature used for AssessmentItem.
        possibleResponses:
          type: array
          description: An unordered collection of assessmentItemPossibleResponses.
            A possible response to an assessment item.
          items:
            $ref: "#/components/schemas/edFi_assessmentItemPossibleResponse"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_assessmentItemLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_assessmentItemPossibleResponse:
      required:
      - responseValue
      type: object
      properties:
        responseValue:
          maxLength: 60
          type: string
          description: The response value, often an option number or code value (e.g.,
            1, 2, A, B, true, false).
          x-Ed-Fi-isIdentity: true
        correctResponse:
          type: boolean
          description: Indicates the response is correct.
        responseDescription:
          maxLength: 1024
          type: string
          description: Additional text provided to define the response value.
    edFi_assessmentItemReference:
      required:
      - assessmentIdentifier
      - identificationCode
      - namespace
      type: object
      properties:
        assessmentIdentifier:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a space,
            room, site, building, individual, organization, program, or institution
            by a school, school system, state, or other agency or entity.
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Assessment.
        link:
          $ref: "#/components/schemas/link"
    edFi_assessmentLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: An indication of the languages in which the assessment is designed.
          x-Ed-Fi-isIdentity: true
    edFi_assessmentPerformanceLevel:
      required:
      - assessmentReportingMethodDescriptor
      - performanceLevelDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the instructor of the class uses to report
            the performance and achievement of all students. It may be a qualitative
            method such as individualized teacher comments or a quantitative method
            such as a letter or numerical grade. In some cases, more than one type
            of reporting method may be used.
          x-Ed-Fi-isIdentity: true
        performanceLevelDescriptor:
          maxLength: 306
          type: string
          description: The performance level(s) defined for the assessment.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score to make the indicated level of performance.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score required to make the indicated level of performance.
    edFi_assessmentPeriod:
      required:
      - assessmentPeriodDescriptor
      type: object
      properties:
        assessmentPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period of time in which an assessment is supposed to be
            administered (e.g., Beginning of Year, Middle of Year, End of Year).
        beginDate:
          type: string
          description: The first date the assessment is to be administered.
          format: date
        endDate:
          type: string
          description: The last date the assessment is to be administered.
          format: date
    edFi_assessmentPlatformType:
      required:
      - platformTypeDescriptor
      type: object
      properties:
        platformTypeDescriptor:
          maxLength: 306
          type: string
          description: The platforms with which the assessment may be delivered.
          x-Ed-Fi-isIdentity: true
    edFi_assessmentProgram:
      required:
      - programReference
      type: object
      properties:
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
    edFi_assessmentReference:
      required:
      - assessmentIdentifier
      - namespace
      type: object
      properties:
        assessmentIdentifier:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment.
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Assessment.
        link:
          $ref: "#/components/schemas/link"
    edFi_assessmentScore:
      required:
      - assessmentReportingMethodDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the administrator of the assessment uses to
            report the performance and achievement of all students. It may be a qualitative
            method such as performance level descriptors or a quantitative method
            such as a numerical grade or cut score. More than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score possible on the assessment.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score possible on the assessment.
    edFi_assessmentScoreRangeLearningStandard:
      required:
      - assessmentReference
      - learningStandards
      - maximumScore
      - minimumScore
      - scoreRangeId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        learningStandards:
          type: array
          description: An unordered collection of assessmentScoreRangeLearningStandardLearningStandards.
            LearningStandard associated with the score range.
          items:
            $ref: "#/components/schemas/edFi_assessmentScoreRangeLearningStandardLearningStandard"
        scoreRangeId:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to the score
            range associated with one or more learning standards.
          x-Ed-Fi-isIdentity: true
        assessmentReference:
          $ref: "#/components/schemas/edFi_assessmentReference"
        objectiveAssessmentReference:
          $ref: "#/components/schemas/edFi_objectiveAssessmentReference"
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The assessment reporting method defined (e.g., scale score,
            RIT scale score) associated with the referenced learning standard(s).
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score in the score range.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score in the score range.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_assessmentScoreRangeLearningStandardLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_assessmentSection:
      required:
      - sectionReference
      type: object
      properties:
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
    edFi_bellSchedule:
      required:
      - bellScheduleName
      - classPeriods
      - schoolReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        bellScheduleName:
          maxLength: 60
          type: string
          description: Name or title of the BellSchedule.
          x-Ed-Fi-isIdentity: true
        classPeriods:
          type: array
          description: An unordered collection of bellScheduleClassPeriods. The class
            periods that compose this BellSchedule.
          items:
            $ref: "#/components/schemas/edFi_bellScheduleClassPeriod"
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        alternateDayName:
          maxLength: 20
          type: string
          description: An alternate name for the day (e.g., Red, Blue).
        dates:
          type: array
          description: An unordered collection of bellScheduleDates. The dates for
            which the BellSchedule applies.
          items:
            $ref: "#/components/schemas/edFi_bellScheduleDate"
        endTime:
          type: string
          description: An indication of the time of day the bell schedule ends.
        gradeLevels:
          type: array
          description: An unordered collection of bellScheduleGradeLevels. The grade
            levels the particular BellSchedule applies to.
          items:
            $ref: "#/components/schemas/edFi_bellScheduleGradeLevel"
        startTime:
          type: string
          description: An indication of the time of day the bell schedule begins.
        totalInstructionalTime:
          type: integer
          description: The total instructional time in minutes per day for the bell
            schedule.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_bellScheduleClassPeriod:
      required:
      - classPeriodReference
      type: object
      properties:
        classPeriodReference:
          $ref: "#/components/schemas/edFi_classPeriodReference"
    edFi_bellScheduleDate:
      required:
      - date
      type: object
      properties:
        date:
          type: string
          description: The dates for which the BellSchedule applies.
          format: date
          x-Ed-Fi-isIdentity: true
    edFi_bellScheduleGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels the particular BellSchedule applies to.
          x-Ed-Fi-isIdentity: true
    edFi_budget:
      required:
      - accountReference
      - amount
      - asOfDate
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        asOfDate:
          type: string
          description: The date of the reported budget element.
          format: date
          x-Ed-Fi-isIdentity: true
        accountReference:
          $ref: "#/components/schemas/edFi_accountReference"
        amount:
          type: number
          description: Amount budgeted for the account for this fiscal year.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_calendar:
      required:
      - calendarCode
      - calendarTypeDescriptor
      - schoolReference
      - schoolYearTypeReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        calendarCode:
          maxLength: 60
          type: string
          description: The identifier for the Calendar.
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        calendarTypeDescriptor:
          maxLength: 306
          type: string
          description: Indicates the type of Calendar.
        gradeLevels:
          type: array
          description: An unordered collection of calendarGradeLevels. Indicates the
            GradeLevel associated with the Calendar.
          items:
            $ref: "#/components/schemas/edFi_calendarGradeLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_calendarDate:
      required:
      - calendarEvents
      - calendarReference
      - date
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        calendarEvents:
          type: array
          description: An unordered collection of calendarDateCalendarEvents. The
            type of scheduled or unscheduled event for the day.
          items:
            $ref: "#/components/schemas/edFi_calendarDateCalendarEvent"
        date:
          type: string
          description: The month, day, and year of the CalendarEvent.
          format: date
          x-Ed-Fi-isIdentity: true
        calendarReference:
          $ref: "#/components/schemas/edFi_calendarReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_calendarDateCalendarEvent:
      required:
      - calendarEventDescriptor
      type: object
      properties:
        calendarEventDescriptor:
          maxLength: 306
          type: string
          description: The type of scheduled or unscheduled event for the day.
          x-Ed-Fi-isIdentity: true
    edFi_calendarDateReference:
      required:
      - calendarCode
      - date
      - schoolId
      - schoolYear
      type: object
      properties:
        calendarCode:
          maxLength: 60
          type: string
          description: The identifier for the Calendar.
        date:
          type: string
          description: The month, day, and year of the CalendarEvent.
          format: date
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year associated with the Calendar.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_calendarGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Indicates the GradeLevel associated with the Calendar.
          x-Ed-Fi-isIdentity: true
    edFi_calendarReference:
      required:
      - calendarCode
      - schoolId
      - schoolYear
      type: object
      properties:
        calendarCode:
          maxLength: 60
          type: string
          description: The identifier for the Calendar.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year associated with the Calendar.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_classPeriod:
      required:
      - classPeriodName
      - schoolReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        classPeriodName:
          maxLength: 60
          type: string
          description: An indication of the portion of a typical daily session in
            which students receive instruction in a specified subject (e.g., morning,
            sixth period, block period, or AB schedules).
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        meetingTimes:
          type: array
          description: An unordered collection of classPeriodMeetingTimes. The meeting
            time(s) for a class period.
          items:
            $ref: "#/components/schemas/edFi_classPeriodMeetingTime"
        officialAttendancePeriod:
          type: boolean
          description: Indicator of whether this class period is used for official
            daily attendance. Alternatively, official daily attendance may be tied
            to a Section.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_classPeriodMeetingTime:
      required:
      - endTime
      - startTime
      type: object
      properties:
        endTime:
          type: string
          description: An indication of the time of day the meeting time ends.
          x-Ed-Fi-isIdentity: true
        startTime:
          type: string
          description: An indication of the time of day the meeting time begins.
          x-Ed-Fi-isIdentity: true
    edFi_classPeriodReference:
      required:
      - classPeriodName
      - schoolId
      type: object
      properties:
        classPeriodName:
          maxLength: 60
          type: string
          description: An indication of the portion of a typical daily session in
            which students receive instruction in a specified subject (e.g., morning,
            sixth period, block period, or AB schedules).
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_cohort:
      required:
      - cohortIdentifier
      - cohortTypeDescriptor
      - educationOrganizationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        cohortIdentifier:
          maxLength: 20
          type: string
          description: The name or ID for the Cohort.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The academic subject associated with an academic intervention.
        cohortDescription:
          maxLength: 1024
          type: string
          description: The description of the Cohort and its purpose.
        cohortScopeDescriptor:
          maxLength: 306
          type: string
          description: The scope of cohort (e.g., school, district, classroom).
        cohortTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of cohort (e.g., academic intervention, classroom
            breakout).
        programs:
          type: array
          description: An unordered collection of cohortPrograms. The (optional)
            program associated with this Cohort (e.g., special education).
          items:
            $ref: "#/components/schemas/edFi_cohortProgram"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_cohortProgram:
      required:
      - programReference
      type: object
      properties:
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
    edFi_cohortReference:
      required:
      - cohortIdentifier
      - educationOrganizationId
      type: object
      properties:
        cohortIdentifier:
          maxLength: 20
          type: string
          description: The name or ID for the Cohort.
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_communityOrganization:
      required:
      - categories
      - communityOrganizationId
      - nameOfInstitution
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        communityOrganizationId:
          type: integer
          description: The identifier assigned to a CommunityOrganization.
          format: int32
          x-Ed-Fi-isIdentity: true
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_communityOrganizationReference:
      required:
      - communityOrganizationId
      type: object
      properties:
        communityOrganizationId:
          type: integer
          description: The identifier assigned to a CommunityOrganization.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_communityProvider:
      required:
      - categories
      - communityProviderId
      - nameOfInstitution
      - providerCategoryDescriptor
      - providerStatusDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        communityProviderId:
          type: integer
          description: The identifier assigned to a CommunityProvider.
          format: int32
          x-Ed-Fi-isIdentity: true
        communityOrganizationReference:
          $ref: "#/components/schemas/edFi_communityOrganizationReference"
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        licenseExemptIndicator:
          type: boolean
          description: An indication of whether the provider is exempt from having
            a license.
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        providerCategoryDescriptor:
          maxLength: 306
          type: string
          description: Indicates the category of the provider.
        providerProfitabilityDescriptor:
          maxLength: 306
          type: string
          description: Indicates the profitability status of the provider.
        providerStatusDescriptor:
          maxLength: 306
          type: string
          description: Indicates the status of the provider.
        schoolIndicator:
          type: boolean
          description: An indication of whether the community provider is a school.
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_communityProviderLicense:
      required:
      - communityProviderReference
      - licenseEffectiveDate
      - licenseIdentifier
      - licenseTypeDescriptor
      - licensingOrganization
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        licenseIdentifier:
          maxLength: 20
          type: string
          description: The unique identifier issued by the licensing organization.
          x-Ed-Fi-isIdentity: true
        licensingOrganization:
          maxLength: 75
          type: string
          description: The organization issuing the license.
          x-Ed-Fi-isIdentity: true
        communityProviderReference:
          $ref: "#/components/schemas/edFi_communityProviderReference"
        authorizedFacilityCapacity:
          type: integer
          description: The maximum number that can be contained or accommodated which
            a provider is authorized or licensed to serve.
          format: int32
        licenseEffectiveDate:
          type: string
          description: The month, day, and year on which a license is active or becomes
            effective.
          format: date
        licenseExpirationDate:
          type: string
          description: The month, day, and year on which a license will expire.
          format: date
        licenseIssueDate:
          type: string
          description: The month, day, and year on which an active license was issued.
          format: date
        licenseStatusDescriptor:
          maxLength: 306
          type: string
          description: An indication of the status of the license.
        licenseTypeDescriptor:
          maxLength: 306
          type: string
          description: An indication of the category of the license.
        oldestAgeAuthorizedToServe:
          type: integer
          description: The oldest age of children a provider is authorized or licensed
            to serve.
          format: int32
        youngestAgeAuthorizedToServe:
          type: integer
          description: The youngest age of children a provider is authorized or licensed
            to serve.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_communityProviderReference:
      required:
      - communityProviderId
      type: object
      properties:
        communityProviderId:
          type: integer
          description: The identifier assigned to a CommunityProvider.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_competencyObjective:
      required:
      - educationOrganizationReference
      - objective
      - objectiveGradeLevelDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        objective:
          maxLength: 60
          type: string
          description: The designated title of the CompetencyObjective.
          x-Ed-Fi-isIdentity: true
        objectiveGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level for which the CompetencyObjective is targeted.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        competencyObjectiveId:
          maxLength: 60
          type: string
          description: The Identifier for the CompetencyObjective.
        description:
          maxLength: 1024
          type: string
          description: The description of the student competency objective.
        successCriteria:
          maxLength: 150
          type: string
          description: One or more statements that describes the criteria used by
            teachers and students to check for attainment of a competency objective.
            This criteria gives clear indications as to the degree to which learning
            is moving through the Zone or Proximal Development toward independent
            achievement of the CompetencyObjective.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_competencyObjectiveReference:
      required:
      - educationOrganizationId
      - objective
      - objectiveGradeLevelDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        objective:
          maxLength: 60
          type: string
          description: The designated title of the CompetencyObjective.
        objectiveGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level for which the CompetencyObjective is targeted.
        link:
          $ref: "#/components/schemas/link"
    edFi_contractedStaff:
      required:
      - accountReference
      - amountToDate
      - asOfDate
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        asOfDate:
          type: string
          description: The date of the reported contracted staff element.
          format: date
          x-Ed-Fi-isIdentity: true
        accountReference:
          $ref: "#/components/schemas/edFi_accountReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        amountToDate:
          type: number
          description: Current balance (amount paid to contractor) for account for
            the fiscal year.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_course:
      required:
      - courseCode
      - courseTitle
      - educationOrganizationReference
      - identificationCodes
      - numberOfParts
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        courseCode:
          maxLength: 60
          type: string
          description: A unique alphanumeric code assigned to a course.
          x-Ed-Fi-isIdentity: true
        identificationCodes:
          type: array
          description: An unordered collection of courseIdentificationCodes. The code
            that identifies the organization of subject matter and related learning
            experiences provided for the instruction of students.
          items:
            $ref: "#/components/schemas/edFi_courseIdentificationCode"
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The intended major subject area of the course.
        careerPathwayDescriptor:
          maxLength: 306
          type: string
          description: Indicates the career cluster or pathway the course is associated
            with as part of a CTE curriculum.
        competencyLevels:
          type: array
          description: An unordered collection of courseCompetencyLevels. The competency
            levels defined to rate the student for the course.
          items:
            $ref: "#/components/schemas/edFi_courseCompetencyLevel"
        courseDefinedByDescriptor:
          maxLength: 306
          type: string
          description: Specifies whether the course was defined by the SEA, LEA,
            School, or national organization.
        courseDescription:
          maxLength: 1024
          type: string
          description: A description of the content standards and goals covered in
            the course. Reference may be made to state or national content standards.
        courseGPAApplicabilityDescriptor:
          maxLength: 306
          type: string
          description: An indicator of whether or not the course being described
            is included in the computation of the student's Grade Point Average,
            and if so, if it is weighted differently from regular courses.
        courseTitle:
          maxLength: 60
          type: string
          description: The descriptive name given to a course of study offered in
            a school or other institution or organization. In departmentalized classes
            at the elementary, secondary, and postsecondary levels (and for staff
            development activities), this refers to the name by which a course is
            identified (e.g., American History, English III). For elementary and
            other non-departmentalized classes, it refers to any portion of the
            instruction for which a grade or report is assigned (e.g., reading,
            composition, spelling, and language arts).
        dateCourseAdopted:
          type: string
          description: Date the course was adopted by the education agency.
          format: date
        highSchoolCourseRequirement:
          type: boolean
          description: An indication that this course may satisfy high school graduation
            requirements in the course's subject area.
        learningObjectives:
          type: array
          description: An unordered collection of courseLearningObjectives. Learning
            Objectives to be mastered in the course.
          items:
            $ref: "#/components/schemas/edFi_courseLearningObjective"
        learningStandards:
          type: array
          description: An unordered collection of courseLearningStandards. Learning
            Standard(s) to be taught by the course.
          items:
            $ref: "#/components/schemas/edFi_courseLearningStandard"
        levelCharacteristics:
          type: array
          description: An unordered collection of courseLevelCharacteristics. The
            type of specific program or designation with which the course is associated
            (e.g., AP, IB, Dual Credit, CTE).
          items:
            $ref: "#/components/schemas/edFi_courseLevelCharacteristic"
        maxCompletionsForCredit:
          type: integer
          description: Designates how many times the course may be taken with credit
            received by the student.
          format: int32
        maximumAvailableCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        maximumAvailableCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        maximumAvailableCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        minimumAvailableCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        minimumAvailableCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        minimumAvailableCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        numberOfParts:
          type: integer
          description: The number of parts identified for a course.
          format: int32
        offeredGradeLevels:
          type: array
          description: An unordered collection of courseOfferedGradeLevels. The grade
            levels in which the course is offered.
          items:
            $ref: "#/components/schemas/edFi_courseOfferedGradeLevel"
        timeRequiredForCompletion:
          type: integer
          description: The actual or estimated number of clock minutes required for
            class completion.  This number is especially important for career and
            technical education classes and may represent (in minutes) the clock hour
            requirement of the class.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_courseCompetencyLevel:
      required:
      - competencyLevelDescriptor
      type: object
      properties:
        competencyLevelDescriptor:
          maxLength: 306
          type: string
          description: The competency levels defined to rate the student for the course.
          x-Ed-Fi-isIdentity: true
    edFi_courseIdentificationCode:
      required:
      - courseIdentificationSystemDescriptor
      - identificationCode
      type: object
      properties:
        courseIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: A system that is used to identify the organization of subject
            matter and related learning experiences provided for the instruction of
            students.
          x-Ed-Fi-isIdentity: true
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the Identification
            Code.
        courseCatalogURL:
          maxLength: 255
          type: string
          description: The URL for the course catalog that defines the course identification
            code.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a course
            by a school, school system, state, or other agency or entity. For multi-part
            course codes, concatenate the parts separated by a \"/\". For example,
            consider the following SCED code-    subject = 20 Math    course = 272
            Geometry    level = G General    credits = 1.00   course sequence 1
            of 1- would be entered as 20/272/G/1.00/1 of 1.
    edFi_courseLearningObjective:
      required:
      - learningObjectiveReference
      type: object
      properties:
        learningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
    edFi_courseLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_courseLevelCharacteristic:
      required:
      - courseLevelCharacteristicDescriptor
      type: object
      properties:
        courseLevelCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: The type of specific program or designation with which the
            course is associated (e.g., AP, IB, Dual Credit, CTE).
          x-Ed-Fi-isIdentity: true
    edFi_courseOfferedGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels in which the course is offered.
          x-Ed-Fi-isIdentity: true
    edFi_courseOffering:
      required:
      - courseReference
      - localCourseCode
      - schoolReference
      - sessionReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
          x-Ed-Fi-isIdentity: true
        courseReference:
          $ref: "#/components/schemas/edFi_courseReference"
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        sessionReference:
          $ref: "#/components/schemas/edFi_sessionReference"
        courseLevelCharacteristics:
          type: array
          description: An unordered collection of courseOfferingCourseLevelCharacteristics.
            The type of specific program or designation with which the course offering
            is associated (e.g., AP, IB, Dual Credit, CTE). This collection should
            only be populated if it differs from the Course Level Characteristics
            identified at the Course level.
          items:
            $ref: "#/components/schemas/edFi_courseOfferingCourseLevelCharacteristic"
        curriculumUseds:
          type: array
          description: An unordered collection of courseOfferingCurriculumUseds. The
            type of curriculum used in an early learning classroom or group.
          items:
            $ref: "#/components/schemas/edFi_courseOfferingCurriculumUsed"
        instructionalTimePlanned:
          type: integer
          description: The planned total number of clock minutes of instruction for
            this course offering. Generally, this should be at least as many minutes
            as is required for completion by the related state- or district-defined
            course.
          format: int32
        localCourseTitle:
          maxLength: 60
          type: string
          description: The descriptive name given to a course of study offered in
            the school, if different from the CourseTitle.
        offeredGradeLevels:
          type: array
          description: An unordered collection of courseOfferingOfferedGradeLevels.
            The grade levels in which the course is offered. This collection should
            only be populated if it differs from the Offered Grade Levels identified
            at the Course level.
          items:
            $ref: "#/components/schemas/edFi_courseOfferingOfferedGradeLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_courseOfferingCourseLevelCharacteristic:
      required:
      - courseLevelCharacteristicDescriptor
      type: object
      properties:
        courseLevelCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: The type of specific program or designation with which the
            course offering is associated (e.g., AP, IB, Dual Credit, CTE). This
            collection should only be populated if it differs from the Course Level
            Characteristics identified at the Course level.
          x-Ed-Fi-isIdentity: true
    edFi_courseOfferingCurriculumUsed:
      required:
      - curriculumUsedDescriptor
      type: object
      properties:
        curriculumUsedDescriptor:
          maxLength: 306
          type: string
          description: The type of curriculum used in an early learning classroom
            or group.
          x-Ed-Fi-isIdentity: true
    edFi_courseOfferingOfferedGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels in which the course is offered. This collection
            should only be populated if it differs from the Offered Grade Levels identified
            at the Course level.
          x-Ed-Fi-isIdentity: true
    edFi_courseOfferingReference:
      required:
      - localCourseCode
      - schoolId
      - schoolYear
      - sessionName
      type: object
      properties:
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        link:
          $ref: "#/components/schemas/link"
    edFi_courseReference:
      required:
      - courseCode
      - educationOrganizationId
      type: object
      properties:
        courseCode:
          maxLength: 60
          type: string
          description: A unique alphanumeric code assigned to a course.
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_courseTranscript:
      required:
      - courseAttemptResultDescriptor
      - courseReference
      - earnedCredits
      - studentAcademicRecordReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        courseAttemptResultDescriptor:
          maxLength: 306
          type: string
          description: "The result from the student's attempt to take the course,\
            \ for example:        Pass        Fail        Incomplete        Withdrawn."
          x-Ed-Fi-isIdentity: true
        courseReference:
          $ref: "#/components/schemas/edFi_courseReference"
        externalEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        studentAcademicRecordReference:
          $ref: "#/components/schemas/edFi_studentAcademicRecordReference"
        academicSubjects:
          type: array
          description: An unordered collection of courseTranscriptAcademicSubjects.
            The subject area for the course transcript credits awarded in the course
            transcript.
          items:
            $ref: "#/components/schemas/edFi_courseTranscriptAcademicSubject"
        alternativeCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the school that identifies the
            course offering, the code from an external educational organization,
            or other alternate course code.
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use AlternativeCourseIdentificationCode
            instead. Expect removal of this element in a future release.
        alternativeCourseIdentificationCodes:
          type: array
          description: An unordered collection of courseTranscriptAlternativeCourseIdentificationCodes.
            The code that identifies the course, course offering, the code from
            an external educational organization, or other alternate course code.
          items:
            $ref: "#/components/schemas/edFi_courseTranscriptAlternativeCourseIdentificationCode"
        alternativeCourseTitle:
          maxLength: 60
          type: string
          description: The descriptive name given to a course of study offered in
            the school, if different from the CourseTitle.
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the course identification
            code.
        attemptedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        attemptedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        attemptedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        courseCatalogURL:
          maxLength: 255
          type: string
          description: The URL for the course catalog that defines the course identification
            code.
        courseRepeatCodeDescriptor:
          maxLength: 306
          type: string
          description: Indicates that an academic course has been repeated by a student
            and how that repeat is to be computed in the student's academic grade
            average.
        courseTitle:
          maxLength: 60
          type: string
          description: The descriptive name given to a course of study offered in
            a school or other institution or organization. In departmentalized classes
            at the elementary, secondary, and postsecondary levels (and for staff
            development activities), this refers to the name by which a course is
            identified (e.g., American History, English III). For elementary and
            other non-departmentalized classes, it refers to any portion of the
            instruction for which a grade or report is assigned (e.g., reading,
            composition, spelling, language arts).
        creditCategories:
          type: array
          description: An unordered collection of courseTranscriptCreditCategories.
            A categorization for the course transcript credits awarded in the course
            transcript.
          items:
            $ref: "#/components/schemas/edFi_courseTranscriptCreditCategory"
        earnedAdditionalCredits:
          type: array
          description: An unordered collection of courseTranscriptEarnedAdditionalCredits.
            The number of additional credits a student attempted and could earn
            for successfully completing a given course (e.g., dual credit, AP, IB).
          items:
            $ref: "#/components/schemas/edFi_courseTranscriptEarnedAdditionalCredits"
        earnedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        earnedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        earnedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        externalEducationOrganizationNameOfInstitution:
          maxLength: 75
          type: string
          description: Name of the external institution where the student completed
            the course; to be used only when the reference ExternalEducationOrganization
            is not available.
        finalLetterGradeEarned:
          maxLength: 20
          type: string
          description: The final indicator of student performance in a class as submitted
            by the instructor.
        finalNumericGradeEarned:
          type: number
          description: The final indicator of student performance in a class as submitted
            by the instructor.
          format: double
        methodCreditEarnedDescriptor:
          maxLength: 306
          type: string
          description: The method the credits were earned (e.g., Classroom, Examination,
            Transfer).
        partialCourseTranscriptAwards:
          type: array
          description: An unordered collection of courseTranscriptPartialCourseTranscriptAwards.
            A collection of partial credits and/or grades a student earned against
            the course over the session, used when awards of credit are incremental.
          items:
            $ref: "#/components/schemas/edFi_courseTranscriptPartialCourseTranscriptAwards"
        whenTakenGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Student's grade level at time of course.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_courseTranscriptAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The subject area for the course transcript credits awarded
            in the course transcript.
          x-Ed-Fi-isIdentity: true
    edFi_courseTranscriptAlternativeCourseIdentificationCode:
      required:
      - courseIdentificationSystemDescriptor
      - identificationCode
      type: object
      properties:
        courseIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: A system that is used to identify the organization of subject
            matter and related learning experiences provided for the instruction of
            students.
          x-Ed-Fi-isIdentity: true
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the Identification
            Code.
        courseCatalogURL:
          maxLength: 255
          type: string
          description: The URL for the course catalog that defines the course identification
            code.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a course
            by a school, school system, state, or other agency or entity. For multi-part
            course codes, concatenate the parts separated by a \"/\". For example,
            consider the following SCED code-    subject = 20 Math    course = 272
            Geometry    level = G General    credits = 1.00   course sequence 1
            of 1- would be entered as 20/272/G/1.00/1 of 1.
    edFi_courseTranscriptCreditCategory:
      required:
      - creditCategoryDescriptor
      type: object
      properties:
        creditCategoryDescriptor:
          maxLength: 306
          type: string
          description: A categorization for the course transcript credits awarded
            in the course transcript.
          x-Ed-Fi-isIdentity: true
    edFi_courseTranscriptEarnedAdditionalCredits:
      required:
      - additionalCreditTypeDescriptor
      - credits
      type: object
      properties:
        additionalCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
          x-Ed-Fi-isIdentity: true
        credits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course
          format: double
    edFi_courseTranscriptPartialCourseTranscriptAwards:
      required:
      - awardDate
      - earnedCredits
      type: object
      properties:
        awardDate:
          type: string
          description: The date the partial credits and/or grades were awarded or
            earned.
          format: date
          x-Ed-Fi-isIdentity: true
        methodCreditEarnedDescriptor:
          maxLength: 306
          type: string
          description: The method the credits were earned.
        earnedCredits:
          type: number
          description: The number of credits a student earned for completing a given
            course.
          format: double
        letterGradeEarned:
          maxLength: 20
          type: string
          description: The indicator of student performance as submitted by the instructor.
        numericGradeEarned:
          maxLength: 20
          type: string
          description: The indicator of student performance as submitted by the instructor.
    edFi_credential:
      required:
      - credentialIdentifier
      - credentialTypeDescriptor
      - issuanceDate
      - namespace
      - stateOfIssueStateAbbreviationDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        credentialIdentifier:
          maxLength: 60
          type: string
          description: Identifier or serial number assigned to the credential.
          x-Ed-Fi-isIdentity: true
        stateOfIssueStateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the name of the state (within the United
            States) or extra-state jurisdiction in which a license/credential was
            issued.
          x-Ed-Fi-isIdentity: true
        academicSubjects:
          type: array
          description: An unordered collection of credentialAcademicSubjects. The
            academic subjects to which the credential pertains.
          items:
            $ref: "#/components/schemas/edFi_credentialAcademicSubject"
        credentialFieldDescriptor:
          maxLength: 306
          type: string
          description: The field of certification for the certificate (e.g., Mathematics,
            Music).
        credentialTypeDescriptor:
          maxLength: 306
          type: string
          description: An indication of the category of credential an individual holds.
        effectiveDate:
          type: string
          description: The year, month and day on which an active credential held
            by an individual was issued.
          format: date
        endorsements:
          type: array
          description: An unordered collection of credentialEndorsements. Endorsements
            are attachments to teaching certificates and indicate areas of specialization.
          items:
            $ref: "#/components/schemas/edFi_credentialEndorsement"
        expirationDate:
          type: string
          description: The month, day, and year on which an active credential held
            by an individual will expire.
          format: date
        gradeLevels:
          type: array
          description: An unordered collection of credentialGradeLevels. The grade
            level(s) certified for teaching.
          items:
            $ref: "#/components/schemas/edFi_credentialGradeLevel"
        issuanceDate:
          type: string
          description: The month, day, and year on which an active credential was
            issued to an individual.
          format: date
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Credential.
        teachingCredentialBasisDescriptor:
          maxLength: 306
          type: string
          description: An indication of the pre-determined criteria for granting the
            teaching credential that an individual holds.
        teachingCredentialDescriptor:
          maxLength: 306
          type: string
          description: An indication of the category of a legal document giving authorization
            to perform teaching assignment services.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
        _ext:
          $ref: "#/components/schemas/credentialExtensions"
    edFi_credentialAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The academic subjects to which the credential pertains.
          x-Ed-Fi-isIdentity: true
    edFi_credentialEndorsement:
      required:
      - credentialEndorsement
      type: object
      properties:
        credentialEndorsement:
          maxLength: 255
          type: string
          description: Endorsements are attachments to teaching certificates and indicate
            areas of specialization.
          x-Ed-Fi-isIdentity: true
    edFi_credentialGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level(s) certified for teaching.
          x-Ed-Fi-isIdentity: true
    edFi_credentialReference:
      required:
      - credentialIdentifier
      - stateOfIssueStateAbbreviationDescriptor
      type: object
      properties:
        credentialIdentifier:
          maxLength: 60
          type: string
          description: Identifier or serial number assigned to the credential.
        stateOfIssueStateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the name of the state (within the United
            States) or extra-state jurisdiction in which a license/credential was
            issued.
        link:
          $ref: "#/components/schemas/link"
    edFi_disciplineAction:
      required:
      - disciplineActionIdentifier
      - disciplineDate
      - disciplines
      - responsibilitySchoolReference
      - studentDisciplineIncidentAssociations
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        disciplineActionIdentifier:
          maxLength: 20
          type: string
          description: Identifier assigned by the education organization to the DisciplineAction.
          x-Ed-Fi-isIdentity: true
        disciplineDate:
          type: string
          description: The date of the DisciplineAction.
          format: date
          x-Ed-Fi-isIdentity: true
        disciplines:
          type: array
          description: An unordered collection of disciplineActionDisciplines. Type
            of action, such as removal from the classroom, used to discipline the
            student involved as a perpetrator in a discipline incident.
          items:
            $ref: "#/components/schemas/edFi_disciplineActionDiscipline"
        studentDisciplineIncidentAssociations:
          type: array
          description: An unordered collection of disciplineActionStudentDisciplineIncidentAssociations.
            Reference to the DisciplineIncident associated with the DisciplineAction.
          items:
            $ref: "#/components/schemas/edFi_disciplineActionStudentDisciplineIncidentAssociation"
        assignmentSchoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        responsibilitySchoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        actualDisciplineActionLength:
          type: number
          description: Indicates the actual length in school days of a student's disciplinary
            assignment.
          format: double
        disciplineActionLength:
          type: number
          description: The length of time in school days for the DisciplineAction
            (e.g. removal, detention), if applicable.
          format: double
        disciplineActionLengthDifferenceReasonDescriptor:
          maxLength: 306
          type: string
          description: Indicates the reason for the difference, if any, between the
            official and actual lengths of a student's disciplinary assignment.
        iepPlacementMeetingIndicator:
          type: boolean
          description: An indication as to whether an offense and/or disciplinary
            action resulted in a meeting of a student's Individualized Education Program
            (IEP) team to determine appropriate placement.
        receivedEducationServicesDuringExpulsion:
          type: boolean
          description: An indication of whether the student received educational services
            when removed from the regular school program for disciplinary reasons.
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use the
            Discipline descriptor value "Explusion with Services" instead. Expect
            removal of this element in a future release.
        relatedToZeroTolerancePolicy:
          type: boolean
          description: An indication of whether or not this disciplinary action taken
            against a student was imposed as a consequence of state or local zero
            tolerance policies.
        staffs:
          type: array
          description: An unordered collection of disciplineActionStaffs. The staff
            responsible for enforcing the DisciplineAction.
          items:
            $ref: "#/components/schemas/edFi_disciplineActionStaff"
        studentDisciplineIncidentBehaviorAssociations:
          type: array
          description: An unordered collection of disciplineActionStudentDisciplineIncidentBehaviorAssociations.
            A reference to the behavior(s) by the student that led or contributed
            to this specific action.
          items:
            $ref: "#/components/schemas/edFi_disciplineActionStudentDisciplineIncidentBehaviorAssociation"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_disciplineActionDiscipline:
      required:
      - disciplineDescriptor
      type: object
      properties:
        disciplineDescriptor:
          maxLength: 306
          type: string
          description: Type of action, such as removal from the classroom, used to
            discipline the student involved as a perpetrator in a discipline incident.
          x-Ed-Fi-isIdentity: true
    edFi_disciplineActionStaff:
      required:
      - staffReference
      type: object
      properties:
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
    edFi_disciplineActionStudentDisciplineIncidentAssociation:
      required:
      - studentDisciplineIncidentAssociationReference
      type: object
      properties:
        studentDisciplineIncidentAssociationReference:
          $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociationReference"
    edFi_disciplineActionStudentDisciplineIncidentBehaviorAssociation:
      required:
      - studentDisciplineIncidentBehaviorAssociationReference
      type: object
      properties:
        studentDisciplineIncidentBehaviorAssociationReference:
          $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociationReference"
    edFi_disciplineIncident:
      required:
      - incidentDate
      - incidentIdentifier
      - schoolReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        incidentIdentifier:
          maxLength: 20
          type: string
          description: A locally assigned unique identifier (within the school or
            school district) to identify each specific DisciplineIncident or occurrence.
            The same identifier should be used to document the entire DisciplineIncident
            even if it included multiple offenses and multiple offenders.
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        behaviors:
          type: array
          description: An unordered collection of disciplineIncidentBehaviors. Describes
            behavior by category and provides a detailed description.
          items:
            $ref: "#/components/schemas/edFi_disciplineIncidentBehavior"
        caseNumber:
          maxLength: 20
          type: string
          description: The case number assigned to the DisciplineIncident by law enforcement
            or other organization.
        externalParticipants:
          type: array
          description: An unordered collection of disciplineIncidentExternalParticipants.
            Information on an individual involved in the Discipline Incident.
          items:
            $ref: "#/components/schemas/edFi_disciplineIncidentExternalParticipant"
        incidentCost:
          type: number
          description: The value of any quantifiable monetary loss directly resulting
            from the DisciplineIncident. Examples include the value of repairs necessitated
            by vandalism of a school facility, or the value of personnel resources
            used for repairs or consumed by the incident.
          format: double
        incidentDate:
          type: string
          description: The month, day, and year on which the DisciplineIncident occurred.
          format: date
        incidentDescription:
          maxLength: 1024
          type: string
          description: The description for an incident.
        incidentLocationDescriptor:
          maxLength: 306
          type: string
          description: "Identifies where the DisciplineIncident occurred and whether\
            \ or not it occurred on school, for example:        On school Administrative\
            \ offices area        Cafeteria area Classroom        Hallway or stairs\
            \        ..."
        incidentTime:
          type: string
          description: An indication of the time of day the incident took place.
        reportedToLawEnforcement:
          type: boolean
          description: Indicator of whether the incident was reported to law enforcement.
        reporterDescriptionDescriptor:
          maxLength: 306
          type: string
          description: "Information on the type of individual who reported the DisciplineIncident.\
            \ When known and/or if useful, use a more specific option code (e.g.,\
            \ \"Counselor\" rather than \"Professional Staff\"); for example:\
            \    Student        Parent/guardian        Law enforcement officer\
            \     Nonschool personnel        Representative of visiting school\
            \     ..."
        reporterName:
          maxLength: 75
          type: string
          description: Identifies the reporter of the DisciplineIncident by name.
        weapons:
          type: array
          description: An unordered collection of disciplineIncidentWeapons. Identifies
            the type of weapon used during an incident. The Federal Gun-Free Schools
            Act requires states to report the number of students expelled for bringing
            firearms to school by type of firearm.
          items:
            $ref: "#/components/schemas/edFi_disciplineIncidentWeapon"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_disciplineIncidentBehavior:
      required:
      - behaviorDescriptor
      type: object
      properties:
        behaviorDescriptor:
          maxLength: 306
          type: string
          description: Describes behavior by category and provides a detailed description.
          x-Ed-Fi-isIdentity: true
        behaviorDetailedDescription:
          maxLength: 1024
          type: string
          description: Specifies a more granular level of detail of a behavior involved
            in the incident.
    edFi_disciplineIncidentExternalParticipant:
      required:
      - disciplineIncidentParticipationCodeDescriptor
      - firstName
      - lastSurname
      type: object
      properties:
        disciplineIncidentParticipationCodeDescriptor:
          maxLength: 306
          type: string
          description: "The role or type of participation of a student in a discipline\
            \ incident; for example: Victim, Perpetrator, Witness, Reporter."
          x-Ed-Fi-isIdentity: true
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
          x-Ed-Fi-isIdentity: true
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
          x-Ed-Fi-isIdentity: true
    edFi_disciplineIncidentReference:
      required:
      - incidentIdentifier
      - schoolId
      type: object
      properties:
        incidentIdentifier:
          maxLength: 20
          type: string
          description: A locally assigned unique identifier (within the school or
            school district) to identify each specific DisciplineIncident or occurrence.
            The same identifier should be used to document the entire DisciplineIncident
            even if it included multiple offenses and multiple offenders.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_disciplineIncidentWeapon:
      required:
      - weaponDescriptor
      type: object
      properties:
        weaponDescriptor:
          maxLength: 306
          type: string
          description: Identifies the type of weapon used during an incident. The
            Federal Gun-Free Schools Act requires states to report the number of students
            expelled for bringing firearms to school by type of firearm.
          x-Ed-Fi-isIdentity: true
    edFi_educationContent:
      required:
      - contentIdentifier
      - namespace
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        contentIdentifier:
          maxLength: 225
          type: string
          description: A unique identifier for the EducationContent.
          x-Ed-Fi-isIdentity: true
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
        additionalAuthorsIndicator:
          type: boolean
          description: Indicates whether there are additional un-named authors. In
            a research report, this is often marked by the abbreviation \"et al\
            .
        appropriateGradeLevels:
          type: array
          description: An unordered collection of educationContentAppropriateGradeLevels.
            Grade levels for which this education content is applicable-if omitted,
            considered generally applicable.
          items:
            $ref: "#/components/schemas/edFi_educationContentAppropriateGradeLevel"
        appropriateSexes:
          type: array
          description: An unordered collection of educationContentAppropriateSexes.
            Sexes for which this education content is applicable. If omitted, considered
            generally applicable.
          items:
            $ref: "#/components/schemas/edFi_educationContentAppropriateSex"
        authors:
          type: array
          description: An unordered collection of educationContentAuthors. The individual
            credited with the creation of the resource.
          items:
            $ref: "#/components/schemas/edFi_educationContentAuthor"
        contentClassDescriptor:
          maxLength: 306
          type: string
          description: The predominate type or kind characterizing the learning resource.
        cost:
          type: number
          description: An amount that has to be paid or spent to buy or obtain the
            EducationContent.
          format: double
        costRateDescriptor:
          maxLength: 306
          type: string
          description: The rate by which the cost applies.
        derivativeSourceEducationContents:
          type: array
          description: An unordered collection of educationContentDerivativeSourceEducationContents.
            Relates the education content source to the education content.
          items:
            $ref: "#/components/schemas/edFi_educationContentDerivativeSourceEducationContent"
        derivativeSourceLearningResourceMetadataURIs:
          type: array
          description: An unordered collection of educationContentDerivativeSourceLearningResourceMetadataURIs.
            The URI (typical a URL) pointing to the metadata entry in a LRMI metadata
            repository, which describes this content item.
          items:
            $ref: "#/components/schemas/edFi_educationContentDerivativeSourceLearningResourceMetadataURI"
        derivativeSourceURIs:
          type: array
          description: An unordered collection of educationContentDerivativeSourceURIs.
            The URI (typical a URL) pointing to an education content item.
          items:
            $ref: "#/components/schemas/edFi_educationContentDerivativeSourceURI"
        description:
          maxLength: 1024
          type: string
          description: An extended written representation of the education content.
        interactivityStyleDescriptor:
          maxLength: 306
          type: string
          description: The predominate mode of learning supported by the learning
            resource. Acceptable values are active, expositive, or mixed.
        languages:
          type: array
          description: An unordered collection of educationContentLanguages. An indication
            of the languages in which the Education Content is designed.
          items:
            $ref: "#/components/schemas/edFi_educationContentLanguage"
        learningResourceMetadataURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the metadata entry in
            a LRMI metadata repository, which describes this content item.
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the EducationContent.
        publicationDate:
          type: string
          description: The date on which this content was first published.
          format: date
        publicationYear:
          type: integer
          description: The year at which this content was first published.
          format: int32
        publisher:
          maxLength: 50
          type: string
          description: The organization credited with publishing the resource.
        shortDescription:
          maxLength: 75
          type: string
          description: A short description or name of the entity.
        timeRequired:
          maxLength: 30
          type: string
          description: Approximate or typical time it takes to work with or through
            this learning resource for the typical intended target audience.
        useRightsURL:
          maxLength: 255
          type: string
          description: The URL where the owner specifies permissions for using the
            resource.
        version:
          maxLength: 10
          type: string
          description: The version identifier for the content.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationContentAppropriateGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade levels for which this education content is applicable-if
            omitted, considered generally applicable.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentAppropriateSex:
      required:
      - sexDescriptor
      type: object
      properties:
        sexDescriptor:
          maxLength: 306
          type: string
          description: Sexes for which this education content is applicable. If omitted,
            considered generally applicable.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentAuthor:
      required:
      - author
      type: object
      properties:
        author:
          maxLength: 100
          type: string
          description: The individual credited with the creation of the resource.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentDerivativeSourceEducationContent:
      required:
      - derivativeSourceEducationContentReference
      type: object
      properties:
        derivativeSourceEducationContentReference:
          $ref: "#/components/schemas/edFi_educationContentReference"
    edFi_educationContentDerivativeSourceLearningResourceMetadataURI:
      required:
      - derivativeSourceLearningResourceMetadataURI
      type: object
      properties:
        derivativeSourceLearningResourceMetadataURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the metadata entry in
            a LRMI metadata repository, which describes this content item.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentDerivativeSourceURI:
      required:
      - derivativeSourceURI
      type: object
      properties:
        derivativeSourceURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to an education content item.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: An indication of the languages in which the Education Content
            is designed.
          x-Ed-Fi-isIdentity: true
    edFi_educationContentReference:
      required:
      - contentIdentifier
      type: object
      properties:
        contentIdentifier:
          maxLength: 225
          type: string
          description: A unique identifier for the EducationContent.
        link:
          $ref: "#/components/schemas/link"
    edFi_educationOrganizationAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
          x-Ed-Fi-isIdentity: true
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
          x-Ed-Fi-isIdentity: true
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
          x-Ed-Fi-isIdentity: true
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
          x-Ed-Fi-isIdentity: true
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                      'which an address is located.
        periods:
          type: array
          description: An unordered collection of educationOrganizationAddressPeriods.
            The time periods for which the address is valid. For physical addresses,
            the periods in which the person lived at that address.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddressPeriod"
    edFi_educationOrganizationAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_educationOrganizationCategory:
      required:
      - educationOrganizationCategoryDescriptor
      type: object
      properties:
        educationOrganizationCategoryDescriptor:
          maxLength: 306
          type: string
          description: The classification of the education agency within the geographic
            boundaries of a state according to the level of administrative and operational
            control granted by the state.
          x-Ed-Fi-isIdentity: true
    edFi_educationOrganizationIdentificationCode:
      required:
      - educationOrganizationIdentificationSystemDescriptor
      - identificationCode
      type: object
      properties:
        educationOrganizationIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: The school system, state, or agency assigning the identification
            code.
          x-Ed-Fi-isIdentity: true
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code that is assigned to an
            education organization by a school, school system, state, or other agency
            or entity.
    edFi_educationOrganizationIndicator:
      required:
      - indicatorDescriptor
      type: object
      properties:
        indicatorDescriptor:
          maxLength: 306
          type: string
          description: The name or code for the indicator or metric.
          x-Ed-Fi-isIdentity: true
        indicatorGroupDescriptor:
          maxLength: 306
          type: string
          description: The name for a group of indicators.
        indicatorLevelDescriptor:
          maxLength: 306
          type: string
          description: The value of the indicator or metric, as a value from a controlled
            vocabulary. The semantics of an empty value is \"not submitted.\"
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that defined the metric.
        indicatorValue:
          maxLength: 60
          type: string
          description: The value of the indicator or metric. The semantics of an empty
            value is "not submitted.
        periods:
          type: array
          description: An unordered collection of educationOrganizationIndicatorPeriods.
            The time period or as-of date for the indicator.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicatorPeriod"
    edFi_educationOrganizationIndicatorPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_educationOrganizationInstitutionTelephone:
      required:
      - institutionTelephoneNumberTypeDescriptor
      - telephoneNumber
      type: object
      properties:
        institutionTelephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
    edFi_educationOrganizationInternationalAddress:
      required:
      - addressLine1
      - addressTypeDescriptor
      - countryDescriptor
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        countryDescriptor:
          maxLength: 306
          type: string
          description: The name of the country. It is strongly recommended that entries
            use only ISO 3166 2-letter country codes.
        addressLine1:
          maxLength: 150
          type: string
          description: The first line of the address.
        addressLine2:
          maxLength: 150
          type: string
          description: The second line of the address.
        addressLine3:
          maxLength: 150
          type: string
          description: The third line of the address.
        addressLine4:
          maxLength: 150
          type: string
          description: The fourth line of the address.
        beginDate:
          type: string
          description: The first date the address is valid. For physical addresses,
            the date the person moved to that address.
          format: date
        endDate:
          type: string
          description: The last date the address is valid. For physical addresses,
            this would be the date the person moved from that address.
          format: date
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
    edFi_educationOrganizationInterventionPrescriptionAssociation:
      required:
      - educationOrganizationReference
      - interventionPrescriptionReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        interventionPrescriptionReference:
          $ref: "#/components/schemas/edFi_interventionPrescriptionReference"
        beginDate:
          type: string
          description: The begin date of the period during which the InterventionPrescription
            is available.
          format: date
        endDate:
          type: string
          description: The end date of the period during which the InterventionPrescription
            is available.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationOrganizationNetwork:
      required:
      - categories
      - educationOrganizationNetworkId
      - nameOfInstitution
      - networkPurposeDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        educationOrganizationNetworkId:
          type: integer
          description: The identifier assigned to a network of education organizations.
          format: int32
          x-Ed-Fi-isIdentity: true
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        networkPurposeDescriptor:
          maxLength: 306
          type: string
          description: The purpose(s) of the network (e.g., shared services, collective
            procurement).
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationOrganizationNetworkAssociation:
      required:
      - educationOrganizationNetworkReference
      - memberEducationOrganizationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationNetworkReference:
          $ref: "#/components/schemas/edFi_educationOrganizationNetworkReference"
        memberEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        beginDate:
          type: string
          description: The date on which the EducationOrganization joined this network.
          format: date
        endDate:
          type: string
          description: The date on which the EducationOrganization left this network.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationOrganizationNetworkReference:
      required:
      - educationOrganizationNetworkId
      type: object
      properties:
        educationOrganizationNetworkId:
          type: integer
          description: The identifier assigned to a network of education organizations.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_educationOrganizationPeerAssociation:
      required:
      - educationOrganizationReference
      - peerEducationOrganizationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        peerEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationOrganizationReference:
      required:
      - educationOrganizationId
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_educationServiceCenter:
      required:
      - categories
      - educationServiceCenterId
      - nameOfInstitution
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        educationServiceCenterId:
          type: integer
          description: The identifier assigned to an education service center.
          format: int32
          x-Ed-Fi-isIdentity: true
        stateEducationAgencyReference:
          $ref: "#/components/schemas/edFi_stateEducationAgencyReference"
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_educationServiceCenterReference:
      required:
      - educationServiceCenterId
      type: object
      properties:
        educationServiceCenterId:
          type: integer
          description: The identifier assigned to an education service center.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_feederSchoolAssociation:
      required:
      - beginDate
      - feederSchoolReference
      - schoolReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The month, day, and year of the first day of the feeder school
            association.
          format: date
          x-Ed-Fi-isIdentity: true
        feederSchoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        endDate:
          type: string
          description: The month, day, and year of the last day of the feeder school
            association.
          format: date
        feederRelationshipDescription:
          maxLength: 1024
          type: string
          description: Describes the relationship from the feeder school to the receiving
            school, for example by program emphasis, such as special education,
            language immersion, science, or performing art.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_generalStudentProgramAssociationParticipationStatus:
      required:
      - participationStatusDescriptor
      type: object
      properties:
        participationStatusDescriptor:
          maxLength: 306
          type: string
          description: The student's program participation status.
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that designated the
            participation status.
        statusBeginDate:
          type: string
          description: The date the student's program participation status began.
          format: date
        statusEndDate:
          type: string
          description: The date the student's program participation status ended.
          format: date
    edFi_generalStudentProgramAssociationProgramParticipationStatus:
      required:
      - participationStatusDescriptor
      - statusBeginDate
      type: object
      properties:
        participationStatusDescriptor:
          maxLength: 306
          type: string
          description: The student's program participation status.
          x-Ed-Fi-isIdentity: true
        statusBeginDate:
          type: string
          description: The date the student's program participation status began.
          format: date
          x-Ed-Fi-isIdentity: true
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that designated the
            participation status.
        statusEndDate:
          type: string
          description: The date the student's program participation status ended.
          format: date
    edFi_generalStudentProgramAssociationReference:
      required:
      - beginDate
      - educationOrganizationId
      - programEducationOrganizationId
      - programName
      - programTypeDescriptor
      - studentUniqueId
      type: object
      properties:
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        programEducationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        programName:
          maxLength: 60
          type: string
          description: The formal name of the Program of instruction, training, services,
            or benefits available through federal, state, or local agencies.
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_grade:
      required:
      - gradeTypeDescriptor
      - gradingPeriodReference
      - studentSectionAssociationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        gradeTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of grade reported (e.g., Exam, Final, Grading Period).
          x-Ed-Fi-isIdentity: true
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
        studentSectionAssociationReference:
          $ref: "#/components/schemas/edFi_studentSectionAssociationReference"
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the teacher that provides information
            in addition to the grade or assessment score.
        learningStandardGrades:
          type: array
          description: An unordered collection of gradeLearningStandardGrades. A collection
            of learning standards associated with the grade.
          items:
            $ref: "#/components/schemas/edFi_gradeLearningStandardGrade"
        letterGradeEarned:
          maxLength: 20
          type: string
          description: A final or interim (grading period) indicator of student performance
            in a class as submitted by the instructor.
        numericGradeEarned:
          type: number
          description: A final or interim (grading period) indicator of student performance
            in a class as submitted by the instructor.
          format: double
        performanceBaseConversionDescriptor:
          maxLength: 306
          type: string
          description: A conversion of the level to a standard set of performance
            levels.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_gradebookEntry:
      required:
      - dateAssigned
      - gradebookEntryTitle
      - sectionReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        dateAssigned:
          type: string
          description: The date the assignment, homework, or assessment was assigned
            or executed.
          format: date
          x-Ed-Fi-isIdentity: true
        gradebookEntryTitle:
          maxLength: 60
          type: string
          description: The name or title of the activity to be recorded in the GradebookEntry.
          x-Ed-Fi-isIdentity: true
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        description:
          maxLength: 1024
          type: string
          description: A description of the assignment, homework, or classroom assessment.
        dueDate:
          type: string
          description: The date the assignment, homework, or assessment is due.
          format: date
        gradebookEntryTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of the GradebookEntry; for example, homework, assignment,
            quiz, unit test, oral presentation, etc.
        learningObjectives:
          type: array
          description: An unordered collection of gradebookEntryLearningObjectives.
            LearningObjectives associated with the GradebookEntry.
          items:
            $ref: "#/components/schemas/edFi_gradebookEntryLearningObjective"
        learningStandards:
          type: array
          description: An unordered collection of gradebookEntryLearningStandards.
            LearningStandard(s) associated with the GradebookEntry.
          items:
            $ref: "#/components/schemas/edFi_gradebookEntryLearningStandard"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_gradebookEntryLearningObjective:
      required:
      - learningObjectiveReference
      type: object
      properties:
        learningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
    edFi_gradebookEntryLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_gradebookEntryReference:
      required:
      - dateAssigned
      - gradebookEntryTitle
      - localCourseCode
      - schoolId
      - schoolYear
      - sectionIdentifier
      - sessionName
      type: object
      properties:
        dateAssigned:
          type: string
          description: The date the assignment, homework, or assessment was assigned
            or executed.
          format: date
        gradebookEntryTitle:
          maxLength: 60
          type: string
          description: The name or title of the activity to be recorded in the GradebookEntry.
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sectionIdentifier:
          maxLength: 255
          type: string
          description: The local identifier assigned to a section.
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        link:
          $ref: "#/components/schemas/link"
    edFi_gradeLearningStandardGrade:
      required:
      - learningStandardReference
      type: object
      properties:
        performanceBaseConversionDescriptor:
          maxLength: 306
          type: string
          description: A performance level that describes the student proficiency.
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the teacher that provides information
            in addition to the grade or assessment score.
        letterGradeEarned:
          maxLength: 20
          type: string
          description: A final or interim (grading period) indicator of student performance
            for a learning standard as submitted by the instructor.
        numericGradeEarned:
          type: number
          description: A final or interim (grading period) indicator of student performance
            for a learning standard as submitted by the instructor.
          format: double
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_gradeReference:
      required:
      - beginDate
      - gradeTypeDescriptor
      - gradingPeriodDescriptor
      - gradingPeriodSchoolYear
      - gradingPeriodSequence
      - localCourseCode
      - schoolId
      - schoolYear
      - sectionIdentifier
      - sessionName
      - studentUniqueId
      type: object
      properties:
        beginDate:
          type: string
          description: Month, day, and year of the Student's entry or assignment
            to the Section.
          format: date
        gradeTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of grade reported (e.g., Exam, Final, Grading Period).
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
        gradingPeriodSchoolYear:
          type: integer
          description: The identifier for the grading period school year.
          format: int32
        gradingPeriodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sectionIdentifier:
          maxLength: 255
          type: string
          description: The local identifier assigned to a section.
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_gradingPeriod:
      required:
      - beginDate
      - endDate
      - gradingPeriodDescriptor
      - periodSequence
      - schoolReference
      - schoolYearTypeReference
      - totalInstructionalDays
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
          x-Ed-Fi-isIdentity: true
        periodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        beginDate:
          type: string
          description: Month, day, and year of the first day of the GradingPeriod.
          format: date
        endDate:
          type: string
          description: Month, day, and year of the last day of the GradingPeriod.
          format: date
        totalInstructionalDays:
          type: integer
          description: Total days available for educational instruction during the
            GradingPeriod.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_gradingPeriodReference:
      required:
      - gradingPeriodDescriptor
      - periodSequence
      - schoolId
      - schoolYear
      type: object
      properties:
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
        periodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the grading period school year.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_graduationPlan:
      required:
      - educationOrganizationReference
      - graduationPlanTypeDescriptor
      - graduationSchoolYearTypeReference
      - totalRequiredCredits
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        graduationPlanTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of academic plan the student is following for graduation:\
            \ for example, Minimum, Recommended, Distinguished, or Standard."
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        graduationSchoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        creditsByCourses:
          type: array
          description: An unordered collection of graduationPlanCreditsByCourses.
            The total credits required for graduation by taking a specific course,
            or by taking one or more from a set of courses.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanCreditsByCourse"
        creditsByCreditCategories:
          type: array
          description: An unordered collection of graduationPlanCreditsByCreditCategories.
            The total credits required for graduation based on the credit category.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanCreditsByCreditCategory"
        creditsBySubjects:
          type: array
          description: An unordered collection of graduationPlanCreditsBySubjects.
            The total credits required in subject to graduate. Only those courses
            identified as a high school course requirement are eligible to meet subject
            credit requirements.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanCreditsBySubject"
        individualPlan:
          type: boolean
          description: An indicator of whether the GraduationPlan is tailored for
            an individual.
        requiredAssessments:
          type: array
          description: An unordered collection of graduationPlanRequiredAssessments.
            The assessments and associated required score and performance level needed
            to satisfy graduation requirements.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanRequiredAssessment"
        totalRequiredCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        totalRequiredCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        totalRequiredCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_graduationPlanCreditsByCourse:
      required:
      - courseSetName
      - courses
      - credits
      type: object
      properties:
        courseSetName:
          maxLength: 120
          type: string
          description: Identifying name given to a collection of courses.
          x-Ed-Fi-isIdentity: true
        creditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        whenTakenGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level when the student is planned to take the course.
        creditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        credits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        courses:
          type: array
          description: An unordered collection of graduationPlanCreditsByCourseCourses.
            The course reference that identifies the organization of subject matter
            and related learning experiences provided for the instruction of students.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanCreditsByCourseCourse"
    edFi_graduationPlanCreditsByCourseCourse:
      required:
      - courseReference
      type: object
      properties:
        courseReference:
          $ref: "#/components/schemas/edFi_courseReference"
    edFi_graduationPlanCreditsByCreditCategory:
      required:
      - creditCategoryDescriptor
      - credits
      type: object
      properties:
        creditCategoryDescriptor:
          maxLength: 306
          type: string
          description: A categorization for the course transcript credits awarded
            in the course transcript.
          x-Ed-Fi-isIdentity: true
        creditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        creditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        credits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
    edFi_graduationPlanCreditsBySubject:
      required:
      - academicSubjectDescriptor
      - credits
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The intended major subject area of the graduation requirement.
          x-Ed-Fi-isIdentity: true
        creditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        creditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        credits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
    edFi_graduationPlanReference:
      required:
      - educationOrganizationId
      - graduationPlanTypeDescriptor
      - graduationSchoolYear
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        graduationPlanTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of academic plan the student is following for graduation:\
            \ for example, Minimum, Recommended, Distinguished, or Standard."
        graduationSchoolYear:
          type: integer
          description: The school year the student is expected to graduate.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_graduationPlanRequiredAssessment:
      required:
      - assessmentReference
      type: object
      properties:
        assessmentReference:
          $ref: "#/components/schemas/edFi_assessmentReference"
        scores:
          type: array
          description: An unordered collection of graduationPlanRequiredAssessmentScores.
            Score required to be met or exceeded.
          items:
            $ref: "#/components/schemas/edFi_graduationPlanRequiredAssessmentScore"
        performanceLevel:
          $ref: "#/components/schemas/edFi_graduationPlanRequiredAssessmentPerformanceLevel"
    edFi_graduationPlanRequiredAssessmentPerformanceLevel:
      required:
      - assessmentReportingMethodDescriptor
      - performanceLevelDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the instructor of the class uses to report
            the performance and achievement of all students. It may be a qualitative
            method such as individualized teacher comments or a quantitative method
            such as a letter or numerical grade. In some cases, more than one type
            of reporting method may be used.
        performanceLevelDescriptor:
          maxLength: 306
          type: string
          description: The performance level(s) defined for the assessment.
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score to make the indicated level of performance.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score required to make the indicated level of performance.
    edFi_graduationPlanRequiredAssessmentScore:
      required:
      - assessmentReportingMethodDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the administrator of the assessment uses to
            report the performance and achievement of all students. It may be a qualitative
            method such as performance level descriptors or a quantitative method
            such as a numerical grade or cut score. More than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score possible on the assessment.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score possible on the assessment.
    edFi_intervention:
      required:
      - beginDate
      - deliveryMethodDescriptor
      - educationOrganizationReference
      - interventionClassDescriptor
      - interventionIdentificationCode
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        interventionIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an intervention.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        appropriateGradeLevels:
          type: array
          description: An unordered collection of interventionAppropriateGradeLevels.
            Grade levels for the Intervention-if omitted, considered generally applicable.
          items:
            $ref: "#/components/schemas/edFi_interventionAppropriateGradeLevel"
        appropriateSexes:
          type: array
          description: An unordered collection of interventionAppropriateSexes. Sexes
            for the Intervention. If omitted, considered generally applicable.
          items:
            $ref: "#/components/schemas/edFi_interventionAppropriateSex"
        beginDate:
          type: string
          description: The start date for the intervention implementation.
          format: date
        deliveryMethodDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        diagnoses:
          type: array
          description: An unordered collection of interventionDiagnoses. Targeted
            purpose of the Intervention (e.g., attendance issue, dropout risk).
          items:
            $ref: "#/components/schemas/edFi_interventionDiagnosis"
        educationContents:
          type: array
          description: An unordered collection of interventionEducationContents. Relates
            the education content source to the education content.
          items:
            $ref: "#/components/schemas/edFi_interventionEducationContent"
        endDate:
          type: string
          description: The end date for the intervention implementation.
          format: date
        interventionClassDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        interventionPrescriptions:
          type: array
          description: An unordered collection of interventionInterventionPrescriptions.
            The reference to the intervention prescription being followed in this
            intervention implementation.
          items:
            $ref: "#/components/schemas/edFi_interventionInterventionPrescription"
        learningResourceMetadataURIs:
          type: array
          description: An unordered collection of interventionLearningResourceMetadataURIs.
            The URI (typical a URL) pointing to the metadata entry in a LRMI metadata
            repository, which describes this content item.
          items:
            $ref: "#/components/schemas/edFi_interventionLearningResourceMetadataURI"
        maxDosage:
          type: integer
          description: The maximum duration of time in minutes that may be assigned
            for the intervention.
          format: int32
        meetingTimes:
          type: array
          description: An unordered collection of interventionMeetingTimes. The times
            at which this intervention is scheduled to meet.
          items:
            $ref: "#/components/schemas/edFi_interventionMeetingTime"
        minDosage:
          type: integer
          description: The minimum duration of time in minutes that may be assigned
            for the intervention.
          format: int32
        populationServeds:
          type: array
          description: An unordered collection of interventionPopulationServeds. A
            subset of students that are the focus of the Intervention.
          items:
            $ref: "#/components/schemas/edFi_interventionPopulationServed"
        staffs:
          type: array
          description: An unordered collection of interventionStaffs. Relates the
            staff member associated with the Intervention.
          items:
            $ref: "#/components/schemas/edFi_interventionStaff"
        uris:
          type: array
          description: An unordered collection of interventionURIs. The URI (typical
            a URL) pointing to an education content item.
          items:
            $ref: "#/components/schemas/edFi_interventionURI"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_interventionAppropriateGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade levels for the Intervention-if omitted, considered generally
            applicable.
          x-Ed-Fi-isIdentity: true
    edFi_interventionAppropriateSex:
      required:
      - sexDescriptor
      type: object
      properties:
        sexDescriptor:
          maxLength: 306
          type: string
          description: Sexes for the Intervention. If omitted, considered generally
            applicable.
          x-Ed-Fi-isIdentity: true
    edFi_interventionDiagnosis:
      required:
      - diagnosisDescriptor
      type: object
      properties:
        diagnosisDescriptor:
          maxLength: 306
          type: string
          description: Targeted purpose of the Intervention (e.g., attendance issue,
            dropout risk).
          x-Ed-Fi-isIdentity: true
    edFi_interventionEducationContent:
      required:
      - educationContentReference
      type: object
      properties:
        educationContentReference:
          $ref: "#/components/schemas/edFi_educationContentReference"
    edFi_interventionInterventionPrescription:
      required:
      - interventionPrescriptionReference
      type: object
      properties:
        interventionPrescriptionReference:
          $ref: "#/components/schemas/edFi_interventionPrescriptionReference"
    edFi_interventionLearningResourceMetadataURI:
      required:
      - learningResourceMetadataURI
      type: object
      properties:
        learningResourceMetadataURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the metadata entry in
            a LRMI metadata repository, which describes this content item.
          x-Ed-Fi-isIdentity: true
    edFi_interventionMeetingTime:
      required:
      - endTime
      - startTime
      type: object
      properties:
        endTime:
          type: string
          description: An indication of the time of day the meeting time ends.
          x-Ed-Fi-isIdentity: true
        startTime:
          type: string
          description: An indication of the time of day the meeting time begins.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPopulationServed:
      required:
      - populationServedDescriptor
      type: object
      properties:
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: A subset of students that are the focus of the Intervention.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescription:
      required:
      - deliveryMethodDescriptor
      - educationOrganizationReference
      - interventionClassDescriptor
      - interventionPrescriptionIdentificationCode
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        interventionPrescriptionIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an intervention
            prescription.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        appropriateGradeLevels:
          type: array
          description: An unordered collection of interventionPrescriptionAppropriateGradeLevels.
            Grade levels for the prescribed intervention. If omitted, considered
            generally applicable.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionAppropriateGradeLevel"
        appropriateSexes:
          type: array
          description: An unordered collection of interventionPrescriptionAppropriateSexes.
            Sexes for the InterventionPrescription. If omitted, considered generally
            applicable.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionAppropriateSex"
        deliveryMethodDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        diagnoses:
          type: array
          description: An unordered collection of interventionPrescriptionDiagnoses.
            Targeted purpose of the InterventionPrescription (e.g., attendance issue,
            dropout risk).
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionDiagnosis"
        educationContents:
          type: array
          description: An unordered collection of interventionPrescriptionEducationContents.
            Relates the education content source to the education content.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionEducationContent"
        interventionClassDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        learningResourceMetadataURIs:
          type: array
          description: An unordered collection of interventionPrescriptionLearningResourceMetadataURIs.
            The URI (typical a URL) pointing to the metadata entry in a LRMI metadata
            repository, which describes this content item.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionLearningResourceMetadataURI"
        maxDosage:
          type: integer
          description: The maximum duration of time in minutes that is recommended
            for the intervention.
          format: int32
        minDosage:
          type: integer
          description: The minimum duration of time in minutes that is recommended
            for the intervention.
          format: int32
        populationServeds:
          type: array
          description: An unordered collection of interventionPrescriptionPopulationServeds.
            A subset of students that are the focus of the InterventionPrescription.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionPopulationServed"
        uris:
          type: array
          description: An unordered collection of interventionPrescriptionURIs. The
            URI (typical a URL) pointing to an education content item.
          items:
            $ref: "#/components/schemas/edFi_interventionPrescriptionURI"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_interventionPrescriptionAppropriateGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade levels for the prescribed intervention. If omitted,
            considered generally applicable.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescriptionAppropriateSex:
      required:
      - sexDescriptor
      type: object
      properties:
        sexDescriptor:
          maxLength: 306
          type: string
          description: Sexes for the InterventionPrescription. If omitted, considered
            generally applicable.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescriptionDiagnosis:
      required:
      - diagnosisDescriptor
      type: object
      properties:
        diagnosisDescriptor:
          maxLength: 306
          type: string
          description: Targeted purpose of the InterventionPrescription (e.g., attendance
            issue, dropout risk).
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescriptionEducationContent:
      required:
      - educationContentReference
      type: object
      properties:
        educationContentReference:
          $ref: "#/components/schemas/edFi_educationContentReference"
    edFi_interventionPrescriptionLearningResourceMetadataURI:
      required:
      - learningResourceMetadataURI
      type: object
      properties:
        learningResourceMetadataURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the metadata entry in
            a LRMI metadata repository, which describes this content item.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescriptionPopulationServed:
      required:
      - populationServedDescriptor
      type: object
      properties:
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: A subset of students that are the focus of the InterventionPrescription.
          x-Ed-Fi-isIdentity: true
    edFi_interventionPrescriptionReference:
      required:
      - educationOrganizationId
      - interventionPrescriptionIdentificationCode
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        interventionPrescriptionIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an intervention
            prescription.
        link:
          $ref: "#/components/schemas/link"
    edFi_interventionPrescriptionURI:
      required:
      - uri
      type: object
      properties:
        uri:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to an education content item.
          x-Ed-Fi-isIdentity: true
    edFi_interventionReference:
      required:
      - educationOrganizationId
      - interventionIdentificationCode
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        interventionIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an intervention.
        link:
          $ref: "#/components/schemas/link"
    edFi_interventionStaff:
      required:
      - staffReference
      type: object
      properties:
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
    edFi_interventionStudy:
      required:
      - deliveryMethodDescriptor
      - educationOrganizationReference
      - interventionClassDescriptor
      - interventionPrescriptionReference
      - interventionStudyIdentificationCode
      - participants
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        interventionStudyIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an intervention
            study.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        interventionPrescriptionReference:
          $ref: "#/components/schemas/edFi_interventionPrescriptionReference"
        appropriateGradeLevels:
          type: array
          description: An unordered collection of interventionStudyAppropriateGradeLevels.
            Grade levels participating in this study.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyAppropriateGradeLevel"
        appropriateSexes:
          type: array
          description: An unordered collection of interventionStudyAppropriateSexes.
            Sexes participating in this study. If omitted, considered generally
            applicable.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyAppropriateSex"
        deliveryMethodDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention was implemented: individual,\
            \ small group, whole class, or whole school."
        educationContents:
          type: array
          description: An unordered collection of interventionStudyEducationContents.
            Relates the education content source to the education content.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyEducationContent"
        interventionClassDescriptor:
          maxLength: 306
          type: string
          description: "The way in which an intervention is used: curriculum, supplement,\
            \ or practice."
        interventionEffectivenesses:
          type: array
          description: An unordered collection of interventionStudyInterventionEffectivenesses.
            Measurement of the effectiveness of the InterventionStudy per diagnosis.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyInterventionEffectiveness"
        learningResourceMetadataURIs:
          type: array
          description: An unordered collection of interventionStudyLearningResourceMetadataURIs.
            The URI (typical a URL) pointing to the metadata entry in a LRMI metadata
            repository, which describes this content item.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyLearningResourceMetadataURI"
        participants:
          type: integer
          description: The number of participants observed in the study.
          format: int32
        populationServeds:
          type: array
          description: An unordered collection of interventionStudyPopulationServeds.
            A subset of students that are the focus of the InterventionStudy.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyPopulationServed"
        stateAbbreviations:
          type: array
          description: An unordered collection of interventionStudyStateAbbreviations.
            The abbreviation for the state (within the United States) or outlying
            area, the school system of which the participants of the study are considered
            to be a part.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyStateAbbreviation"
        uris:
          type: array
          description: An unordered collection of interventionStudyURIs. The URI (typical
            a URL) pointing to an education content item.
          items:
            $ref: "#/components/schemas/edFi_interventionStudyURI"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_interventionStudyAppropriateGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade levels participating in this study.
          x-Ed-Fi-isIdentity: true
    edFi_interventionStudyAppropriateSex:
      required:
      - sexDescriptor
      type: object
      properties:
        sexDescriptor:
          maxLength: 306
          type: string
          description: Sexes participating in this study. If omitted, considered
            generally applicable.
          x-Ed-Fi-isIdentity: true
    edFi_interventionStudyEducationContent:
      required:
      - educationContentReference
      type: object
      properties:
        educationContentReference:
          $ref: "#/components/schemas/edFi_educationContentReference"
    edFi_interventionStudyInterventionEffectiveness:
      required:
      - diagnosisDescriptor
      - gradeLevelDescriptor
      - interventionEffectivenessRatingDescriptor
      - populationServedDescriptor
      type: object
      properties:
        diagnosisDescriptor:
          maxLength: 306
          type: string
          description: Targeted purpose of the intervention (e.g., attendance issue,
            dropout risk) for which the effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade level for which effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: Population for which effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        interventionEffectivenessRatingDescriptor:
          maxLength: 306
          type: string
          description: "An intervention demonstrates effectiveness if the research\
            \ has shown that the program caused an improvement in outcomes. Values:\
            \ positive effects, potentially positive effects, mixed effects, potentially\
            \ negative effects, negative effects, and no discernible effects."
        improvementIndex:
          type: integer
          description: Along a percentile distribution of students, the improvement
            index represents the change in an average student's percentile rank
            that is considered to be due to the intervention.
          format: int32
    edFi_interventionStudyLearningResourceMetadataURI:
      required:
      - learningResourceMetadataURI
      type: object
      properties:
        learningResourceMetadataURI:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to the metadata entry in
            a LRMI metadata repository, which describes this content item.
          x-Ed-Fi-isIdentity: true
    edFi_interventionStudyPopulationServed:
      required:
      - populationServedDescriptor
      type: object
      properties:
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: A subset of students that are the focus of the InterventionStudy.
          x-Ed-Fi-isIdentity: true
    edFi_interventionStudyStateAbbreviation:
      required:
      - stateAbbreviationDescriptor
      type: object
      properties:
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States)
            or outlying area, the school system of which the participants of the
            study are considered to be a part.
          x-Ed-Fi-isIdentity: true
    edFi_interventionStudyURI:
      required:
      - uri
      type: object
      properties:
        uri:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to an education content item.
          x-Ed-Fi-isIdentity: true
    edFi_interventionURI:
      required:
      - uri
      type: object
      properties:
        uri:
          maxLength: 255
          type: string
          description: The URI (typical a URL) pointing to an education content item.
          x-Ed-Fi-isIdentity: true
    edFi_learningObjective:
      required:
      - academicSubjects
      - learningObjectiveId
      - namespace
      - objective
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        academicSubjects:
          type: array
          description: An unordered collection of learningObjectiveAcademicSubjects.
            The description of the content or subject area (e.g., arts, mathematics,
            reading, stenography, or a foreign language) of an assessment.
          items:
            $ref: "#/components/schemas/edFi_learningObjectiveAcademicSubject"
        learningObjectiveId:
          maxLength: 60
          type: string
          description: The identifier for the specific learning objective in the
            context of a standard (e.g., 111.15.3.1.A).
          x-Ed-Fi-isIdentity: true
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the LearningObjective.
          x-Ed-Fi-isIdentity: true
        parentLearningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
        contentStandard:
          $ref: "#/components/schemas/edFi_learningObjectiveContentStandard"
        description:
          maxLength: 1024
          type: string
          description: The description of the LearningObjective.
        gradeLevels:
          type: array
          description: An unordered collection of learningObjectiveGradeLevels. The
            grade level for which the LearningObjective is targeted. The semantics
            of null is assumed to mean that the learning objective is not associated
            with any grade level.
          items:
            $ref: "#/components/schemas/edFi_learningObjectiveGradeLevel"
        learningStandards:
          type: array
          description: An unordered collection of learningObjectiveLearningStandards.
            LearningStandard(s) included in this objective.
          items:
            $ref: "#/components/schemas/edFi_learningObjectiveLearningStandard"
        nomenclature:
          maxLength: 35
          type: string
          description: Reflects the specific nomenclature used for the LearningObjective.
        objective:
          maxLength: 60
          type: string
          description: The designated title of the LearningObjective.
        successCriteria:
          maxLength: 150
          type: string
          description: One or more statements that describes the criteria used by
            teachers and students to check for attainment of a learning objective.
            This criteria gives clear indications as to the degree to which learning
            is moving through the Zone or Proximal Development toward independent
            achievement of the LearningObjective.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_learningObjectiveAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The description of the content or subject area (e.g., arts,
            mathematics, reading, stenography, or a foreign language) of an assessment.
          x-Ed-Fi-isIdentity: true
    edFi_learningObjectiveContentStandard:
      required:
      - title
      type: object
      properties:
        publicationStatusDescriptor:
          maxLength: 306
          type: string
          description: The publication status of the document (i.e., Adopted, Draft,
            Published, Deprecated, Unknown).
        beginDate:
          type: string
          description: The beginning of the period during which this learning standard
            document is intended for use.
          format: date
        endDate:
          type: string
          description: The end of the period during which this learning standard document
            is intended for use.
          format: date
        publicationDate:
          type: string
          description: The date on which this content was first published.
          format: date
        publicationYear:
          type: integer
          description: The year at which this content was first published.
          format: int32
        title:
          maxLength: 75
          type: string
          description: The name of the content standard, for example Common Core.
        uri:
          maxLength: 255
          type: string
          description: An unambiguous reference to the standards using a network-resolvable
            URI.
        version:
          maxLength: 50
          type: string
          description: The version identifier for the content.
        mandatingEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        authors:
          type: array
          description: An unordered collection of learningObjectiveContentStandardAuthors.
            The person or organization chiefly responsible for the intellectual content
            of the standard.
          items:
            $ref: "#/components/schemas/edFi_learningObjectiveContentStandardAuthor"
    edFi_learningObjectiveContentStandardAuthor:
      required:
      - author
      type: object
      properties:
        author:
          maxLength: 100
          type: string
          description: The person or organization chiefly responsible for the intellectual
            content of the standard.
          x-Ed-Fi-isIdentity: true
    edFi_learningObjectiveGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level for which the LearningObjective is targeted.
            The semantics of null is assumed to mean that the learning objective is
            not associated with any grade level.
          x-Ed-Fi-isIdentity: true
    edFi_learningObjectiveLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_learningObjectiveReference:
      required:
      - learningObjectiveId
      - namespace
      type: object
      properties:
        learningObjectiveId:
          maxLength: 60
          type: string
          description: The identifier for the specific learning objective in the
            context of a standard (e.g., 111.15.3.1.A).
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the LearningObjective.
        link:
          $ref: "#/components/schemas/link"
    edFi_learningStandard:
      required:
      - academicSubjects
      - description
      - gradeLevels
      - learningStandardId
      - namespace
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        academicSubjects:
          type: array
          description: An unordered collection of learningStandardAcademicSubjects.
            Subject area for the LearningStandard.
          items:
            $ref: "#/components/schemas/edFi_learningStandardAcademicSubject"
        gradeLevels:
          type: array
          description: An unordered collection of learningStandardGradeLevels. The
            grade levels for the specific learning standard.
          items:
            $ref: "#/components/schemas/edFi_learningStandardGradeLevel"
        learningStandardId:
          maxLength: 60
          type: string
          description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
          x-Ed-Fi-isIdentity: true
        parentLearningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
        contentStandard:
          $ref: "#/components/schemas/edFi_learningStandardContentStandard"
        courseTitle:
          maxLength: 60
          type: string
          description: The official Course Title with which this learning standard
            is associated.
        description:
          maxLength: 1024
          type: string
          description: The text of the statement. The textual content that either
            describes a specific competency such as \"Apply the Pythagorean Theorem
            to determine unknown side lengths in right triangles in real-world and
            mathematical problems in two and three dimensions.\" or describes a
            less granular group of competencies within the taxonomy of the standards
            document, e.g. \"Understand and apply the Pythagorean Theorem,\" or
            \"Geometry\".
        identificationCodes:
          type: array
          description: An unordered collection of learningStandardIdentificationCodes.
            A coding scheme that is used for identification and record-keeping purposes
            by schools, social services, or other agencies to refer to a learning
            standard.
          items:
            $ref: "#/components/schemas/edFi_learningStandardIdentificationCode"
        learningStandardCategoryDescriptor:
          maxLength: 306
          type: string
          description: An additional classification of the type of a specific learning
            standard.
        learningStandardItemCode:
          maxLength: 60
          type: string
          description: A code designated by the promulgating body to identify the
            statement, e.g. 1.N.3 (usually not globally unique).
        learningStandardScopeDescriptor:
          maxLength: 306
          type: string
          description: Signals the scope of usage the standard. Does not necessarily
            relate the standard to the governing body.
        namespace:
          maxLength: 255
          type: string
          description: The namespace of the organization or entity who governs the
            standard. It is recommended the namespaces observe a URI format and begin
            with a domain name under the governing organization or entity control.
        prerequisiteLearningStandards:
          type: array
          description: An unordered collection of learningStandardPrerequisiteLearningStandards.
            The unique identifier of a prerequisite learning standard item, a competency
            needed prior to learning this one. (Some items may have no prerequisites
            others may have one or more prerequisites. This should only be used
            to represent the immediate predecessors in a competency-based pathway,
            i.e. not prerequisites of prerequisites).
          items:
            $ref: "#/components/schemas/edFi_learningStandardPrerequisiteLearningStandard"
        successCriteria:
          maxLength: 150
          type: string
          description: One or more statements that describes the criteria used by
            teachers and students to check for attainment of a learning standard.
            This criteria gives clear indications as to the degree to which learning
            is moving through the Zone or Proximal Development toward independent
            achievement of the LearningStandard.
        uri:
          maxLength: 255
          type: string
          description: An unambiguous reference to the statement using a network-resolvable
            URI.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_learningStandardAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: Subject area for the LearningStandard.
          x-Ed-Fi-isIdentity: true
    edFi_learningStandardContentStandard:
      required:
      - title
      type: object
      properties:
        publicationStatusDescriptor:
          maxLength: 306
          type: string
          description: The publication status of the document (i.e., Adopted, Draft,
            Published, Deprecated, Unknown).
        beginDate:
          type: string
          description: The beginning of the period during which this learning standard
            document is intended for use.
          format: date
        endDate:
          type: string
          description: The end of the period during which this learning standard document
            is intended for use.
          format: date
        publicationDate:
          type: string
          description: The date on which this content was first published.
          format: date
        publicationYear:
          type: integer
          description: The year at which this content was first published.
          format: int32
        title:
          maxLength: 75
          type: string
          description: The name of the content standard, for example Common Core.
        uri:
          maxLength: 255
          type: string
          description: An unambiguous reference to the standards using a network-resolvable
            URI.
        version:
          maxLength: 50
          type: string
          description: The version identifier for the content.
        mandatingEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        authors:
          type: array
          description: An unordered collection of learningStandardContentStandardAuthors.
            The person or organization chiefly responsible for the intellectual content
            of the standard.
          items:
            $ref: "#/components/schemas/edFi_learningStandardContentStandardAuthor"
    edFi_learningStandardContentStandardAuthor:
      required:
      - author
      type: object
      properties:
        author:
          maxLength: 100
          type: string
          description: The person or organization chiefly responsible for the intellectual
            content of the standard.
          x-Ed-Fi-isIdentity: true
    edFi_learningStandardEquivalenceAssociation:
      required:
      - namespace
      - sourceLearningStandardReference
      - targetLearningStandardReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        namespace:
          maxLength: 255
          type: string
          description: The namespace of the organization that has created and owns
            the association.
          x-Ed-Fi-isIdentity: true
        sourceLearningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
        targetLearningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
        effectiveDate:
          type: string
          description: The date that the association is considered to be applicable
            or effective.
          format: date
        learningStandardEquivalenceStrengthDescription:
          maxLength: 255
          type: string
          description: Captures supplemental information on the relationship. Recommended
            for use only when the match is  partial.
        learningStandardEquivalenceStrengthDescriptor:
          maxLength: 306
          type: string
          description: A measure that indicates the strength or quality of the equivalence
            relationship.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_learningStandardGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels for the specific learning standard.
          x-Ed-Fi-isIdentity: true
    edFi_learningStandardIdentificationCode:
      required:
      - contentStandardName
      - identificationCode
      type: object
      properties:
        contentStandardName:
          maxLength: 65
          type: string
          description: The name of the content standard, for example Common Core.
          x-Ed-Fi-isIdentity: true
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a Learning
            Standard.
          x-Ed-Fi-isIdentity: true
    edFi_learningStandardPrerequisiteLearningStandard:
      required:
      - prerequisiteLearningStandardReference
      type: object
      properties:
        prerequisiteLearningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_learningStandardReference:
      required:
      - learningStandardId
      type: object
      properties:
        learningStandardId:
          maxLength: 60
          type: string
          description: The identifier for the specific learning standard (e.g., 111.15.3.1.A).
        link:
          $ref: "#/components/schemas/link"
    edFi_localEducationAgency:
      required:
      - categories
      - localEducationAgencyCategoryDescriptor
      - localEducationAgencyId
      - nameOfInstitution
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        localEducationAgencyId:
          type: integer
          description: The identifier assigned to a local education agency.
          format: int32
          x-Ed-Fi-isIdentity: true
        educationServiceCenterReference:
          $ref: "#/components/schemas/edFi_educationServiceCenterReference"
        parentLocalEducationAgencyReference:
          $ref: "#/components/schemas/edFi_localEducationAgencyReference"
        stateEducationAgencyReference:
          $ref: "#/components/schemas/edFi_stateEducationAgencyReference"
        accountabilities:
          type: array
          description: An unordered collection of localEducationAgencyAccountabilities.
            This entity maintains information about federal reporting and accountability
            for local education agencies.
          items:
            $ref: "#/components/schemas/edFi_localEducationAgencyAccountability"
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        charterStatusDescriptor:
          maxLength: 306
          type: string
          description: A school or agency providing free public elementary or secondary
            education to eligible students under a specific charter granted by the
            state legislature or other appropriate authority and designated by such
            authority to be a charter school.
        federalFunds:
          type: array
          description: An unordered collection of localEducationAgencyFederalFunds.
            Contains the information about the reception and use of federal funds
            for reporting purposes.
          items:
            $ref: "#/components/schemas/edFi_localEducationAgencyFederalFunds"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        localEducationAgencyCategoryDescriptor:
          maxLength: 306
          type: string
          description: "The category of local education agency/district. For example:\
            \ Independent or Charter."
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_localEducationAgencyAccountability:
      required:
      - schoolYearTypeReference
      type: object
      properties:
        gunFreeSchoolsActReportingStatusDescriptor:
          maxLength: 306
          type: string
          description: An indication of whether the school or Local Education Agency
            (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the
            state, as defined by Title 18, Section 921.
        schoolChoiceImplementStatusDescriptor:
          maxLength: 306
          type: string
          description: An indication of whether the LEA was able to implement the
            provisions for public school choice under Title I, Part A, Section 1116
            of ESEA as amended.
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
    edFi_localEducationAgencyFederalFunds:
      required:
      - fiscalYear
      type: object
      properties:
        fiscalYear:
          type: integer
          description: The fiscal year for which the federal funds are received.
          format: int32
          x-Ed-Fi-isIdentity: true
        innovativeDollarsSpent:
          type: number
          description: The total Title V, Part A funds expended by LEAs.
          format: double
        innovativeDollarsSpentStrategicPriorities:
          type: number
          description: The total amount of Title V, Part A funds expended by LEAs
            for the four strategic priorities.
          format: double
        innovativeProgramsFundsReceived:
          type: number
          description: The total Title V, Part A funds received by LEAs.
          format: double
        schoolImprovementAllocation:
          type: number
          description: The amount of Section 1003(a) and 1003(g) allocations to LEAs.
          format: double
        schoolImprovementReservedFundsPercentage:
          type: number
          description: An indication of the percentage of the Title I, Part A allocation
            that the SEA reserved in accordance with Section 1003(a) of ESEA and
            200.100(a) of ED's regulations governing the reservation of funds for
            school improvement under Section 1003(a) of ESEA.
          format: double
        stateAssessmentAdministrationFunding:
          type: number
          description: The percentage of funds used to administer assessments required
            by Section 1111(b) or to carry out other activities described in Section
            6111 and other activities related to ensuring that the state's schools
            and LEAs are held accountable for results.
          format: double
        supplementalEducationalServicesFundsSpent:
          type: number
          description: The dollar amount spent on supplemental educational services
            during the school year under Title I, Part A, Section 1116 of ESEA as
            amended.
          format: double
        supplementalEducationalServicesPerPupilExpenditure:
          type: number
          description: The maximum dollar amount that may be spent per child for expenditures
            related to supplemental educational services under Title I of the ESEA.
          format: double
    edFi_localEducationAgencyReference:
      required:
      - localEducationAgencyId
      type: object
      properties:
        localEducationAgencyId:
          type: integer
          description: The identifier assigned to a local education agency.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_location:
      required:
      - classroomIdentificationCode
      - schoolReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        classroomIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a room by
            a school, school system, state, or other agency or entity.
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        maximumNumberOfSeats:
          type: integer
          description: The most number of seats the class can maintain.
          format: int32
        optimalNumberOfSeats:
          type: integer
          description: The number of seats that is most favorable to the class.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_locationReference:
      required:
      - classroomIdentificationCode
      - schoolId
      type: object
      properties:
        classroomIdentificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a room by
            a school, school system, state, or other agency or entity.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_objectiveAssessment:
      required:
      - assessmentReference
      - identificationCode
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a space,
            room, site, building, individual, organization, program, or institution
            by a school, school system, a state, or other agency or entity.
          x-Ed-Fi-isIdentity: true
        assessmentReference:
          $ref: "#/components/schemas/edFi_assessmentReference"
        parentObjectiveAssessmentReference:
          $ref: "#/components/schemas/edFi_objectiveAssessmentReference"
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The subject area of the objective assessment.
        assessmentItems:
          type: array
          description: An unordered collection of objectiveAssessmentAssessmentItems.
            References individual test items, if appropriate.
          items:
            $ref: "#/components/schemas/edFi_objectiveAssessmentAssessmentItem"
        description:
          maxLength: 1024
          type: string
          description: The description of the ObjectiveAssessment (e.g., vocabulary,
            measurement, or geometry).
        learningObjectives:
          type: array
          description: An unordered collection of objectiveAssessmentLearningObjectives.
            References the LearningObjective(s) the ObjectiveAssessment tests.
          items:
            $ref: "#/components/schemas/edFi_objectiveAssessmentLearningObjective"
        learningStandards:
          type: array
          description: An unordered collection of objectiveAssessmentLearningStandards.
            LearningStandard tested by this ObjectiveAssessment.
          items:
            $ref: "#/components/schemas/edFi_objectiveAssessmentLearningStandard"
        maxRawScore:
          type: number
          description: The maximum raw score achievable across all assessment items
            that are correct and scored at the maximum.
          format: double
        nomenclature:
          maxLength: 35
          type: string
          description: Reflects the specific nomenclature used for this level of ObjectiveAssessment.
        percentOfAssessment:
          type: number
          description: The percentage of the Assessment that tests this objective.
          format: double
        performanceLevels:
          type: array
          description: "An unordered collection of objectiveAssessmentPerformanceLevels.\
            \ Definition of the performance levels and the associated cut scores.\
            \ Three styles are supported:        1. Specification of performance level\
            \ by minimum and maximum score        2. Specification of performance\
            \ level by cut score, using only minimum score        3. Specification\
            \ of performance level without any mapping to scores"
          items:
            $ref: "#/components/schemas/edFi_objectiveAssessmentPerformanceLevel"
        scores:
          type: array
          description: An unordered collection of objectiveAssessmentScores. Definition
            of the scores to be expected from this objective assessment.
          items:
            $ref: "#/components/schemas/edFi_objectiveAssessmentScore"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_objectiveAssessmentAssessmentItem:
      required:
      - assessmentItemReference
      type: object
      properties:
        assessmentItemReference:
          $ref: "#/components/schemas/edFi_assessmentItemReference"
    edFi_objectiveAssessmentLearningObjective:
      required:
      - learningObjectiveReference
      type: object
      properties:
        learningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
    edFi_objectiveAssessmentLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_objectiveAssessmentPerformanceLevel:
      required:
      - assessmentReportingMethodDescriptor
      - performanceLevelDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the instructor of the class uses to report
            the performance and achievement of all students. It may be a qualitative
            method such as individualized teacher comments or a quantitative method
            such as a letter or numerical grade. In some cases, more than one type
            of reporting method may be used.
          x-Ed-Fi-isIdentity: true
        performanceLevelDescriptor:
          maxLength: 306
          type: string
          description: The performance level(s) defined for the assessment.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score to make the indicated level of performance.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score required to make the indicated level of performance.
    edFi_objectiveAssessmentReference:
      required:
      - assessmentIdentifier
      - identificationCode
      - namespace
      type: object
      properties:
        assessmentIdentifier:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a space,
            room, site, building, individual, organization, program, or institution
            by a school, school system, a state, or other agency or entity.
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Assessment.
        link:
          $ref: "#/components/schemas/link"
    edFi_objectiveAssessmentScore:
      required:
      - assessmentReportingMethodDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the administrator of the assessment uses to
            report the performance and achievement of all students. It may be a qualitative
            method such as performance level descriptors or a quantitative method
            such as a numerical grade or cut score. More than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        maximumScore:
          maxLength: 35
          type: string
          description: The maximum score possible on the assessment.
        minimumScore:
          maxLength: 35
          type: string
          description: The minimum score possible on the assessment.
    edFi_openStaffPosition:
      required:
      - datePosted
      - educationOrganizationReference
      - employmentStatusDescriptor
      - requisitionNumber
      - staffClassificationDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        requisitionNumber:
          maxLength: 20
          type: string
          description: The number or identifier assigned to an open staff position,
            typically a requisition number assigned by Human Resources.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        academicSubjects:
          type: array
          description: An unordered collection of openStaffPositionAcademicSubjects.
            The teaching field required for the OpenStaffPosition, for example English/Language
            Arts, Reading, Mathematics, Science, Social Sciences, etc.
          items:
            $ref: "#/components/schemas/edFi_openStaffPositionAcademicSubject"
        datePosted:
          type: string
          description: Date the OpenStaffPosition was posted.
          format: date
        datePostingRemoved:
          type: string
          description: The date the posting was removed or filled.
          format: date
        employmentStatusDescriptor:
          maxLength: 306
          type: string
          description: "Reflects the type of employment or contract desired for the\
            \ position; for example:        Probationary        Contractual Substitute/temporary\
            \       Tenured or permanent        Volunteer/no contract        ..."
        instructionalGradeLevels:
          type: array
          description: An unordered collection of openStaffPositionInstructionalGradeLevels.
            The set of grade levels for which the position's assignment is responsible.
          items:
            $ref: "#/components/schemas/edFi_openStaffPositionInstructionalGradeLevel"
        positionTitle:
          maxLength: 100
          type: string
          description: The descriptive name of an individual's position.
        postingResultDescriptor:
          maxLength: 306
          type: string
          description: Indication of whether the OpenStaffPosition was filled or retired
            without filling.
        programAssignmentDescriptor:
          maxLength: 306
          type: string
          description: "The name of the program for which the OpenStaffPosition will\
            \ be assigned; for example:        Regular education        Title I-Academic\
            \        Title I-Non-Academic        Special Education'        Bilingual/English\
            \ as a Second Language."
        staffClassificationDescriptor:
          maxLength: 306
          type: string
          description: The titles of employment, official status, or rank of education
            staff.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_openStaffPositionAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The teaching field required for the OpenStaffPosition, for
            example English/Language Arts, Reading, Mathematics, Science, Social
            Sciences, etc.
          x-Ed-Fi-isIdentity: true
    edFi_openStaffPositionInstructionalGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The set of grade levels for which the position's assignment
            is responsible.
          x-Ed-Fi-isIdentity: true
    edFi_organizationDepartment:
      required:
      - categories
      - nameOfInstitution
      - organizationDepartmentId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        organizationDepartmentId:
          type: integer
          description: The unique identification code for the OrganizationDepartment.
          format: int32
          x-Ed-Fi-isIdentity: true
        parentEducationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The intended major subject area of the department.
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_parent:
      required:
      - firstName
      - lastSurname
      - parentUniqueId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        parentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a parent.
          x-Ed-Fi-isIdentity: true
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        addresses:
          type: array
          description: An unordered collection of parentAddresses. Parent's address,
            if different from the student address.
          items:
            $ref: "#/components/schemas/edFi_parentAddress"
        electronicMails:
          type: array
          description: An unordered collection of parentElectronicMails. The numbers,
            letters, and symbols used to identify an electronic mail (e-mail) user
            within the network to which the individual or organization belongs.
          items:
            $ref: "#/components/schemas/edFi_parentElectronicMail"
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        highestCompletedLevelOfEducationDescriptor:
          maxLength: 306
          type: string
          description: The extent of formal instruction an individual has received
            (e.g., the highest grade in school completed or its equivalent or the
            highest degree received).
        internationalAddresses:
          type: array
          description: An unordered collection of parentInternationalAddresses. The
            set of elements that describes an international address.
          items:
            $ref: "#/components/schemas/edFi_parentInternationalAddress"
        languages:
          type: array
          description: An unordered collection of parentLanguages. The language(s)
            the individual uses to communicate. It is strongly recommended that entries
            use only ISO 639-2 language codes.
          items:
            $ref: "#/components/schemas/edFi_parentLanguage"
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        loginId:
          maxLength: 60
          type: string
          description: The login ID for the user; used for security access control
            interface.
        maidenName:
          maxLength: 75
          type: string
          description: The person's maiden name.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        otherNames:
          type: array
          description: An unordered collection of parentOtherNames. Other names (e.g.,
            alias, nickname, previous legal name) associated with a person.
          items:
            $ref: "#/components/schemas/edFi_parentOtherName"
        personalIdentificationDocuments:
          type: array
          description: "An unordered collection of parentPersonalIdentificationDocuments.\
            \ The documents presented as evident to verify one's personal identity;\
            \ for example: drivers license, passport, birth certificate, etc."
          items:
            $ref: "#/components/schemas/edFi_parentPersonalIdentificationDocument"
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
        sexDescriptor:
          maxLength: 306
          type: string
          description: A person's gender.
        telephones:
          type: array
          description: An unordered collection of parentTelephones. The 10-digit
            telephone number, including the area code, for the person.
          items:
            $ref: "#/components/schemas/edFi_parentTelephone"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_parentAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
          x-Ed-Fi-isIdentity: true
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
          x-Ed-Fi-isIdentity: true
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
          x-Ed-Fi-isIdentity: true
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
          x-Ed-Fi-isIdentity: true
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                      'which an address is located.
        periods:
          type: array
          description: An unordered collection of parentAddressPeriods. The time
            periods for which the address is valid. For physical addresses, the
            periods in which the person lived at that address.
          items:
            $ref: "#/components/schemas/edFi_parentAddressPeriod"
    edFi_parentAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_parentElectronicMail:
      required:
      - electronicMailAddress
      - electronicMailTypeDescriptor
      type: object
      properties:
        electronicMailTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of email listed for an individual or organization.\
            \ For example: Home/Personal, Work, etc.)"
          x-Ed-Fi-isIdentity: true
        electronicMailAddress:
          maxLength: 128
          type: string
          description: The electronic mail (e-mail) address listed for an individual
            or organization.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the electronic email address should not
            be published.
        primaryEmailAddressIndicator:
          type: boolean
          description: An indication that the electronic mail address should be used
            as the principal electronic mail address for an individual or organization.
    edFi_parentInternationalAddress:
      required:
      - addressLine1
      - addressTypeDescriptor
      - countryDescriptor
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        countryDescriptor:
          maxLength: 306
          type: string
          description: The name of the country. It is strongly recommended that entries
            use only ISO 3166 2-letter country codes.
        addressLine1:
          maxLength: 150
          type: string
          description: The first line of the address.
        addressLine2:
          maxLength: 150
          type: string
          description: The second line of the address.
        addressLine3:
          maxLength: 150
          type: string
          description: The third line of the address.
        addressLine4:
          maxLength: 150
          type: string
          description: The fourth line of the address.
        beginDate:
          type: string
          description: The first date the address is valid. For physical addresses,
            the date the person moved to that address.
          format: date
        endDate:
          type: string
          description: The last date the address is valid. For physical addresses,
            this would be the date the person moved from that address.
          format: date
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
    edFi_parentLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: A specification of which written or spoken communication is
            being used.
          x-Ed-Fi-isIdentity: true
        uses:
          type: array
          description: An unordered collection of parentLanguageUses. A description
            of how the language is used (e.g. Home Language, Native Language, Spoken
            Language).
          items:
            $ref: "#/components/schemas/edFi_parentLanguageUse"
    edFi_parentLanguageUse:
      required:
      - languageUseDescriptor
      type: object
      properties:
        languageUseDescriptor:
          maxLength: 306
          type: string
          description: A description of how the language is used (e.g. Home Language,
            Native Language, Spoken Language).
          x-Ed-Fi-isIdentity: true
    edFi_parentOtherName:
      required:
      - firstName
      - lastSurname
      - otherNameTypeDescriptor
      type: object
      properties:
        otherNameTypeDescriptor:
          maxLength: 306
          type: string
          description: The types of alternate names for a person.
          x-Ed-Fi-isIdentity: true
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
    edFi_parentPersonalIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    edFi_parentReference:
      required:
      - parentUniqueId
      type: object
      properties:
        parentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a parent.
        link:
          $ref: "#/components/schemas/link"
    edFi_parentTelephone:
      required:
      - telephoneNumber
      - telephoneNumberTypeDescriptor
      type: object
      properties:
        telephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the telephone number should not be published.
        orderOfPriority:
          type: integer
          description: The order of priority assigned to telephone numbers to define
            which number to attempt first, second, etc.
          format: int32
        textMessageCapabilityIndicator:
          type: boolean
          description: An indication that the telephone number is technically capable
            of sending and receiving Short Message Service (SMS) text messages.
    edFi_payroll:
      required:
      - accountReference
      - amountToDate
      - asOfDate
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        asOfDate:
          type: string
          description: The date of the reported payroll element.
          format: date
          x-Ed-Fi-isIdentity: true
        accountReference:
          $ref: "#/components/schemas/edFi_accountReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        amountToDate:
          type: number
          description: Current balance (amount paid to employee) for account for the
            fiscal year.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_person:
      required:
      - personId
      - sourceSystemDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        personId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a person.
          x-Ed-Fi-isIdentity: true
        sourceSystemDescriptor:
          maxLength: 306
          type: string
          description: This descriptor defines the originating record source system
            for the person.
          x-Ed-Fi-isIdentity: true
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_personReference:
      required:
      - personId
      - sourceSystemDescriptor
      type: object
      properties:
        personId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a person.
        sourceSystemDescriptor:
          maxLength: 306
          type: string
          description: This descriptor defines the originating record source system
            for the person.
        link:
          $ref: "#/components/schemas/link"
    edFi_postSecondaryEvent:
      required:
      - eventDate
      - postSecondaryEventCategoryDescriptor
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        eventDate:
          type: string
          description: The date the event occurred or was recorded.
          format: date
          x-Ed-Fi-isIdentity: true
        postSecondaryEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: The PostSecondaryEvent that is logged (e.g., FAFSA application,
            college application, college acceptance).
          x-Ed-Fi-isIdentity: true
        postSecondaryInstitutionReference:
          $ref: "#/components/schemas/edFi_postSecondaryInstitutionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_postSecondaryInstitution:
      required:
      - categories
      - nameOfInstitution
      - postSecondaryInstitutionId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        postSecondaryInstitutionId:
          type: integer
          description: The ID of the post secondary institution.
          format: int32
          x-Ed-Fi-isIdentity: true
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        administrativeFundingControlDescriptor:
          maxLength: 306
          type: string
          description: A classification of whether a postsecondary institution is
            operated by publicly elected or appointed officials (public control) or
            by privately elected or appointed officials and derives its major source
            of funds from private sources (private control).
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        mediumOfInstructions:
          type: array
          description: An unordered collection of postSecondaryInstitutionMediumOfInstructions.
            The categories in which an institution serves the students.
          items:
            $ref: "#/components/schemas/edFi_postSecondaryInstitutionMediumOfInstruction"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        postSecondaryInstitutionLevelDescriptor:
          maxLength: 306
          type: string
          description: A classification of whether a post secondary institution's
            highest level of offering is a program of 4-years or higher (4 year),
            2-but-less-than 4-years (2 year), or less than 2-years.
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_postSecondaryInstitutionMediumOfInstruction:
      required:
      - mediumOfInstructionDescriptor
      type: object
      properties:
        mediumOfInstructionDescriptor:
          maxLength: 306
          type: string
          description: The categories in which an institution serves the students.
          x-Ed-Fi-isIdentity: true
    edFi_postSecondaryInstitutionReference:
      required:
      - postSecondaryInstitutionId
      type: object
      properties:
        postSecondaryInstitutionId:
          type: integer
          description: The ID of the post secondary institution.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_program:
      required:
      - educationOrganizationReference
      - programName
      - programTypeDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        programName:
          maxLength: 60
          type: string
          description: The formal name of the Program of instruction, training, services,
            or benefits available through federal, state, or local agencies.
          x-Ed-Fi-isIdentity: true
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        characteristics:
          type: array
          description: An unordered collection of programCharacteristics. Reflects
            important characteristics of the Program, such as categories or particular
            indications.
          items:
            $ref: "#/components/schemas/edFi_programCharacteristic"
        learningObjectives:
          type: array
          description: An unordered collection of programLearningObjectives. References
            the LearningObjective(s) with which the Program is associated.
          items:
            $ref: "#/components/schemas/edFi_programLearningObjective"
        learningStandards:
          type: array
          description: An unordered collection of programLearningStandards. LearningStandard
            followed by this program.
          items:
            $ref: "#/components/schemas/edFi_programLearningStandard"
        programId:
          maxLength: 20
          type: string
          description: A unique number or alphanumeric code assigned to a program
            by a school, school system, a state, or other agency or entity.
        services:
          type: array
          description: An unordered collection of programServices. Defines the services
            this program provides to students.
          items:
            $ref: "#/components/schemas/edFi_programService"
        sponsors:
          type: array
          description: An unordered collection of programSponsors. Ultimate and intermediate
            providers of funds for a particular educational or service program or
            activity, or for an individual's participation in the program or activity
            (e.g., Federal, State, ESC, District, School, Private Organization).
          items:
            $ref: "#/components/schemas/edFi_programSponsor"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_programCharacteristic:
      required:
      - programCharacteristicDescriptor
      type: object
      properties:
        programCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: Reflects important characteristics of the Program, such as
            categories or particular indications.
          x-Ed-Fi-isIdentity: true
    edFi_programLearningObjective:
      required:
      - learningObjectiveReference
      type: object
      properties:
        learningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
    edFi_programLearningStandard:
      required:
      - learningStandardReference
      type: object
      properties:
        learningStandardReference:
          $ref: "#/components/schemas/edFi_learningStandardReference"
    edFi_programReference:
      required:
      - educationOrganizationId
      - programName
      - programTypeDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        programName:
          maxLength: 60
          type: string
          description: The formal name of the Program of instruction, training, services,
            or benefits available through federal, state, or local agencies.
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
        link:
          $ref: "#/components/schemas/link"
    edFi_programService:
      required:
      - serviceDescriptor
      type: object
      properties:
        serviceDescriptor:
          maxLength: 306
          type: string
          description: Defines the services this program provides to students.
          x-Ed-Fi-isIdentity: true
    edFi_programSponsor:
      required:
      - programSponsorDescriptor
      type: object
      properties:
        programSponsorDescriptor:
          maxLength: 306
          type: string
          description: Ultimate and intermediate providers of funds for a particular
            educational or service program or activity, or for an individual's participation
            in the program or activity (e.g., Federal, State, ESC, District, School,
            Private Organization).
          x-Ed-Fi-isIdentity: true
    edFi_reportCard:
      required:
      - educationOrganizationReference
      - gradingPeriodReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        gpaCumulative:
          type: number
          description: A measure of cumulative average performance in all courses
            taken by an individual from the beginning of the school year through the
            current grading period.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        gpaGivenGradingPeriod:
          type: number
          description: A measure of average performance in all courses taken by an
            individual for the current grading period.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        gradePointAverages:
          type: array
          description: An unordered collection of reportCardGradePointAverages. A
            measure of average performance for courses taken by an individual.
          items:
            $ref: "#/components/schemas/edFi_reportCardGradePointAverage"
        grades:
          type: array
          description: An unordered collection of reportCardGrades. Grades for the
            classes attended by the Student for this grading period.
          items:
            $ref: "#/components/schemas/edFi_reportCardGrade"
        numberOfDaysAbsent:
          type: number
          description: The number of days an individual is absent when school is in
            session during a given reporting period.
          format: double
        numberOfDaysInAttendance:
          type: number
          description: The number of days an individual is present when school is
            in session during a given reporting period.
          format: double
        numberOfDaysTardy:
          type: integer
          description: The number of days an individual is tardy during a given reporting
            period.
          format: int32
        studentCompetencyObjectives:
          type: array
          description: An unordered collection of reportCardStudentCompetencyObjectives.
            The Student competency evaluations associated for this grading period.
          items:
            $ref: "#/components/schemas/edFi_reportCardStudentCompetencyObjective"
        studentLearningObjectives:
          type: array
          description: An unordered collection of reportCardStudentLearningObjectives.
            The StudentLearningObjective evaluations associated for this grading period.
          items:
            $ref: "#/components/schemas/edFi_reportCardStudentLearningObjective"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_reportCardGrade:
      required:
      - gradeReference
      type: object
      properties:
        gradeReference:
          $ref: "#/components/schemas/edFi_gradeReference"
    edFi_reportCardGradePointAverage:
      required:
      - gradePointAverageTypeDescriptor
      - gradePointAverageValue
      type: object
      properties:
        gradePointAverageTypeDescriptor:
          maxLength: 306
          type: string
          description: The system used for calculating the grade point average for
            an individual.
          x-Ed-Fi-isIdentity: true
        gradePointAverageValue:
          type: number
          description: The value of the grade points earned divided by the number
            of credits attempted.
          format: double
        isCumulative:
          type: boolean
          description: Indicator of whether or not the Grade Point Average value is
            cumulative.
        maxGradePointAverageValue:
          type: number
          description: The maximum value for the grade point average.
          format: double
    edFi_reportCardReference:
      required:
      - educationOrganizationId
      - gradingPeriodDescriptor
      - gradingPeriodSchoolId
      - gradingPeriodSchoolYear
      - gradingPeriodSequence
      - studentUniqueId
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
        gradingPeriodSchoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        gradingPeriodSchoolYear:
          type: integer
          description: The identifier for the grading period school year.
          format: int32
        gradingPeriodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_reportCardStudentCompetencyObjective:
      required:
      - studentCompetencyObjectiveReference
      type: object
      properties:
        studentCompetencyObjectiveReference:
          $ref: "#/components/schemas/edFi_studentCompetencyObjectiveReference"
    edFi_reportCardStudentLearningObjective:
      required:
      - studentLearningObjectiveReference
      type: object
      properties:
        studentLearningObjectiveReference:
          $ref: "#/components/schemas/edFi_studentLearningObjectiveReference"
    edFi_restraintEvent:
      required:
      - eventDate
      - restraintEventIdentifier
      - schoolReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        restraintEventIdentifier:
          maxLength: 20
          type: string
          description: A unique number or alphanumeric code assigned to a restraint
            event by a school, school system, state, or other agency or entity.
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The setting where the RestraintEvent was exercised.
        eventDate:
          type: string
          description: Month, day, and year of the RestraintEvent.
          format: date
        programs:
          type: array
          description: An unordered collection of restraintEventPrograms. The special
            education program associated with the RestraintEvent.
          items:
            $ref: "#/components/schemas/edFi_restraintEventProgram"
        reasons:
          type: array
          description: An unordered collection of restraintEventReasons. A categorization
            of the circumstances or reason for the RestraintEvent.
          items:
            $ref: "#/components/schemas/edFi_restraintEventReason"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_restraintEventProgram:
      required:
      - programReference
      type: object
      properties:
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
    edFi_restraintEventReason:
      required:
      - restraintEventReasonDescriptor
      type: object
      properties:
        restraintEventReasonDescriptor:
          maxLength: 306
          type: string
          description: A categorization of the circumstances or reason for the RestraintEvent.
          x-Ed-Fi-isIdentity: true
    edFi_school:
      required:
      - educationOrganizationCategories
      - gradeLevels
      - nameOfInstitution
      - schoolId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationCategories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        gradeLevels:
          type: array
          description: An unordered collection of schoolGradeLevels. The grade levels
            served at the school.
          items:
            $ref: "#/components/schemas/edFi_schoolGradeLevel"
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
          x-Ed-Fi-isIdentity: true
        charterApprovalSchoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        localEducationAgencyReference:
          $ref: "#/components/schemas/edFi_localEducationAgencyReference"
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        administrativeFundingControlDescriptor:
          maxLength: 306
          type: string
          description: The type of education institution as classified by its funding
            source, for example public or private.
        charterApprovalAgencyTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of agency that approved the establishment or continuation
            of a charter school.
        charterStatusDescriptor:
          maxLength: 306
          type: string
          description: A school or agency providing free public elementary or secondary
            education to eligible students under a specific charter granted by the
            state legislature or other appropriate authority and designated by such
            authority to be a charter school.
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        internetAccessDescriptor:
          maxLength: 306
          type: string
          description: The type of Internet access available.
        magnetSpecialProgramEmphasisSchoolDescriptor:
          maxLength: 306
          type: string
          description: "A school that has been designed: 1) to attract students of\
            \ different racial/ethnic backgrounds for the purpose of reducing, preventing,\
            \ or eliminating racial isolation; and/or 2) to provide an academic or\
            \ social focus on a particular theme (e.g., science/math, performing arts,\
            \ gifted/talented, or foreign language)."
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        schoolCategories:
          type: array
          description: "An unordered collection of schoolCategories. The one or more\
            \ categories of school. For example: High School, Middle School, and/or\
            \ Elementary School."
          items:
            $ref: "#/components/schemas/edFi_schoolCategory"
        schoolTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of education institution as classified by its primary
            focus.
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        titleIPartASchoolDesignationDescriptor:
          maxLength: 306
          type: string
          description: Denotes the Title I Part A designation for the school.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
        _ext:
          $ref: "#/components/schemas/schoolExtensions"
    edFi_schoolCategory:
      required:
      - schoolCategoryDescriptor
      type: object
      properties:
        schoolCategoryDescriptor:
          maxLength: 306
          type: string
          description: "The one or more categories of school. For example: High School,\
            \ Middle School, and/or Elementary School."
          x-Ed-Fi-isIdentity: true
    edFi_schoolGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels served at the school.
          x-Ed-Fi-isIdentity: true
    edFi_schoolReference:
      required:
      - schoolId
      type: object
      properties:
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_schoolYearType:
      required:
      - currentSchoolYear
      - schoolYear
      - schoolYearDescription
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        schoolYear:
          type: integer
          description: Key for School Year
          format: int32
          x-Ed-Fi-isIdentity: true
        currentSchoolYear:
          type: boolean
          description: The code for the current school year.
        schoolYearDescription:
          maxLength: 50
          type: string
          description: The description for the SchoolYear type.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_schoolYearTypeReference:
      required:
      - schoolYear
      type: object
      properties:
        schoolYear:
          type: integer
          description: Key for School Year
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_section:
      required:
      - courseOfferingReference
      - sectionIdentifier
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        sectionIdentifier:
          maxLength: 255
          type: string
          description: The local identifier assigned to a section.
          x-Ed-Fi-isIdentity: true
        courseOfferingReference:
          $ref: "#/components/schemas/edFi_courseOfferingReference"
        locationReference:
          $ref: "#/components/schemas/edFi_locationReference"
        locationSchoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        availableCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        availableCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        availableCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        characteristics:
          type: array
          description: An unordered collection of sectionCharacteristics. Reflects
            important characteristics of the Section, such as whether or not attendance
            is taken and the Section is graded.
          items:
            $ref: "#/components/schemas/edFi_sectionCharacteristic"
        classPeriods:
          type: array
          description: An unordered collection of sectionClassPeriods. The class period
            during which the Section meets.
          items:
            $ref: "#/components/schemas/edFi_sectionClassPeriod"
        courseLevelCharacteristics:
          type: array
          description: An unordered collection of sectionCourseLevelCharacteristics.
            The type of specific program or designation with which the section is
            associated (e.g., AP, IB, Dual Credit, CTE). This collection should
            only be populated if it differs from the Course Level Characteristics
            identified at the Course Offering level.
          items:
            $ref: "#/components/schemas/edFi_sectionCourseLevelCharacteristic"
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: "The setting in which a child receives education and related\
            \ services; for example:        Center-based instruction        Home-based\
            \ instruction        Hospital class        Mainstream        Residential\
            \ care and treatment facility        ..."
        instructionLanguageDescriptor:
          maxLength: 306
          type: string
          description: The primary language of instruction, if omitted English is
            assumed.
        mediumOfInstructionDescriptor:
          maxLength: 306
          type: string
          description: "The media through which teachers provide instruction to students\
            \ and students and teachers communicate about instructional matters; for\
            \ example:        Technology-based instruction in classroom Correspondence\
            \ instruction        Face-to-face instruction Virtual/On-line Distance\
            \ learning        Center-based instruction        ..."
        offeredGradeLevels:
          type: array
          description: An unordered collection of sectionOfferedGradeLevels. The grade
            levels in which the section is offered. This collection should only be
            populated if it differs from the Offered Grade Levels identified at the
            Course Offering level.
          items:
            $ref: "#/components/schemas/edFi_sectionOfferedGradeLevel"
        officialAttendancePeriod:
          type: boolean
          description: Indicator of whether this section is used for official daily
            attendance. Alternatively, official daily attendance may be tied to
            a Class Period.
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: "The type of students the Section is offered and tailored to;\
            \ for example:        Bilingual students        Remedial education students\
            \        Gifted and talented students        Career and Technical Education\
            \ students        Special education students ..."
        programs:
          type: array
          description: An unordered collection of sectionPrograms. Optional reference
            to program (e.g., CTE) to which the Section is associated.
          items:
            $ref: "#/components/schemas/edFi_sectionProgram"
        sectionName:
          maxLength: 100
          type: string
          description: A locally-defined name for the section, generally created
            to make the section more recognizable in informal contexts and generally
            distinct from the SectionIdentifier.
        sequenceOfCourse:
          type: integer
          description: When a section is part of a sequence of parts for a course,
            the number of the sequence. If the course has only one part, the value
            of this section attribute should be 1.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_sectionAttendanceTakenEvent:
      required:
      - calendarDateReference
      - eventDate
      - sectionReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        calendarDateReference:
          $ref: "#/components/schemas/edFi_calendarDateReference"
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        eventDate:
          type: string
          description: The date the SectionAttendanceTakenEvent was submitted, which
            could be a different date than the instructional day.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_sectionCharacteristic:
      required:
      - sectionCharacteristicDescriptor
      type: object
      properties:
        sectionCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: Reflects important characteristics of the Section, such as
            whether or not attendance is taken and the Section is graded.
          x-Ed-Fi-isIdentity: true
    edFi_sectionClassPeriod:
      required:
      - classPeriodReference
      type: object
      properties:
        classPeriodReference:
          $ref: "#/components/schemas/edFi_classPeriodReference"
    edFi_sectionCourseLevelCharacteristic:
      required:
      - courseLevelCharacteristicDescriptor
      type: object
      properties:
        courseLevelCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: The type of specific program or designation with which the
            section is associated (e.g., AP, IB, Dual Credit, CTE). This collection
            should only be populated if it differs from the Course Level Characteristics
            identified at the Course Offering level.
          x-Ed-Fi-isIdentity: true
    edFi_sectionOfferedGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels in which the section is offered. This collection
            should only be populated if it differs from the Offered Grade Levels identified
            at the Course Offering level.
          x-Ed-Fi-isIdentity: true
    edFi_sectionProgram:
      required:
      - programReference
      type: object
      properties:
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
    edFi_sectionReference:
      required:
      - localCourseCode
      - schoolId
      - schoolYear
      - sectionIdentifier
      - sessionName
      type: object
      properties:
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sectionIdentifier:
          maxLength: 255
          type: string
          description: The local identifier assigned to a section.
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        link:
          $ref: "#/components/schemas/link"
    edFi_session:
      required:
      - beginDate
      - endDate
      - schoolReference
      - schoolYearTypeReference
      - sessionName
      - termDescriptor
      - totalInstructionalDays
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        academicWeeks:
          type: array
          description: An unordered collection of sessionAcademicWeeks. The academic
            weeks associated with the school year.
          items:
            $ref: "#/components/schemas/edFi_sessionAcademicWeek"
        beginDate:
          type: string
          description: Month, day, and year of the first day of the Session.
          format: date
        endDate:
          type: string
          description: Month, day and year of the last day of the Session.
          format: date
        gradingPeriods:
          type: array
          description: An unordered collection of sessionGradingPeriods. Grading periods
            associated with the session.
          items:
            $ref: "#/components/schemas/edFi_sessionGradingPeriod"
        termDescriptor:
          maxLength: 306
          type: string
          description: An descriptor value indicating the term (e.g. 'Semester',
            'Quarter', etc.).
        totalInstructionalDays:
          type: integer
          description: The total number of instructional days in the school calendar.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_sessionAcademicWeek:
      required:
      - academicWeekReference
      type: object
      properties:
        academicWeekReference:
          $ref: "#/components/schemas/edFi_academicWeekReference"
    edFi_sessionGradingPeriod:
      required:
      - gradingPeriodReference
      type: object
      properties:
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
    edFi_sessionReference:
      required:
      - schoolId
      - schoolYear
      - sessionName
      type: object
      properties:
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        link:
          $ref: "#/components/schemas/link"
    edFi_staff:
      required:
      - firstName
      - lastSurname
      - staffUniqueId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        staffUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a staff.
          x-Ed-Fi-isIdentity: true
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        addresses:
          type: array
          description: An unordered collection of staffAddresses. The set of elements
            that describes an address, including the street address, city, state,
            and ZIP code.
          items:
            $ref: "#/components/schemas/edFi_staffAddress"
        ancestryEthnicOrigins:
          type: array
          description: An unordered collection of staffAncestryEthnicOrigins. The
            original peoples or cultures with which the individual identifies.
          items:
            $ref: "#/components/schemas/edFi_staffAncestryEthnicOrigin"
        birthDate:
          type: string
          description: The month, day, and year on which an individual was born.
          format: date
        citizenshipStatusDescriptor:
          maxLength: 306
          type: string
          description: An indicator of whether or not the person is a U.S. citizen.
        credentials:
          type: array
          description: An unordered collection of staffCredentials. The legal document
            giving authorization to perform teaching assignment services.
          items:
            $ref: "#/components/schemas/edFi_staffCredential"
        electronicMails:
          type: array
          description: An unordered collection of staffElectronicMails. The numbers,
            letters, and symbols used to identify an electronic mail (e-mail) user
            within the network to which the individual or organization belongs.
          items:
            $ref: "#/components/schemas/edFi_staffElectronicMail"
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        highestCompletedLevelOfEducationDescriptor:
          maxLength: 306
          type: string
          description: The extent of formal instruction an individual has received
            (e.g., the highest grade in school completed or its equivalent or the
            highest degree received).
        highlyQualifiedTeacher:
          type: boolean
          description: An indication of whether a teacher is classified as highly
            qualified for his/her assignment according to state definition. This attribute
            indicates the teacher is highly qualified for ALL Sections being taught.
        hispanicLatinoEthnicity:
          type: boolean
          description: An indication that the individual traces his or her origin
            or descent to Mexico, Puerto Rico, Cuba, Central, and South America,
            and other Spanish cultures, regardless of race. The term, \"Spanish
            origin,\" can be used in addition to \"Hispanic or Latino.\"
        identificationCodes:
          type: array
          description: An unordered collection of staffIdentificationCodes. A unique
            number or alphanumeric code assigned to a staff member by a school,
            school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_staffIdentificationCode"
        identificationDocuments:
          type: array
          description: An unordered collection of staffIdentificationDocuments. Describe
            the documentation of citizenship.
          items:
            $ref: "#/components/schemas/edFi_staffIdentificationDocument"
        internationalAddresses:
          type: array
          description: An unordered collection of staffInternationalAddresses. The
            set of elements that describes an international address.
          items:
            $ref: "#/components/schemas/edFi_staffInternationalAddress"
        languages:
          type: array
          description: An unordered collection of staffLanguages. The language(s)
            the individual uses to communicate. It is strongly recommended that entries
            use only ISO 639-2 language codes.
          items:
            $ref: "#/components/schemas/edFi_staffLanguage"
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        loginId:
          maxLength: 60
          type: string
          description: The login ID for the user; used for security access control
            interface.
        maidenName:
          maxLength: 75
          type: string
          description: The person's maiden name.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        oldEthnicityDescriptor:
          maxLength: 306
          type: string
          description: "Previous definition of Ethnicity combining Hispanic/Latino and\
            \ race:        1 - American Indian or Alaskan Native        2 - Asian or
            \ Pacific Islander        3 - Black, not of Hispanic origin 4 - Hispanic
            \        5 - White, not of Hispanic origin."
        otherNames:
          type: array
          description: An unordered collection of staffOtherNames. Other names (e.g.,
            alias, nickname, previous legal name) associated with a person.
          items:
            $ref: "#/components/schemas/edFi_staffOtherName"
        personalIdentificationDocuments:
          type: array
          description: "An unordered collection of staffPersonalIdentificationDocuments.\
            \ The documents presented as evident to verify one's personal identity;\
            \ for example: drivers license, passport, birth certificate, etc."
          items:
            $ref: "#/components/schemas/edFi_staffPersonalIdentificationDocument"
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
        races:
          type: array
          description: An unordered collection of staffRaces. The general racial
            category which most clearly reflects the individual's recognition of
            his or her community or with which the individual most identifies. The
            way this data element is listed, it must allow for multiple entries
            so that each individual can specify all appropriate races.
          items:
            $ref: "#/components/schemas/edFi_staffRace"
        recognitions:
          type: array
          description: An unordered collection of staffRecognitions. Recognitions
            given to the staff for accomplishments in a co-curricular or extracurricular
            activity.
          items:
            $ref: "#/components/schemas/edFi_staffRecognition"
        sexDescriptor:
          maxLength: 306
          type: string
          description: A person's gender.
        telephones:
          type: array
          description: An unordered collection of staffTelephones. The 10-digit telephone
            number, including the area code, for the person.
          items:
            $ref: "#/components/schemas/edFi_staffTelephone"
        tribalAffiliations:
          type: array
          description: An unordered collection of staffTribalAffiliations. An American
            Indian tribe with which the staff member is affiliated.
          items:
            $ref: "#/components/schemas/edFi_staffTribalAffiliation"
        visas:
          type: array
          description: An unordered collection of staffVisas. An indicator of a non-US
            citizen's Visa type.
          items:
            $ref: "#/components/schemas/edFi_staffVisa"
        yearsOfPriorProfessionalExperience:
          type: number
          description: The total number of years that an individual has previously
            held a similar professional position in one or more education institutions.
          format: double
        yearsOfPriorTeachingExperience:
          type: number
          description: The total number of years that an individual has previously
            held a teaching position in one or more education institutions.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffAbsenceEvent:
      required:
      - absenceEventCategoryDescriptor
      - eventDate
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        absenceEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: The code describing the type of absence.
          x-Ed-Fi-isIdentity: true
        eventDate:
          type: string
          description: Date for this leave event.
          format: date
          x-Ed-Fi-isIdentity: true
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        absenceEventReason:
          maxLength: 40
          type: string
          description: Expanded reason for the staff absence.
        hoursAbsent:
          type: number
          description: The hours the staff was absent, if not the entire working
            day.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
          x-Ed-Fi-isIdentity: true
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
          x-Ed-Fi-isIdentity: true
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
          x-Ed-Fi-isIdentity: true
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
          x-Ed-Fi-isIdentity: true
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                      'which an address is located.
        periods:
          type: array
          description: An unordered collection of staffAddressPeriods. The time periods
            for which the address is valid. For physical addresses, the periods
            in which the person lived at that address.
          items:
            $ref: "#/components/schemas/edFi_staffAddressPeriod"
    edFi_staffAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_staffAncestryEthnicOrigin:
      required:
      - ancestryEthnicOriginDescriptor
      type: object
      properties:
        ancestryEthnicOriginDescriptor:
          maxLength: 306
          type: string
          description: The original peoples or cultures with which the individual
            identifies.
          x-Ed-Fi-isIdentity: true
    edFi_staffCohortAssociation:
      required:
      - beginDate
      - cohortReference
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: Start date for the association of staff to this cohort.
          format: date
          x-Ed-Fi-isIdentity: true
        cohortReference:
          $ref: "#/components/schemas/edFi_cohortReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        endDate:
          type: string
          description: End date for the association of staff to this cohort.
          format: date
        studentRecordAccess:
          type: boolean
          description: Indicator of whether the staff has access to the student records
            of the cohort per district interpretation of FERPA and other privacy
            laws, regulations, and policies.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffCredential:
      required:
      - credentialReference
      type: object
      properties:
        credentialReference:
          $ref: "#/components/schemas/edFi_credentialReference"
    edFi_staffDisciplineIncidentAssociation:
      required:
      - disciplineIncidentParticipationCodes
      - disciplineIncidentReference
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        disciplineIncidentParticipationCodes:
          type: array
          description: An unordered collection of staffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes.
            The role or type of participation of a student in a discipline incident
            (e.g., Victim, Perpetrator, Witness, Reporter).
          items:
            $ref: "#/components/schemas/edFi_staffDisciplineIncidentAssociationDisciplineIncidentParticipationCode"
        disciplineIncidentReference:
          $ref: "#/components/schemas/edFi_disciplineIncidentReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffDisciplineIncidentAssociationDisciplineIncidentParticipationCode:
      required:
      - disciplineIncidentParticipationCodeDescriptor
      type: object
      properties:
        disciplineIncidentParticipationCodeDescriptor:
          maxLength: 306
          type: string
          description: The role or type of participation of a student in a discipline
            incident (e.g., Victim, Perpetrator, Witness, Reporter).
          x-Ed-Fi-isIdentity: true
    edFi_staffEducationOrganizationAssignmentAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - staffClassificationDescriptor
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: Month, day, and year of the start or effective date of a staff
            member's employment, contract, or relationship with the education organization.
          format: date
          x-Ed-Fi-isIdentity: true
        staffClassificationDescriptor:
          maxLength: 306
          type: string
          description: The titles of employment, official status, or rank of education
            staff.
          x-Ed-Fi-isIdentity: true
        credentialReference:
          $ref: "#/components/schemas/edFi_credentialReference"
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        employmentStaffEducationOrganizationEmploymentAssociationReference:
          $ref: "#/components/schemas/edFi_staffEducationOrganizationEmploymentAssociationReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        endDate:
          type: string
          description: Month, day, and year of the end or termination date of a staff
            member's employment, contract, or relationship with the education organization.
          format: date
        fullTimeEquivalency:
          type: number
          description: The ratio between the hours of work expected in a position
            and the hours of work normally expected in a full-time position in the
            same setting.
          format: double
        orderOfAssignment:
          type: integer
          description: Describes whether the assignment is this the staff member's
            primary assignment, secondary assignment, etc.
          format: int32
        positionTitle:
          maxLength: 100
          type: string
          description: The descriptive name of an individual's position.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffEducationOrganizationContactAssociation:
      required:
      - contactTitle
      - educationOrganizationReference
      - electronicMailAddress
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        contactTitle:
          maxLength: 75
          type: string
          description: The title of the contact in the context of the EducationOrganization.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        address:
          $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociationAddress"
        contactTypeDescriptor:
          maxLength: 306
          type: string
          description: Indicates the type for the contact information.
        electronicMailAddress:
          maxLength: 128
          type: string
          description: The email for the contact associated with the EducationOrganization.
        telephones:
          type: array
          description: An unordered collection of staffEducationOrganizationContactAssociationTelephones.
            The optional telephone for the contact associated with the EducationOrganization.
          items:
            $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociationTelephone"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffEducationOrganizationContactAssociationAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                      'which an address is located.
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
        periods:
          type: array
          description: An unordered collection of staffEducationOrganizationContactAssociationAddressPeriods.
            The time periods for which the address is valid. For physical addresses,
            the periods in which the person lived at that address.
          items:
            $ref: "#/components/schemas/edFi_staffEducationOrganizationContactAssociationAddressPeriod"
    edFi_staffEducationOrganizationContactAssociationAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_staffEducationOrganizationContactAssociationTelephone:
      required:
      - telephoneNumber
      - telephoneNumberTypeDescriptor
      type: object
      properties:
        telephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the telephone number should not be published.
        orderOfPriority:
          type: integer
          description: The order of priority assigned to telephone numbers to define
            which number to attempt first, second, etc.
          format: int32
        textMessageCapabilityIndicator:
          type: boolean
          description: An indication that the telephone number is technically capable
            of sending and receiving Short Message Service (SMS) text messages.
    edFi_staffEducationOrganizationEmploymentAssociation:
      required:
      - educationOrganizationReference
      - employmentStatusDescriptor
      - hireDate
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        employmentStatusDescriptor:
          maxLength: 306
          type: string
          description: "Reflects the type of employment or contract; for example:\
            \ Probationary        Contractual        Substitute/temporary Tenured\
            \ or permanent        Volunteer/no contract        ..."
          x-Ed-Fi-isIdentity: true
        hireDate:
          type: string
          description: The month, day, and year on which an individual was hired
            for a position.
          format: date
          x-Ed-Fi-isIdentity: true
        credentialReference:
          $ref: "#/components/schemas/edFi_credentialReference"
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        department:
          maxLength: 60
          type: string
          description: The department or suborganization the employee/contractor is
            associated with in the EducationOrganization.
        endDate:
          type: string
          description: The month, day, and year on which a contract between an individual
            and a governing authority ends or is terminated under the provisions
            of the contract (or the date on which the agreement is made invalid).
          format: date
        fullTimeEquivalency:
          type: number
          description: The ratio between the hours of work expected in a position
            and the hours of work normally expected in a full-time position in the
            same setting.
          format: double
        hourlyWage:
          type: number
          description: Hourly wage associated with the employment position being reported.
          format: double
        offerDate:
          type: string
          description: Date at which the staff member was made an official offer for
            this employment.
          format: date
        separationDescriptor:
          maxLength: 306
          type: string
          description: "Type of employment separation; for example: Voluntary separation,\
            \ Involuntary separation,        Mutual agreement        Other, etc."
        separationReasonDescriptor:
          maxLength: 306
          type: string
          description: "Reason for terminating the employment; for example:\
             \ Employment in education        Employment outside of education Retirement\
             \       Family/personal relocation        Change of assignment."
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffEducationOrganizationEmploymentAssociationReference:
      required:
      - educationOrganizationId
      - employmentStatusDescriptor
      - hireDate
      - staffUniqueId
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        employmentStatusDescriptor:
          maxLength: 306
          type: string
          description: "Reflects the type of employment or contract; for example:\
            \ Probationary        Contractual        Substitute/temporary Tenured\
            \ or permanent        Volunteer/no contract        ..."
        hireDate:
          type: string
          description: The month, day, and year on which an individual was hired
            for a position.
          format: date
        staffUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a staff.
        link:
          $ref: "#/components/schemas/link"
    edFi_staffElectronicMail:
      required:
      - electronicMailAddress
      - electronicMailTypeDescriptor
      type: object
      properties:
        electronicMailTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of email listed for an individual or organization.\
            \ For example: Home/Personal, Work, etc.)"
          x-Ed-Fi-isIdentity: true
        electronicMailAddress:
          maxLength: 128
          type: string
          description: The electronic mail (e-mail) address listed for an individual
            or organization.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the electronic email address should not
            be published.
        primaryEmailAddressIndicator:
          type: boolean
          description: An indication that the electronic mail address should be used
            as the principal electronic mail address for an individual or organization.
    edFi_staffIdentificationCode:
      required:
      - identificationCode
      - staffIdentificationSystemDescriptor
      type: object
      properties:
        staffIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: A coding scheme that is used for identification and record-keeping
            purposes by schools, social services, or other agencies to refer to
            a staff member.
          x-Ed-Fi-isIdentity: true
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the staff Identification
            Code.
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a staff member
            by a school, school system, a state, or other agency or entity.
    edFi_staffIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    edFi_staffInternationalAddress:
      required:
      - addressLine1
      - addressTypeDescriptor
      - countryDescriptor
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        countryDescriptor:
          maxLength: 306
          type: string
          description: The name of the country. It is strongly recommended that entries
            use only ISO 3166 2-letter country codes.
        addressLine1:
          maxLength: 150
          type: string
          description: The first line of the address.
        addressLine2:
          maxLength: 150
          type: string
          description: The second line of the address.
        addressLine3:
          maxLength: 150
          type: string
          description: The third line of the address.
        addressLine4:
          maxLength: 150
          type: string
          description: The fourth line of the address.
        beginDate:
          type: string
          description: The first date the address is valid. For physical addresses,
            the date the person moved to that address.
          format: date
        endDate:
          type: string
          description: The last date the address is valid. For physical addresses,
            this would be the date the person moved from that address.
          format: date
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
    edFi_staffLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: A specification of which written or spoken communication is
            being used.
          x-Ed-Fi-isIdentity: true
        uses:
          type: array
          description: An unordered collection of staffLanguageUses. A description
            of how the language is used (e.g. Home Language, Native Language, Spoken
            Language).
          items:
            $ref: "#/components/schemas/edFi_staffLanguageUse"
    edFi_staffLanguageUse:
      required:
      - languageUseDescriptor
      type: object
      properties:
        languageUseDescriptor:
          maxLength: 306
          type: string
          description: A description of how the language is used (e.g. Home Language,
            Native Language, Spoken Language).
          x-Ed-Fi-isIdentity: true
    edFi_staffLeave:
      required:
      - beginDate
      - staffLeaveEventCategoryDescriptor
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The begin date of the staff leave.
          format: date
          x-Ed-Fi-isIdentity: true
        staffLeaveEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: "The code describing the type of leave taken, for example:\
            \ Sick, Personal, Vacation."
          x-Ed-Fi-isIdentity: true
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        endDate:
          type: string
          description: The end date of the staff leave.
          format: date
        reason:
          maxLength: 40
          type: string
          description: Expanded reason for the staff leave.
        substituteAssigned:
          type: boolean
          description: Indicator of whether a substitute was assigned during the period
            of staff leave.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffOtherName:
      required:
      - firstName
      - lastSurname
      - otherNameTypeDescriptor
      type: object
      properties:
        otherNameTypeDescriptor:
          maxLength: 306
          type: string
          description: The types of alternate names for a person.
          x-Ed-Fi-isIdentity: true
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
    edFi_staffPersonalIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    edFi_staffProgramAssociation:
      required:
      - beginDate
      - programReference
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: Start date for the association of staff to this program.
          format: date
          x-Ed-Fi-isIdentity: true
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        endDate:
          type: string
          description: End date for the association of staff to this program.
          format: date
        studentRecordAccess:
          type: boolean
          description: Indicator of whether the staff has access to the student records
            of the program per district interpretation of FERPA and other privacy
            laws, regulations, and policies.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffRace:
      required:
      - raceDescriptor
      type: object
      properties:
        raceDescriptor:
          maxLength: 306
          type: string
          description: The general racial category which most clearly reflects the
            individual's recognition of his or her community or with which the individual
            most identifies. The way this data element is listed, it must allow
            for multiple entries so that each individual can specify all appropriate
            races.
          x-Ed-Fi-isIdentity: true
    edFi_staffRecognition:
      required:
      - recognitionTypeDescriptor
      type: object
      properties:
        recognitionTypeDescriptor:
          maxLength: 306
          type: string
          description: The nature of recognition given to the learner for accomplishments
            in a co-curricular, or extra-curricular activity.
          x-Ed-Fi-isIdentity: true
        achievementCategoryDescriptor:
          maxLength: 306
          type: string
          description: The category of achievement attributed to the learner.
        achievementCategorySystem:
          maxLength: 60
          type: string
          description: The system that defines the categories by which an achievement
            is attributed to the learner.
        achievementTitle:
          maxLength: 60
          type: string
          description: The title assigned to the achievement.
        criteria:
          maxLength: 150
          type: string
          description: The criteria for competency-based completion of the achievement/award.
        criteriaURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            a web page describing the competency-based completion criteria for the
            achievement/award.
        evidenceStatement:
          maxLength: 150
          type: string
          description: A statement or reference describing the evidence that the learner
            met the criteria for attainment of the Achievement.
        imageURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            an image representing an award or badge associated with the Achievement.
        issuerName:
          maxLength: 150
          type: string
          description: The name of the agent, entity, or institution issuing the
            element.
        issuerOriginURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) from which the award was
            issued.
        recognitionAwardDate:
          type: string
          description: The date the recognition was awarded or earned.
          format: date
        recognitionAwardExpiresDate:
          type: string
          description: Date on which the award expires.
          format: date
        recognitionDescription:
          maxLength: 80
          type: string
          description: A description of the type of academic distinctions earned by
            or awarded to the individual.
    edFi_staffReference:
      required:
      - staffUniqueId
      type: object
      properties:
        staffUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a staff.
        link:
          $ref: "#/components/schemas/link"
    edFi_staffSchoolAssociation:
      required:
      - programAssignmentDescriptor
      - schoolReference
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        programAssignmentDescriptor:
          maxLength: 306
          type: string
          description: "The name of the program for which the individual is assigned;\
            \ for example:        Regular education        Title I-Academic\
            \  Title I-Non-Academic        Special Education        Bilingual/English\
            \ as a Second Language."
          x-Ed-Fi-isIdentity: true
        calendarReference:
          $ref: "#/components/schemas/edFi_calendarReference"
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        academicSubjects:
          type: array
          description: An unordered collection of staffSchoolAssociationAcademicSubjects.
            The academic subjects the individual is eligible to teach.
          items:
            $ref: "#/components/schemas/edFi_staffSchoolAssociationAcademicSubject"
        gradeLevels:
          type: array
          description: An unordered collection of staffSchoolAssociationGradeLevels.
            The grade levels the individual is eligible to teach.
          items:
            $ref: "#/components/schemas/edFi_staffSchoolAssociationGradeLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffSchoolAssociationAcademicSubject:
      required:
      - academicSubjectDescriptor
      type: object
      properties:
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The academic subjects the individual is eligible to teach.
          x-Ed-Fi-isIdentity: true
    edFi_staffSchoolAssociationGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels the individual is eligible to teach.
          x-Ed-Fi-isIdentity: true
    edFi_staffSectionAssociation:
      required:
      - classroomPositionDescriptor
      - sectionReference
      - staffReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        beginDate:
          type: string
          description: Month, day, and year of a teacher's assignment to the Section.
            If blank, defaults to the first day of the first grading period for
            the Section.
          format: date
        classroomPositionDescriptor:
          maxLength: 306
          type: string
          description: "The type of position the Staff member holds in the specific\
            \ class/section; for example:        Teacher of Record, Assistant Teacher,\
            \ Support Teacher, Substitute Teacher..."
        endDate:
          type: string
          description: Month, day, and year of the last day of a staff member's assignment
            to the Section.
          format: date
        highlyQualifiedTeacher:
          type: boolean
          description: An indication of whether a teacher is classified as highly
            qualified for his/her assignment according to state definition. This attribute
            indicates the teacher is highly qualified for this section being taught.
        percentageContribution:
          type: number
          description: Indicates the percentage of the total scheduled course time,
            academic standards, and/or learning activities delivered in this section
            by this staff member. A teacher of record designation may be based solely
            or partially on this contribution percentage.
          format: double
        teacherStudentDataLinkExclusion:
          type: boolean
          description: Indicates that the entire section is excluded from calculation
            of value-added or growth attribution calculations used for a particular
            teacher evaluation.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_staffTelephone:
      required:
      - telephoneNumber
      - telephoneNumberTypeDescriptor
      type: object
      properties:
        telephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the telephone number should not be published.
        orderOfPriority:
          type: integer
          description: The order of priority assigned to telephone numbers to define
            which number to attempt first, second, etc.
          format: int32
        textMessageCapabilityIndicator:
          type: boolean
          description: An indication that the telephone number is technically capable
            of sending and receiving Short Message Service (SMS) text messages.
    edFi_staffTribalAffiliation:
      required:
      - tribalAffiliationDescriptor
      type: object
      properties:
        tribalAffiliationDescriptor:
          maxLength: 306
          type: string
          description: An American Indian tribe with which the staff member is affiliated.
          x-Ed-Fi-isIdentity: true
    edFi_staffVisa:
      required:
      - visaDescriptor
      type: object
      properties:
        visaDescriptor:
          maxLength: 306
          type: string
          description: An indicator of a non-US citizen's Visa type.
          x-Ed-Fi-isIdentity: true
    edFi_stateEducationAgency:
      required:
      - categories
      - nameOfInstitution
      - stateEducationAgencyId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        categories:
          type: array
          description: An unordered collection of educationOrganizationCategories.
            The classification of the education agency within the geographic boundaries
            of a state according to the level of administrative and operational control
            granted by the state.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationCategory"
        stateEducationAgencyId:
          type: integer
          description: The identifier assigned to a state education agency.
          format: int32
          x-Ed-Fi-isIdentity: true
        accountabilities:
          type: array
          description: An unordered collection of stateEducationAgencyAccountabilities.
            This entity maintains information about federal reporting and accountability
            for state education agencies.
          items:
            $ref: "#/components/schemas/edFi_stateEducationAgencyAccountability"
        addresses:
          type: array
          description: An unordered collection of educationOrganizationAddresses.
            The set of elements that describes an address for the education entity,
            including the street address, city, state, ZIP code, and ZIP code +
            4.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationAddress"
        federalFunds:
          type: array
          description: An unordered collection of stateEducationAgencyFederalFunds.
            Contains the information about the reception and use of federal funds
            for reporting purposes.
          items:
            $ref: "#/components/schemas/edFi_stateEducationAgencyFederalFunds"
        identificationCodes:
          type: array
          description: An unordered collection of educationOrganizationIdentificationCodes.
            A unique number or alphanumeric code assigned to an education organization
            by a school, school system, a state, or other agency or entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIdentificationCode"
        indicators:
          type: array
          description: An unordered collection of educationOrganizationIndicators.
            An indicator or metric of an Education Organization.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationIndicator"
        institutionTelephones:
          type: array
          description: An unordered collection of educationOrganizationInstitutionTelephones.
            The 10-digit telephone number, including the area code, for the education
            entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInstitutionTelephone"
        internationalAddresses:
          type: array
          description: An unordered collection of educationOrganizationInternationalAddresses.
            The set of elements that describes the international physical location
            of the education entity.
          items:
            $ref: "#/components/schemas/edFi_educationOrganizationInternationalAddress"
        nameOfInstitution:
          maxLength: 75
          type: string
          description: The full, legally accepted name of the institution.
        operationalStatusDescriptor:
          maxLength: 306
          type: string
          description: The current operational status of the EducationOrganization
            (e.g., active, inactive).
        shortNameOfInstitution:
          maxLength: 75
          type: string
          description: A short name for the institution.
        webSite:
          maxLength: 255
          type: string
          description: The public web site address (URL) for the EducationOrganization.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_stateEducationAgencyAccountability:
      required:
      - schoolYearTypeReference
      type: object
      properties:
        cteGraduationRateInclusion:
          type: boolean
          description: An indication of whether CTE concentrators are included in
            the state's computation of its graduation rate.
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
    edFi_stateEducationAgencyFederalFunds:
      required:
      - fiscalYear
      type: object
      properties:
        fiscalYear:
          type: integer
          description: The fiscal year for which the federal funds are received.
          format: int32
          x-Ed-Fi-isIdentity: true
        federalProgramsFundingAllocation:
          type: number
          description: The amount of federal dollars distributed to Local Education
            Agencies (LEAs), retained by the State Education Agency (SEA) for program
            administration or other approved state-level activities (including unallocated,
            transferred to another state agency, or distributed to entities other
            than LEAs).
          format: double
    edFi_stateEducationAgencyReference:
      required:
      - stateEducationAgencyId
      type: object
      properties:
        stateEducationAgencyId:
          type: integer
          description: The identifier assigned to a state education agency.
          format: int32
        link:
          $ref: "#/components/schemas/link"
    edFi_student:
      required:
      - birthDate
      - firstName
      - lastSurname
      - studentUniqueId
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
          x-Ed-Fi-isIdentity: true
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        birthCity:
          maxLength: 30
          type: string
          description: The city the student was born in.
        birthCountryDescriptor:
          maxLength: 306
          type: string
          description: The country in which an individual is born. It is strongly
            recommended that entries use only ISO 3166 2-letter country codes.
        birthDate:
          type: string
          description: The month, day, and year on which an individual was born.
          format: date
        birthInternationalProvince:
          maxLength: 150
          type: string
          description: For students born outside of the U.S., the Province or jurisdiction
            in which an individual is born.
        birthSexDescriptor:
          maxLength: 306
          type: string
          description: A person's gender at birth.
        birthStateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the name of the state (within the United
            States) or extra-state jurisdiction in which an individual was born.
        citizenshipStatusDescriptor:
          maxLength: 306
          type: string
          description: An indicator of whether or not the person is a U.S. citizen.
        dateEnteredUS:
          type: string
          description: For students born outside of the U.S., the date the student
            entered the U.S.
          format: date
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        identificationDocuments:
          type: array
          description: An unordered collection of studentIdentificationDocuments.
            Describe the documentation of citizenship.
          items:
            $ref: "#/components/schemas/edFi_studentIdentificationDocument"
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        maidenName:
          maxLength: 75
          type: string
          description: The person's maiden name.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        multipleBirthStatus:
          type: boolean
          description: Indicator of whether the student was born with other siblings
            (i.e., twins, triplets, etc.)
        otherNames:
          type: array
          description: An unordered collection of studentOtherNames. Other names
            (e.g., alias, nickname, previous legal name) associated with a person.
          items:
            $ref: "#/components/schemas/edFi_studentOtherName"
        personalIdentificationDocuments:
          type: array
          description: "An unordered collection of studentPersonalIdentificationDocuments.\
            \ The documents presented as evident to verify one's personal identity;\
            \ for example: drivers license, passport, birth certificate, etc."
          items:
            $ref: "#/components/schemas/edFi_studentPersonalIdentificationDocument"
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
        visas:
          type: array
          description: An unordered collection of studentVisas. An indicator of a
            non-US citizen's Visa type.
          items:
            $ref: "#/components/schemas/edFi_studentVisa"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentAcademicRecord:
      required:
      - educationOrganizationReference
      - schoolYearTypeReference
      - studentReference
      - termDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        academicHonors:
          type: array
          description: An unordered collection of studentAcademicRecordAcademicHonors.
            Academic distinctions earned by or awarded to the student.
          items:
            $ref: "#/components/schemas/edFi_studentAcademicRecordAcademicHonor"
        classRanking:
          $ref: "#/components/schemas/edFi_studentAcademicRecordClassRanking"
        cumulativeAttemptedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        cumulativeAttemptedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        cumulativeAttemptedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        cumulativeEarnedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        cumulativeEarnedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        cumulativeEarnedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        cumulativeGradePointAverage:
          type: number
          description: A measure of average performance in all courses taken by an
            individual during his or her school career as determined for record-keeping
            purposes. This is obtained by dividing the total grade points received
            by the total number of credits attempted. This usually includes grade
            points received and credits attempted in his or her current school as
            well as those transferred from schools in which the individual was previously
            enrolled.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        cumulativeGradePointsEarned:
          type: number
          description: The cumulative number of grade points an individual earns by
            successfully completing courses or examinations during his or her enrollment
            in the current school as well as those transferred from schools in which
            the individual had been previously enrolled.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
            this element in a future release.
        diplomas:
          type: array
          description: An unordered collection of studentAcademicRecordDiplomas. Diploma(s)
            earned by the student.
          items:
            $ref: "#/components/schemas/edFi_studentAcademicRecordDiploma"
        gradePointAverages:
          type: array
          description: An unordered collection of studentAcademicRecordGradePointAverages.
            The grade point average for an individual computed as the grade points
            earned divided by the number of credits attempted.
          items:
            $ref: "#/components/schemas/edFi_studentAcademicRecordGradePointAverage"
        gradeValueQualifier:
          maxLength: 80
          type: string
          description: The scale of equivalents, if applicable, for grades awarded
            as indicators of performance in schoolwork. For example, numerical equivalents
            for letter grades used in determining a student's Grade Point Average
            (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for
            percentage grades (90-100%=A, 80-90%=B, etc.)
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used and in many cases
            would not permit full capture of the semantics of GPA calculations without
            access to significant external information that would be ambiguous to
            try to capture in this field. Expect removal of this element in a future
            release.
        projectedGraduationDate:
          type: string
          description: The month and year the student is projected to graduate.
          format: date
        recognitions:
          type: array
          description: An unordered collection of studentAcademicRecordRecognitions.
            Recognitions given to the student for accomplishments in a co-curricular
            or extracurricular activity.
          items:
            $ref: "#/components/schemas/edFi_studentAcademicRecordRecognition"
        reportCards:
          type: array
          description: An unordered collection of studentAcademicRecordReportCards.
            Report cards for the student.
          items:
            $ref: "#/components/schemas/edFi_studentAcademicRecordReportCard"
        sessionAttemptedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        sessionAttemptedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        sessionAttemptedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        sessionEarnedCreditConversion:
          type: number
          description: Conversion factor that when multiplied by the number of credits
            is equivalent to Carnegie units.
          format: double
        sessionEarnedCredits:
          type: number
          description: The value of credits or units of value awarded for the completion
            of a course.
          format: double
        sessionEarnedCreditTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of credits or units of value awarded for the completion
            of a course.
        sessionGradePointAverage:
          type: number
          description: The grade point average for an individual computed as the grade
            points earned during the session divided by the number of credits attempted.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: Users of this element are advised to use GradePointAverage
            instead, which supports capture of multiple (e.g., weighted, unweighted)
            GPAs. Expect removal of this element in a future release.
        sessionGradePointsEarned:
          type: number
          description: The number of grade points an individual earned for this session.
          format: double
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element is rarely used. Expect removal of
            this element in a future release.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentAcademicRecordAcademicHonor:
      required:
      - academicHonorCategoryDescriptor
      - honorDescription
      type: object
      properties:
        academicHonorCategoryDescriptor:
          maxLength: 306
          type: string
          description: A designation of the type of academic distinctions earned by
            or awarded to the student.
          x-Ed-Fi-isIdentity: true
        honorDescription:
          maxLength: 80
          type: string
          description: A description of the type of academic distinctions earned by
            or awarded to the individual.
          x-Ed-Fi-isIdentity: true
        achievementCategoryDescriptor:
          maxLength: 306
          type: string
          description: The category of achievement attributed to the learner.
        achievementCategorySystem:
          maxLength: 60
          type: string
          description: The system that defines the categories by which an achievement
            is attributed to the learner.
        achievementTitle:
          maxLength: 60
          type: string
          description: The title assigned to the achievement.
        criteria:
          maxLength: 150
          type: string
          description: The criteria for competency-based completion of the achievement/award.
        criteriaURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            a web page describing the competency-based completion criteria for the
            achievement/award.
        evidenceStatement:
          maxLength: 150
          type: string
          description: A statement or reference describing the evidence that the learner
            met the criteria for attainment of the Achievement.
        honorAwardDate:
          type: string
          description: The date the honor was awarded or earned.
          format: date
        honorAwardExpiresDate:
          type: string
          description: Date on which the award expires.
          format: date
        imageURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            an image representing an award or badge associated with the Achievement.
        issuerName:
          maxLength: 150
          type: string
          description: The name of the agent, entity, or institution issuing the
            element.
        issuerOriginURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) from which the award was
            issued.
    edFi_studentAcademicRecordClassRanking:
      required:
      - classRank
      - totalNumberInClass
      type: object
      properties:
        classRank:
          type: integer
          description: The academic rank of a student in relation to his or her graduating
            class (e.g., 1st, 2nd, 3rd).
          format: int32
        classRankingDate:
          type: string
          description: Date class ranking was determined.
          format: date
        percentageRanking:
          type: integer
          description: The academic percentage rank of a student in relation to his
            or her graduating class (e.g., 95%, 80%, 50%).
          format: int32
        totalNumberInClass:
          type: integer
          description: The total number of students in the student's graduating class.
          format: int32
    edFi_studentAcademicRecordDiploma:
      required:
      - diplomaAwardDate
      - diplomaTypeDescriptor
      type: object
      properties:
        diplomaTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of diploma/credential that is awarded to a student
            in recognition of his/her completion of the curricular requirements.
          x-Ed-Fi-isIdentity: true
        diplomaAwardDate:
          type: string
          description: The month, day, and year on which the student met  graduation
            requirements and was awarded a diploma.
          format: date
          x-Ed-Fi-isIdentity: true
        achievementCategoryDescriptor:
          maxLength: 306
          type: string
          description: The category of achievement attributed to the learner.
        diplomaLevelDescriptor:
          maxLength: 306
          type: string
          description: The level of diploma/credential that is awarded to a student
            in recognition of his/her completion of the curricular requirements.        Minimum
            high school program        Recommended high school program        Distinguished
            Achievement Program.
        achievementCategorySystem:
          maxLength: 60
          type: string
          description: The system that defines the categories by which an achievement
            is attributed to the learner.
        achievementTitle:
          maxLength: 60
          type: string
          description: The title assigned to the achievement.
        criteria:
          maxLength: 150
          type: string
          description: The criteria for competency-based completion of the achievement/award.
        criteriaURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            a web page describing the competency-based completion criteria for the
            achievement/award.
        cteCompleter:
          type: boolean
          description: Indicated a student who reached a state-defined threshold of
            vocational education and who attained a high school diploma or its recognized
            state equivalent or GED.
        diplomaAwardExpiresDate:
          type: string
          description: Date on which the award expires.
          format: date
        diplomaDescription:
          maxLength: 80
          type: string
          description: The description of diploma given to the student for accomplishments.
        evidenceStatement:
          maxLength: 150
          type: string
          description: A statement or reference describing the evidence that the learner
            met the criteria for attainment of the Achievement.
        imageURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            an image representing an award or badge associated with the Achievement.
        issuerName:
          maxLength: 150
          type: string
          description: The name of the agent, entity, or institution issuing the
            element.
        issuerOriginURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) from which the award was
            issued.
    edFi_studentAcademicRecordGradePointAverage:
      required:
      - gradePointAverageTypeDescriptor
      - gradePointAverageValue
      type: object
      properties:
        gradePointAverageTypeDescriptor:
          maxLength: 306
          type: string
          description: The system used for calculating the grade point average for
            an individual.
          x-Ed-Fi-isIdentity: true
        gradePointAverageValue:
          type: number
          description: The value of the grade points earned divided by the number
            of credits attempted.
          format: double
        isCumulative:
          type: boolean
          description: Indicator of whether or not the Grade Point Average value is
            cumulative.
        maxGradePointAverageValue:
          type: number
          description: The maximum value for the grade point average.
          format: double
    edFi_studentAcademicRecordRecognition:
      required:
      - recognitionTypeDescriptor
      type: object
      properties:
        recognitionTypeDescriptor:
          maxLength: 306
          type: string
          description: The nature of recognition given to the learner for accomplishments
            in a co-curricular, or extra-curricular activity.
          x-Ed-Fi-isIdentity: true
        achievementCategoryDescriptor:
          maxLength: 306
          type: string
          description: The category of achievement attributed to the learner.
        achievementCategorySystem:
          maxLength: 60
          type: string
          description: The system that defines the categories by which an achievement
            is attributed to the learner.
        achievementTitle:
          maxLength: 60
          type: string
          description: The title assigned to the achievement.
        criteria:
          maxLength: 150
          type: string
          description: The criteria for competency-based completion of the achievement/award.
        criteriaURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            a web page describing the competency-based completion criteria for the
            achievement/award.
        evidenceStatement:
          maxLength: 150
          type: string
          description: A statement or reference describing the evidence that the learner
            met the criteria for attainment of the Achievement.
        imageURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) for the unique address of
            an image representing an award or badge associated with the Achievement.
        issuerName:
          maxLength: 150
          type: string
          description: The name of the agent, entity, or institution issuing the
            element.
        issuerOriginURL:
          maxLength: 255
          type: string
          description: The Uniform Resource Locator (URL) from which the award was
            issued.
        recognitionAwardDate:
          type: string
          description: The date the recognition was awarded or earned.
          format: date
        recognitionAwardExpiresDate:
          type: string
          description: Date on which the award expires.
          format: date
        recognitionDescription:
          maxLength: 80
          type: string
          description: A description of the type of academic distinctions earned by
            or awarded to the individual.
    edFi_studentAcademicRecordReference:
      required:
      - educationOrganizationId
      - schoolYear
      - studentUniqueId
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentAcademicRecordReportCard:
      required:
      - reportCardReference
      type: object
      properties:
        reportCardReference:
          $ref: "#/components/schemas/edFi_reportCardReference"
    edFi_studentAssessment:
      required:
      - administrationDate
      - assessmentReference
      - studentAssessmentIdentifier
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        studentAssessmentIdentifier:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to an assessment
            administered to a student.
          x-Ed-Fi-isIdentity: true
        assessmentReference:
          $ref: "#/components/schemas/edFi_assessmentReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        accommodations:
          type: array
          description: "An unordered collection of studentAssessmentAccommodations.\
            \ The specific type of special variation used in how an examination is\
            \ presented, how it is administered, or how the test taker is allowed\
            \ to respond. This generally refers to changes that do not substantially\
            \ alter what the examination measures. The proper use of accommodations\
            \ does not substantially change academic level or performance criteria.\
            \ For example:        Braille        Enlarged monitor view        Extra\
            \ time        Large Print        Setting        Oral Administration\
            \      ..."
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentAccommodation"
        administrationDate:
          type: string
          description: The date and time an assessment was completed by the student.
            The use of ISO-8601 formats with a timezone designator (UTC or time offset)
            is recommended in order to prevent ambiguity due to time zones.
          format: date-time
        administrationEndDate:
          type: string
          description: The date and time an assessment administration ended.
          format: date-time
        administrationEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The environment in which the test was administered.
        administrationLanguageDescriptor:
          maxLength: 306
          type: string
          description: The language in which an assessment is written and/or administered.
        eventCircumstanceDescriptor:
          maxLength: 306
          type: string
          description: An unusual event occurred during the administration of the
            assessment. This could include fire alarm, student became ill, etc.
        eventDescription:
          maxLength: 1024
          type: string
          description: Describes special events that occur before during or after
            the assessment session that may impact use of results.
        items:
          type: array
          description: An unordered collection of studentAssessmentItems. The student's
            response to an assessment item and the item-level scores such as correct,
            incorrect, or met standard.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentItem"
        performanceLevels:
          type: array
          description: An unordered collection of studentAssessmentPerformanceLevels.
            The performance level(s) achieved for the StudentAssessment.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentPerformanceLevel"
        platformTypeDescriptor:
          maxLength: 306
          type: string
          description: The platform with which the assessment was delivered to the
            student during the assessment session.
        reasonNotTestedDescriptor:
          maxLength: 306
          type: string
          description: "The primary reason student is not tested. For example: Absent\
              \     Refusal by parent        Refusal by student Medical waiver\
              \   Illness        Disruptive behavior        LEP Exempt        ..."
        retestIndicatorDescriptor:
          maxLength: 306
          type: string
          description: "Indicator if the test was retaken. For example:        Primary\
            \ administration        First retest        Second retest        ..."
        scoreResults:
          type: array
          description: An unordered collection of studentAssessmentScoreResults.
            A meaningful score or statistical expression of the performance of an
            individual. The results can be expressed as a number, percentile, range,
            level, etc.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentScoreResult"
        serialNumber:
          maxLength: 60
          type: string
          description: The unique number for the assessment form or answer document.
        studentObjectiveAssessments:
          type: array
          description: An unordered collection of studentAssessmentStudentObjectiveAssessments.
            The student's score and/or performance levels earned for an ObjectiveAssessment.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessment"
        whenAssessedGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level of a student when assessed.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentAssessmentAccommodation:
      required:
      - accommodationDescriptor
      type: object
      properties:
        accommodationDescriptor:
          maxLength: 306
          type: string
          description: "The specific type of special variation used in how an examination\
            \ is presented, how it is administered, or how the test taker is allowed\
            \ to respond. This generally refers to changes that do not substantially\
            \ alter what the examination measures. The proper use of accommodations\
            \ does not substantially change academic level or performance criteria.\
            \ For example:        Braille        Enlarged monitor view        Extra\
            \ time        Large Print        Setting        Oral Administration\
            \      ..."
          x-Ed-Fi-isIdentity: true
    edFi_studentAssessmentItem:
      required:
      - assessmentItemReference
      - assessmentItemResultDescriptor
      type: object
      properties:
        assessmentItemResultDescriptor:
          maxLength: 306
          type: string
          description: "The analyzed result of a student's response to an assessment\
            \ item. For example:        Correct        Incorrect         Met standard\
            \ ..."
        responseIndicatorDescriptor:
          maxLength: 306
          type: string
          description: "Indicator of the response. For example:        Nonscorable\
            \ response        Ineffective response        Effective response Partial\
            \ response        ..."
        assessmentResponse:
          maxLength: 60
          type: string
          description: A student's response to a stimulus on a test.
        descriptiveFeedback:
          maxLength: 1024
          type: string
          description: The formative descriptive feedback that was given to a learner
            in response to the results from a scored/evaluated assessment item.
        rawScoreResult:
          type: number
          description: A meaningful raw score of the performance of an individual
            on an assessment item.
          format: double
        timeAssessed:
          maxLength: 30
          type: string
          description: The overall time a student actually spent during the AssessmentItem.
        assessmentItemReference:
          $ref: "#/components/schemas/edFi_assessmentItemReference"
    edFi_studentAssessmentPerformanceLevel:
      required:
      - assessmentReportingMethodDescriptor
      - performanceLevelDescriptor
      - performanceLevelMet
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the instructor of the class uses to report
            the performance and achievement. It may be a qualitative method such
            as individualized teacher comments or a quantitative method such as
            a letter or numerical grade. In some cases, more than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        performanceLevelDescriptor:
          maxLength: 306
          type: string
          description: A specification of which performance level value describes
            the student proficiency.
          x-Ed-Fi-isIdentity: true
        performanceLevelMet:
          type: boolean
          description: Indicator of whether the performance level was met.
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element creates confusion in the model.
            Performance levels that have not been met should not be reported in StudentAssessment.
            Expect removal of this element in a future release.
    edFi_studentAssessmentScoreResult:
      required:
      - assessmentReportingMethodDescriptor
      - result
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the administrator of the assessment uses to
            report the performance and achievement of all students. It may be a qualitative
            method such as performance level descriptors or a quantitative method
            such as a numerical grade or cut score. More than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        result:
          maxLength: 35
          type: string
          description: The value of a meaningful raw score or statistical expression
            of the performance of an individual. The results can be expressed as
            a number, percentile, range, level, etc.
    edFi_studentAssessmentStudentObjectiveAssessment:
      required:
      - objectiveAssessmentReference
      - scoreResults
      type: object
      properties:
        objectiveAssessmentReference:
          $ref: "#/components/schemas/edFi_objectiveAssessmentReference"
        performanceLevels:
          type: array
          description: An unordered collection of studentAssessmentStudentObjectiveAssessmentPerformanceLevels.
            The PerformanceLevel(s) achieved for the ObjectiveAssessment.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessmentPerformanceLevel"
        scoreResults:
          type: array
          description: An unordered collection of studentAssessmentStudentObjectiveAssessmentScoreResults.
            A meaningful score or statistical expression of the performance of an
            individual. The results can be expressed as a number, percentile, range,
            level, etc.
          items:
            $ref: "#/components/schemas/edFi_studentAssessmentStudentObjectiveAssessmentScoreResult"
    edFi_studentAssessmentStudentObjectiveAssessmentPerformanceLevel:
      required:
      - assessmentReportingMethodDescriptor
      - performanceLevelDescriptor
      - performanceLevelMet
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the instructor of the class uses to report
            the performance and achievement. It may be a qualitative method such
            as individualized teacher comments or a quantitative method such as
            a letter or numerical grade. In some cases, more than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        performanceLevelDescriptor:
          maxLength: 306
          type: string
          description: A specification of which performance level value describes
            the student proficiency.
          x-Ed-Fi-isIdentity: true
        performanceLevelMet:
          type: boolean
          description: Indicator of whether the performance level was met.
          x-Ed-Fi-isDeprecated: true
          x-Ed-Fi-deprecatedReasons: This element creates confusion in the model.
            Performance levels that have not been met should not be reported in StudentAssessment.
            Expect removal of this element in a future release.
    edFi_studentAssessmentStudentObjectiveAssessmentScoreResult:
      required:
      - assessmentReportingMethodDescriptor
      - result
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        assessmentReportingMethodDescriptor:
          maxLength: 306
          type: string
          description: The method that the administrator of the assessment uses to
            report the performance and achievement of all students. It may be a qualitative
            method such as performance level descriptors or a quantitative method
            such as a numerical grade or cut score. More than one type of reporting
            method may be used.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result. The results can be expressed as
            a number, percentile, range, level, etc.
        result:
          maxLength: 35
          type: string
          description: The value of a meaningful raw score or statistical expression
            of the performance of an individual. The results can be expressed as
            a number, percentile, range, level, etc.
    edFi_studentCohortAssociation:
      required:
      - beginDate
      - cohortReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The month, day, and year on which the Student was first identified
            as part of the Cohort.
          format: date
          x-Ed-Fi-isIdentity: true
        cohortReference:
          $ref: "#/components/schemas/edFi_cohortReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        endDate:
          type: string
          description: The month, day, and year on which the Student was removed
            as part of the Cohort.
          format: date
        sections:
          type: array
          description: An unordered collection of studentCohortAssociationSections.
            The Cohort representing the subdivision of students within one or more
            sections. For example, a group of students may be given additional instruction
            and tracked as a cohort.
          items:
            $ref: "#/components/schemas/edFi_studentCohortAssociationSection"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentCohortAssociationSection:
      required:
      - sectionReference
      type: object
      properties:
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
    edFi_studentCompetencyObjective:
      required:
      - competencyLevelDescriptor
      - gradingPeriodReference
      - objectiveCompetencyObjectiveReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
        objectiveCompetencyObjectiveReference:
          $ref: "#/components/schemas/edFi_competencyObjectiveReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        competencyLevelDescriptor:
          maxLength: 306
          type: string
          description: The competency level assessed for the student for the referenced
            competency objective.
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the teacher that provides information
            in addition to the grade or assessment score.
        generalStudentProgramAssociations:
          type: array
          description: An unordered collection of studentCompetencyObjectiveGeneralStudentProgramAssociations.
            Relates the Student and Program associated with the CompetencyObjective.
          items:
            $ref: "#/components/schemas/edFi_studentCompetencyObjectiveGeneralStudentProgramAssociation"
        studentSectionAssociations:
          type: array
          description: An unordered collection of studentCompetencyObjectiveStudentSectionAssociations.
            Relates the Student and Section associated with the CompetencyObjective.
          items:
            $ref: "#/components/schemas/edFi_studentCompetencyObjectiveStudentSectionAssociation"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentCompetencyObjectiveGeneralStudentProgramAssociation:
      required:
      - generalStudentProgramAssociationReference
      type: object
      properties:
        generalStudentProgramAssociationReference:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationReference"
    edFi_studentCompetencyObjectiveReference:
      required:
      - gradingPeriodDescriptor
      - gradingPeriodSchoolId
      - gradingPeriodSchoolYear
      - gradingPeriodSequence
      - objective
      - objectiveEducationOrganizationId
      - objectiveGradeLevelDescriptor
      - studentUniqueId
      type: object
      properties:
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
        gradingPeriodSchoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        gradingPeriodSchoolYear:
          type: integer
          description: The identifier for the grading period school year.
          format: int32
        gradingPeriodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
        objective:
          maxLength: 60
          type: string
          description: The designated title of the CompetencyObjective.
        objectiveEducationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        objectiveGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level for which the CompetencyObjective is targeted.
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentCompetencyObjectiveStudentSectionAssociation:
      required:
      - studentSectionAssociationReference
      type: object
      properties:
        studentSectionAssociationReference:
          $ref: "#/components/schemas/edFi_studentSectionAssociationReference"
    edFi_studentCTEProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        ctePrograms:
          type: array
          description: An unordered collection of studentCTEProgramAssociationCTEPrograms.
            The career cluster representing the career path of the Vocational/Career
            Tech concentrator.
          items:
            $ref: "#/components/schemas/edFi_studentCTEProgramAssociationCTEProgram"
        cteProgramServices:
          type: array
          description: An unordered collection of studentCTEProgramAssociationCTEProgramServices.
            Indicates the Service(s) being provided to the Student by the CTE Program.
          items:
            $ref: "#/components/schemas/edFi_studentCTEProgramAssociationCTEProgramService"
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        nonTraditionalGenderStatus:
          type: boolean
          description: Indicator that student is from a gender group that comprises
            less than 25% of the individuals employed in an occupation or field of
            work.
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        privateCTEProgram:
          type: boolean
          description: Indicator that student participated in career and technical
            education at private agencies or institutions that are reported by the
            state for purposes of the Elementary and Secondary Education Act (ESEA).Students
            in private institutions which do not receive Perkins funding are reported
            only in the state file.
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        services:
          type: array
          description: An unordered collection of studentCTEProgramAssociationServices.
            Indicates the Service(s) being provided to the Student by the Program.
          items:
            $ref: "#/components/schemas/edFi_studentCTEProgramAssociationService"
        technicalSkillsAssessmentDescriptor:
          maxLength: 306
          type: string
          description: Results of technical skills assessment aligned with industry
            recognized standards.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentCTEProgramAssociationCTEProgram:
      required:
      - careerPathwayDescriptor
      type: object
      properties:
        careerPathwayDescriptor:
          maxLength: 306
          type: string
          description: A sequence of courses within an area of interest that is a
            student's educational road map to a chosen career.
          x-Ed-Fi-isIdentity: true
        cipCode:
          maxLength: 120
          type: string
          description: Number and description of the CIP Code associated with the
            student's CTEProgram.
        cteProgramCompletionIndicator:
          type: boolean
          description: A boolean indicator of whether the Student has completed the
            CTEProgram.
        primaryCTEProgramIndicator:
          type: boolean
          description: A boolean indicator of whether this CTEProgram, is the student's
            primary CTEProgram.
    edFi_studentCTEProgramAssociationCTEProgramService:
      required:
      - cteProgramServiceDescriptor
      type: object
      properties:
        cteProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            CTE Program.
          x-Ed-Fi-isIdentity: true
        cipCode:
          maxLength: 120
          type: string
          description: Number and description of the CIP Code associated with the
            student's CTE Program.
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentCTEProgramAssociationService:
      required:
      - serviceDescriptor
      type: object
      properties:
        serviceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the Service being provided to the student by the
            Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentDisciplineIncidentAssociation:
      required:
      - disciplineIncidentReference
      - studentParticipationCodeDescriptor
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        disciplineIncidentReference:
          $ref: "#/components/schemas/edFi_disciplineIncidentReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        behaviors:
          type: array
          description: An unordered collection of studentDisciplineIncidentAssociationBehaviors.
            Describes behavior by category and provides a detailed description.
          items:
            $ref: "#/components/schemas/edFi_studentDisciplineIncidentAssociationBehavior"
        studentParticipationCodeDescriptor:
          maxLength: 306
          type: string
          description: "The role or type of participation of a student in a discipline\
            \ incident;        for example:        Victim        Perpetrator Witness\
            \        Reporter."
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentDisciplineIncidentAssociationBehavior:
      required:
      - behaviorDescriptor
      type: object
      properties:
        behaviorDescriptor:
          maxLength: 306
          type: string
          description: Describes behavior by category and provides a detailed description.
          x-Ed-Fi-isIdentity: true
        behaviorDetailedDescription:
          maxLength: 1024
          type: string
          description: Specifies a more granular level of detail of a behavior involved
            in the incident.
    edFi_studentDisciplineIncidentAssociationReference:
      required:
      - incidentIdentifier
      - schoolId
      - studentUniqueId
      type: object
      properties:
        incidentIdentifier:
          maxLength: 20
          type: string
          description: A locally assigned unique identifier (within the school or
            school district) to identify each specific DisciplineIncident or occurrence.
            The same identifier should be used to document the entire DisciplineIncident
            even if it included multiple offenses and multiple offenders.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentDisciplineIncidentBehaviorAssociation:
      required:
      - behaviorDescriptor
      - disciplineIncidentReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        behaviorDescriptor:
          maxLength: 306
          type: string
          description: Describes behavior by category.
          x-Ed-Fi-isIdentity: true
        disciplineIncidentReference:
          $ref: "#/components/schemas/edFi_disciplineIncidentReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        behaviorDetailedDescription:
          maxLength: 1024
          type: string
          description: Specifies a more granular level of detail of a behavior involved
            in the incident.
        disciplineIncidentParticipationCodes:
          type: array
          description: An unordered collection of studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes.
            The role or type of participation of a student in a discipline incident.
          items:
            $ref: "#/components/schemas/edFi_studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode:
      required:
      - disciplineIncidentParticipationCodeDescriptor
      type: object
      properties:
        disciplineIncidentParticipationCodeDescriptor:
          maxLength: 306
          type: string
          description: The role or type of participation of a student in a discipline
            incident.
          x-Ed-Fi-isIdentity: true
    edFi_studentDisciplineIncidentBehaviorAssociationReference:
      required:
      - behaviorDescriptor
      - incidentIdentifier
      - schoolId
      - studentUniqueId
      type: object
      properties:
        behaviorDescriptor:
          maxLength: 306
          type: string
          description: Describes behavior by category.
        incidentIdentifier:
          maxLength: 20
          type: string
          description: A locally assigned unique identifier (within the school or
            school district) to identify each specific DisciplineIncident or occurrence.
            The same identifier should be used to document the entire DisciplineIncident
            even if it included multiple offenses and multiple offenders.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentDisciplineIncidentNonOffenderAssociation:
      required:
      - disciplineIncidentReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        disciplineIncidentReference:
          $ref: "#/components/schemas/edFi_disciplineIncidentReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        disciplineIncidentParticipationCodes:
          type: array
          description: An unordered collection of studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCodes.
            The role or type of participation of a student in a discipline incident.
          items:
            $ref: "#/components/schemas/edFi_studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode:
      required:
      - disciplineIncidentParticipationCodeDescriptor
      type: object
      properties:
        disciplineIncidentParticipationCodeDescriptor:
          maxLength: 306
          type: string
          description: The role or type of participation of a student in a discipline
            incident.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociation:
      required:
      - educationOrganizationReference
      - sexDescriptor
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        addresses:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationAddresses.
            The set of elements that describes an address, including the street
            address, city, state, and ZIP code.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationAddress"
        ancestryEthnicOrigins:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationAncestryEthnicOrigins.
            The original peoples or cultures with which the individual identifies.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationAncestryEthnicOrigin"
        barrierToInternetAccessInResidenceDescriptor:
          maxLength: 306
          type: string
          description: An indication of the barrier to having internet access in the
            student s primary place of residence.
        cohortYears:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationCohortYears.
            The type and year of a cohort (e.g., 9th grade) the student belongs
            to as determined by the year that student entered a specific grade.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationCohortYear"
        disabilities:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationDisabilities.
            The disability condition(s) that best describes an individual's impairment,
            as determined by evaluation(s) conducted by the education organization.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationDisability"
        electronicMails:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationElectronicMails.
            The numbers, letters, and symbols used to identify an electronic mail
            (e-mail) user within the network to which the individual or organization
            belongs.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationElectronicMail"
        hispanicLatinoEthnicity:
          type: boolean
          description: An indication that the individual traces his or her origin
            or descent to Mexico, Puerto Rico, Cuba, Central, and South America,
            and other Spanish cultures, regardless of race, as last reported to
            the education organization. The term, \"Spanish origin,\" can be used
            in addition to \"Hispanic or Latino.\"
        internationalAddresses:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationInternationalAddresses.
            The set of elements that describes an international address.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationInternationalAddress"
        internetAccessInResidence:
          type: boolean
          description: An indication of whether the student is able to access the
            internet in their primary place of residence.
        internetAccessTypeInResidenceDescriptor:
          maxLength: 306
          type: string
          description: The primary type of internet service used in the student s
            primary place of residence.
        internetPerformanceInResidenceDescriptor:
          maxLength: 306
          type: string
          description: An indication of whether the student can complete the full
            range of learning activities, including video streaming and assignment
            upload, without interruptions caused by poor internet performance in
            their primary place of residence.
        languages:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationLanguages.
            The language(s) the individual uses to communicate. It is strongly recommended
            that entries use only ISO 639-3 language codes.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationLanguage"
        limitedEnglishProficiencyDescriptor:
          maxLength: 306
          type: string
          description: An indication that the student has been identified as limited
            English proficient by the Language Proficiency Assessment Committee
            (LPAC), or English proficient.
        loginId:
          maxLength: 60
          type: string
          description: The login ID for the user; used for security access control
            interface.
        oldEthnicityDescriptor:
          maxLength: 306
          type: string
          description: "Previous definition of Ethnicity combining Hispanic/Latino and\
            \ race:        1 - American Indian or Alaskan Native        2 - Asian or
            \ Pacific Islander        3 - Black, not of Hispanic origin 4 - Hispanic
            \        5 - White, not of Hispanic origin."
        primaryLearningDeviceAccessDescriptor:
          maxLength: 306
          type: string
          description: An indication of whether the primary learning device is shared
            or not shared with another individual.
        primaryLearningDeviceAwayFromSchoolDescriptor:
          maxLength: 306
          type: string
          description: The type of device the student uses most often to complete
            learning activities away from school.
        primaryLearningDeviceProviderDescriptor:
          maxLength: 306
          type: string
          description: The provider of the primary learning device.
        profileThumbnail:
          maxLength: 255
          type: string
          description: Locator reference for the student photo. The specification
            for that reference is left to local definition.
        programParticipations:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationProgramParticipations.
            Key programs the student is participating in or receives services from.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationProgramParticipation"
        races:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationRaces.
            The general racial category which most clearly reflects the individual's
            recognition of his or her community or with which the individual most
            identifies as last reported to the education organization. The data model
            allows for multiple entries so that each individual can specify all appropriate
            races.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationRace"
        sexDescriptor:
          maxLength: 306
          type: string
          description: The student's gender as last reported to the education organization.
        studentCharacteristics:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationStudentCharacteristics.
            Reflects important characteristics of a student. If a student has a
            characteristic present, that characteristic is considered true or active
            for that student. If a characteristic is not present, no assumption
            is made as to the applicability of the characteristic, but local policy
            may dictate otherwise.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentCharacteristic"
        studentIdentificationCodes:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationStudentIdentificationCodes.
            A coding scheme that is used for identification and record-keeping purposes
            by schools, social services, or other agencies to refer to a student.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIdentificationCode"
        studentIndicators:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationStudentIndicators.
            An indicator or metric computed for the student (e.g., at risk).
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIndicator"
        telephones:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationTelephones.
            The 10-digit telephone number, including the area code, for the person.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationTelephone"
        tribalAffiliations:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationTribalAffiliations.
            An American Indian tribe with which the student is affiliated as last
            reported to the education organization.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationTribalAffiliation"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentEducationOrganizationAssociationAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
          x-Ed-Fi-isIdentity: true
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
          x-Ed-Fi-isIdentity: true
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
          x-Ed-Fi-isIdentity: true
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
          x-Ed-Fi-isIdentity: true
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                      'which an address is located.
        periods:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationAddressPeriods.
            The time periods for which the address is valid. For physical addresses,
            the periods in which the person lived at that address.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationAddressPeriod"
    edFi_studentEducationOrganizationAssociationAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_studentEducationOrganizationAssociationAncestryEthnicOrigin:
      required:
      - ancestryEthnicOriginDescriptor
      type: object
      properties:
        ancestryEthnicOriginDescriptor:
          maxLength: 306
          type: string
          description: The original peoples or cultures with which the individual
            identifies.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociationCohortYear:
      required:
      - cohortYearTypeDescriptor
      - schoolYearTypeReference
      type: object
      properties:
        cohortYearTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of cohort year (9th grade, graduation).
          x-Ed-Fi-isIdentity: true
        termDescriptor:
          maxLength: 306
          type: string
          description: The term associated with the cohort year; for example, the
            intended term of graduation.
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
    edFi_studentEducationOrganizationAssociationDisability:
      required:
      - disabilityDescriptor
      type: object
      properties:
        disabilityDescriptor:
          maxLength: 306
          type: string
          description: A disability category that describes a child's impairment.
          x-Ed-Fi-isIdentity: true
        disabilityDeterminationSourceTypeDescriptor:
          maxLength: 306
          type: string
          description: The source that provided the disability determination.
        disabilityDiagnosis:
          maxLength: 80
          type: string
          description: A description of the disability diagnosis.
        orderOfDisability:
          type: integer
          description: "The order by severity of student's disabilities: 1- Primary,\
            \ 2 - Secondary, 3 - Tertiary, etc."
          format: int32
        designations:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationDisabilityDesignations.
            Whether the disability is IDEA, Section 504, or other disability designation.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationDisabilityDesignation"
    edFi_studentEducationOrganizationAssociationDisabilityDesignation:
      required:
      - disabilityDesignationDescriptor
      type: object
      properties:
        disabilityDesignationDescriptor:
          maxLength: 306
          type: string
          description: Whether the disability is IDEA, Section 504, or other disability
            designation.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociationElectronicMail:
      required:
      - electronicMailAddress
      - electronicMailTypeDescriptor
      type: object
      properties:
        electronicMailTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of email listed for an individual or organization.\
            \ For example: Home/Personal, Work, etc.)"
          x-Ed-Fi-isIdentity: true
        electronicMailAddress:
          maxLength: 128
          type: string
          description: The electronic mail (e-mail) address listed for an individual
            or organization.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the electronic email address should not
            be published.
        primaryEmailAddressIndicator:
          type: boolean
          description: An indication that the electronic mail address should be used
            as the principal electronic mail address for an individual or organization.
    edFi_studentEducationOrganizationAssociationInternationalAddress:
      required:
      - addressLine1
      - addressTypeDescriptor
      - countryDescriptor
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        countryDescriptor:
          maxLength: 306
          type: string
          description: The name of the country. It is strongly recommended that entries
            use only ISO 3166 2-letter country codes.
        addressLine1:
          maxLength: 150
          type: string
          description: The first line of the address.
        addressLine2:
          maxLength: 150
          type: string
          description: The second line of the address.
        addressLine3:
          maxLength: 150
          type: string
          description: The third line of the address.
        addressLine4:
          maxLength: 150
          type: string
          description: The fourth line of the address.
        beginDate:
          type: string
          description: The first date the address is valid. For physical addresses,
            the date the person moved to that address.
          format: date
        endDate:
          type: string
          description: The last date the address is valid. For physical addresses,
            this would be the date the person moved from that address.
          format: date
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
    edFi_studentEducationOrganizationAssociationLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: A specification of which written or spoken communication is
            being used.
          x-Ed-Fi-isIdentity: true
        uses:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationLanguageUses.
            A description of how the language is used (e.g. Home Language, Native
            Language, Spoken Language).
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationLanguageUse"
    edFi_studentEducationOrganizationAssociationLanguageUse:
      required:
      - languageUseDescriptor
      type: object
      properties:
        languageUseDescriptor:
          maxLength: 306
          type: string
          description: A description of how the language is used (e.g. Home Language,
            Native Language, Spoken Language).
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociationProgramParticipation:
      required:
      - programTypeDescriptor
      type: object
      properties:
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
          x-Ed-Fi-isIdentity: true
        beginDate:
          type: string
          description: The date the Student was associated with the Program or service.
          format: date
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that designated the
            program association.
        endDate:
          type: string
          description: The date the Program participation ended.
          format: date
        programCharacteristics:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationProgramParticipationProgramCharacteristics.
            Reflects important characteristics of the Program, such as categories
            or particular indications.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationProgramParticipationProgramCharacteristic"
    edFi_studentEducationOrganizationAssociationProgramParticipationProgramCharacteristic:
      required:
      - programCharacteristicDescriptor
      type: object
      properties:
        programCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: Reflects important characteristics of the Program, such as
            categories or particular indications.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociationRace:
      required:
      - raceDescriptor
      type: object
      properties:
        raceDescriptor:
          maxLength: 306
          type: string
          description: The general racial category which most clearly reflects the
            individual's recognition of his or her community or with which the individual
            most identifies as last reported to the education organization. The data
            model allows for multiple entries so that each individual can specify
            all appropriate races.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationAssociationStudentCharacteristic:
      required:
      - studentCharacteristicDescriptor
      type: object
      properties:
        studentCharacteristicDescriptor:
          maxLength: 306
          type: string
          description: The characteristic designated for the Student.
          x-Ed-Fi-isIdentity: true
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that designated the
            characteristic.
        periods:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationStudentCharacteristicPeriods.
            The time periods for which characteristic was effective.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentCharacteristicPeriod"
    edFi_studentEducationOrganizationAssociationStudentCharacteristicPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_studentEducationOrganizationAssociationStudentIdentificationCode:
      required:
      - assigningOrganizationIdentificationCode
      - identificationCode
      - studentIdentificationSystemDescriptor
      type: object
      properties:
        studentIdentificationSystemDescriptor:
          maxLength: 306
          type: string
          description: A coding scheme that is used for identification and record-keeping
            purposes by schools, social services, or other agencies to refer to
            a student.
          x-Ed-Fi-isIdentity: true
        assigningOrganizationIdentificationCode:
          maxLength: 60
          type: string
          description: The organization code or name assigning the StudentIdentificationCode.
          x-Ed-Fi-isIdentity: true
        identificationCode:
          maxLength: 60
          type: string
          description: A unique number or alphanumeric code assigned to a student
            by a school, school system, a state, or other agency or entity.
    edFi_studentEducationOrganizationAssociationStudentIndicator:
      required:
      - indicator
      - indicatorName
      type: object
      properties:
        indicatorName:
          maxLength: 200
          type: string
          description: The name of the indicator or metric.
          x-Ed-Fi-isIdentity: true
        designatedBy:
          maxLength: 60
          type: string
          description: The person, organization, or department that designated the
            program association.
        indicator:
          maxLength: 60
          type: string
          description: The value of the indicator or metric.
        indicatorGroup:
          maxLength: 200
          type: string
          description: The name for a group of indicators.
        periods:
          type: array
          description: An unordered collection of studentEducationOrganizationAssociationStudentIndicatorPeriods.
            The time periods for which the indicator was effective.
          items:
            $ref: "#/components/schemas/edFi_studentEducationOrganizationAssociationStudentIndicatorPeriod"
    edFi_studentEducationOrganizationAssociationStudentIndicatorPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    edFi_studentEducationOrganizationAssociationTelephone:
      required:
      - telephoneNumber
      - telephoneNumberTypeDescriptor
      type: object
      properties:
        telephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the telephone number should not be published.
        orderOfPriority:
          type: integer
          description: The order of priority assigned to telephone numbers to define
            which number to attempt first, second, etc.
          format: int32
        textMessageCapabilityIndicator:
          type: boolean
          description: An indication that the telephone number is technically capable
            of sending and receiving Short Message Service (SMS) text messages.
    edFi_studentEducationOrganizationAssociationTribalAffiliation:
      required:
      - tribalAffiliationDescriptor
      type: object
      properties:
        tribalAffiliationDescriptor:
          maxLength: 306
          type: string
          description: An American Indian tribe with which the student is affiliated
            as last reported to the education organization.
          x-Ed-Fi-isIdentity: true
    edFi_studentEducationOrganizationResponsibilityAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - responsibilityDescriptor
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: Month, day, and year of the start date of an education organization's
            responsibility for a student.
          format: date
          x-Ed-Fi-isIdentity: true
        responsibilityDescriptor:
          maxLength: 306
          type: string
          description: Indications of an education organization's responsibility
            for a student, such as accountability, attendance, funding, etc.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        endDate:
          type: string
          description: Month, day, and year of the end date of an education organization's
            responsibility for a student.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentGradebookEntry:
      required:
      - gradebookEntryReference
      - studentSectionAssociationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        gradebookEntryReference:
          $ref: "#/components/schemas/edFi_gradebookEntryReference"
        studentSectionAssociationReference:
          $ref: "#/components/schemas/edFi_studentSectionAssociationReference"
        competencyLevelDescriptor:
          maxLength: 306
          type: string
          description: The CompetencyLevel assessed for the student for the referenced
            LearningObjective.
        dateFulfilled:
          type: string
          description: The date an assignment was turned in or the date of an assessment.
          format: date
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the teacher that provides information
            in addition to the grade or assessment score.
        letterGradeEarned:
          maxLength: 20
          type: string
          description: A final or interim (grading period) indicator of student performance
            in a class as submitted by the instructor.
        numericGradeEarned:
          type: number
          description: A final or interim (grading period) indicator of student performance
            in a class as submitted by the instructor.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentHomelessProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        awaitingFosterCare:
          type: boolean
          description: State defined definition for awaiting foster care.
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        homelessPrimaryNighttimeResidenceDescriptor:
          maxLength: 306
          type: string
          description: The primary nighttime residence of the student at the time
            the student is identified as homeless.
        homelessProgramServices:
          type: array
          description: An unordered collection of studentHomelessProgramAssociationHomelessProgramServices.
            Indicates the service(s) being provided to the Student by the Homeless
            Program.
          items:
            $ref: "#/components/schemas/edFi_studentHomelessProgramAssociationHomelessProgramService"
        homelessUnaccompaniedYouth:
          type: boolean
          description: A homeless unaccompanied youth is a youth who is not in the
            physical custody of a parent or guardian and who fits the McKinney-Vento
            definition of homeless. Students must be both unaccompanied and homeless
            to be included as an unaccompanied homeless youth.
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentHomelessProgramAssociationHomelessProgramService:
      required:
      - homelessProgramServiceDescriptor
      type: object
      properties:
        homelessProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            Homeless Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    edFi_studentInterventionAssociation:
      required:
      - interventionReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        cohortReference:
          $ref: "#/components/schemas/edFi_cohortReference"
        interventionReference:
          $ref: "#/components/schemas/edFi_interventionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the assigner that provides information
            regarding why the student was assigned to this intervention.
        dosage:
          type: integer
          description: The duration of time in minutes for which the student was assigned
            to participate in the intervention.
          format: int32
        interventionEffectivenesses:
          type: array
          description: "An unordered collection of studentInterventionAssociationInterventionEffectivenesses.\
            \ A measure of the effects of an intervention in each outcome domain.\
            \ The rating of effectiveness takes into account four factors: the quality\
            \ of the research on the intervention, the statistical significance of\
            \ the research findings, the size of the differences between participants\
            \ in the intervention and comparison groups and the consistency in results."
          items:
            $ref: "#/components/schemas/edFi_studentInterventionAssociationInterventionEffectiveness"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentInterventionAssociationInterventionEffectiveness:
      required:
      - diagnosisDescriptor
      - gradeLevelDescriptor
      - interventionEffectivenessRatingDescriptor
      - populationServedDescriptor
      type: object
      properties:
        diagnosisDescriptor:
          maxLength: 306
          type: string
          description: Targeted purpose of the intervention (e.g., attendance issue,
            dropout risk) for which the effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: Grade level for which effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        populationServedDescriptor:
          maxLength: 306
          type: string
          description: Population for which effectiveness is measured.
          x-Ed-Fi-isIdentity: true
        interventionEffectivenessRatingDescriptor:
          maxLength: 306
          type: string
          description: "An intervention demonstrates effectiveness if the research\
            \ has shown that the program caused an improvement in outcomes. Values:\
            \ positive effects, potentially positive effects, mixed effects, potentially\
            \ negative effects, negative effects, and no discernible effects."
        improvementIndex:
          type: integer
          description: Along a percentile distribution of students, the improvement
            index represents the change in an average student's percentile rank
            that is considered to be due to the intervention.
          format: int32
    edFi_studentInterventionAttendanceEvent:
      required:
      - attendanceEventCategoryDescriptor
      - eventDate
      - interventionReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        attendanceEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
          x-Ed-Fi-isIdentity: true
        eventDate:
          type: string
          description: Date for this attendance event.
          format: date
          x-Ed-Fi-isIdentity: true
        interventionReference:
          $ref: "#/components/schemas/edFi_interventionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        attendanceEventReason:
          maxLength: 255
          type: string
          description: The reported reason for a student's absence.
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The setting in which a child receives education and related
            services. This attribute is only used if it differs from the EducationalEnvironment
            of the Section. This is only used in the AttendanceEvent if different
            from the associated Section.
        eventDuration:
          type: number
          description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
          format: double
        interventionDuration:
          type: integer
          description: The duration in minutes in which the student participated in
            the intervention during this instance.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentLanguageInstructionProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        dosage:
          type: integer
          description: The duration of time in minutes for which the student was assigned
            to participate in the program.
          format: int32
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        englishLanguageProficiencyAssessments:
          type: array
          description: An unordered collection of studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments.
            Results of yearly English language assessment.
          items:
            $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment"
        englishLearnerParticipation:
          type: boolean
          description: An indication that an English Learner student is served by
            an English language instruction educational program supported with Title
            III of ESEA funds.
        languageInstructionProgramServices:
          type: array
          description: An unordered collection of studentLanguageInstructionProgramAssociationLanguageInstructionProgramServices.
            Indicates the service(s) being provided to the Student by the Language
            Instruction Program.
          items:
            $ref: "#/components/schemas/edFi_studentLanguageInstructionProgramAssociationLanguageInstructionProgramService"
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment:
      required:
      - schoolYearTypeReference
      type: object
      properties:
        monitoredDescriptor:
          maxLength: 306
          type: string
          description: Student is monitored on content achievement who are no longer
            receiving services.
        participationDescriptor:
          maxLength: 306
          type: string
          description: Field indicating the participation in the yearly English language
            assessment.
        proficiencyDescriptor:
          maxLength: 306
          type: string
          description: The proficiency level for the yearly English language assessment.
        progressDescriptor:
          maxLength: 306
          type: string
          description: The yearly progress or growth from last year's assessment.
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
    edFi_studentLanguageInstructionProgramAssociationLanguageInstructionProgramService:
      required:
      - languageInstructionProgramServiceDescriptor
      type: object
      properties:
        languageInstructionProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            Language Instruction Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentLearningObjective:
      required:
      - competencyLevelDescriptor
      - gradingPeriodReference
      - learningObjectiveReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        gradingPeriodReference:
          $ref: "#/components/schemas/edFi_gradingPeriodReference"
        learningObjectiveReference:
          $ref: "#/components/schemas/edFi_learningObjectiveReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        competencyLevelDescriptor:
          maxLength: 306
          type: string
          description: The CompetencyLevel assessed for the student for the referenced
            LearningObjective.
        diagnosticStatement:
          maxLength: 1024
          type: string
          description: A statement provided by the teacher that provides information
            in addition to the grade or assessment score.
        generalStudentProgramAssociations:
          type: array
          description: An unordered collection of studentLearningObjectiveGeneralStudentProgramAssociations.
            Relates the Student and Program associated with the LearningObjective.
          items:
            $ref: "#/components/schemas/edFi_studentLearningObjectiveGeneralStudentProgramAssociation"
        studentSectionAssociations:
          type: array
          description: An unordered collection of studentLearningObjectiveStudentSectionAssociations.
            Relates the Student and Section associated with the LearningObjective.
          items:
            $ref: "#/components/schemas/edFi_studentLearningObjectiveStudentSectionAssociation"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentLearningObjectiveGeneralStudentProgramAssociation:
      required:
      - generalStudentProgramAssociationReference
      type: object
      properties:
        generalStudentProgramAssociationReference:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationReference"
    edFi_studentLearningObjectiveReference:
      required:
      - gradingPeriodDescriptor
      - gradingPeriodSchoolId
      - gradingPeriodSchoolYear
      - gradingPeriodSequence
      - learningObjectiveId
      - namespace
      - studentUniqueId
      type: object
      properties:
        gradingPeriodDescriptor:
          maxLength: 306
          type: string
          description: The name of the period for which grades are reported.
        gradingPeriodSchoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        gradingPeriodSchoolYear:
          type: integer
          description: The identifier for the grading period school year.
          format: int32
        gradingPeriodSequence:
          type: integer
          description: The sequential order of this period relative to other periods.
          format: int32
        learningObjectiveId:
          maxLength: 60
          type: string
          description: The identifier for the specific learning objective in the
            context of a standard (e.g., 111.15.3.1.A).
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the LearningObjective.
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentLearningObjectiveStudentSectionAssociation:
      required:
      - studentSectionAssociationReference
      type: object
      properties:
        studentSectionAssociationReference:
          $ref: "#/components/schemas/edFi_studentSectionAssociationReference"
    edFi_studentMigrantEducationProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - lastQualifyingMove
      - priorityForServices
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        continuationOfServicesReasonDescriptor:
          maxLength: 306
          type: string
          description: The \"continuation of services\" provision found in Section
            1304(e) of the statute provides that (1) a child who ceases to be a
            migratory child during a school term shall be eligible for services
            until the end of such term; (2) a child who is no longer a migratory
            child may continue to receive services for one additional school year,
            but only if comparable services are not available through other programs;
            and (3) secondary school students who were eligible for services in
            secondary school may continue to be served through credit accrual programs
            until graduation. Only students who received services at any time during
            their 36 month eligibility period may continue to receive services (not
            necessarily the same service).
        eligibilityExpirationDate:
          type: string
          description: The Eligibility Expiration Date is used to determine end of
            eligibility and to account for a child's eligibility expiring earlier
            than 36 months from the child's QAD. A child's eligibility would end
            earlier than 36 months from the child's QAD, if the child is no longer
            entitled to a free public education (e.g., graduated with a high school
            diploma, obtained a high school equivalency diploma (HSED), or for other
            reasons as determined by States' requirements), or if the child passes
            away.
          format: date
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        lastQualifyingMove:
          type: string
          description: Date the last qualifying move occurred; used to compute MEP
            status.
          format: date
        migrantEducationProgramServices:
          type: array
          description: An unordered collection of studentMigrantEducationProgramAssociationMigrantEducationProgramServices.
            Indicates the Service(s) being provided to the Student by the Migrant
            Education Program.
          items:
            $ref: "#/components/schemas/edFi_studentMigrantEducationProgramAssociationMigrantEducationProgramService"
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        priorityForServices:
          type: boolean
          description: Report migratory children who are classified as having \
            priority for services\" because they are failing, or most at risk of failing
            to meet the State's challenging State academic content standards and
            challenging State student academic achievement standards, and their
            education has been interrupted during the regular school year.
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        qualifyingArrivalDate:
          type: string
          description: The Qualifying Arrival Date (QAD) is the date the child joins
            the worker who has already moved, or the date when the worker joins
            the child who has already moved. The QAD is the date that the child's
            eligibility for the MEP begins. The QAD is not affected by subsequent
            non-qualifying moves.
          format: date
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        stateResidencyDate:
          type: string
          description: The verified State residency for the student.
          format: date
        usInitialEntry:
          type: string
          description: The month, day, and year on which the Student first entered
            the U.S.
          format: date
        usInitialSchoolEntry:
          type: string
          description: The month, day, and year on which the Student first entered
            a U.S. school.
          format: date
        usMostRecentEntry:
          type: string
          description: The month, day, and year of the Student's most recent entry
            into the U.S.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentMigrantEducationProgramAssociationMigrantEducationProgramService:
      required:
      - migrantEducationProgramServiceDescriptor
      type: object
      properties:
        migrantEducationProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the Service being provided to the student by the
            Migrant Education Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentNeglectedOrDelinquentProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        elaProgressLevelDescriptor:
          maxLength: 306
          type: string
          description: The progress measured from pre- to post- test for ELA.
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        mathematicsProgressLevelDescriptor:
          maxLength: 306
          type: string
          description: The progress measured from pre- to post-test for Mathematics.
        neglectedOrDelinquentProgramDescriptor:
          maxLength: 306
          type: string
          description: The type of program under ESEA Title I, Part D, Subpart 1
            (state programs) or Subpart 2 (LEA).
        neglectedOrDelinquentProgramServices:
          type: array
          description: An unordered collection of studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices.
            Indicates the service(s) being provided to the Student by the Neglected
            or Delinquent Program.
          items:
            $ref: "#/components/schemas/edFi_studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService"
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService:
      required:
      - neglectedOrDelinquentProgramServiceDescriptor
      type: object
      properties:
        neglectedOrDelinquentProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            Neglected or Delinquent Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentOtherName:
      required:
      - firstName
      - lastSurname
      - otherNameTypeDescriptor
      type: object
      properties:
        otherNameTypeDescriptor:
          maxLength: 306
          type: string
          description: The types of alternate names for a person.
          x-Ed-Fi-isIdentity: true
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
    edFi_studentParentAssociation:
      required:
      - parentReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        parentReference:
          $ref: "#/components/schemas/edFi_parentReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        contactPriority:
          type: integer
          description: The numeric order of the preferred sequence or priority of
            contact.
          format: int32
        contactRestrictions:
          maxLength: 250
          type: string
          description: Restrictions for student and/or teacher contact with the individual
            (e.g., the student may not be picked up by the individual).
        emergencyContactStatus:
          type: boolean
          description: Indicator of whether the person is a designated emergency contact
            for the Student.
        legalGuardian:
          type: boolean
          description: Indicator of whether the person is a legal guardian for the
            Student.
        livesWith:
          type: boolean
          description: Indicator of whether the Student lives with the associated
            parent.
        primaryContactStatus:
          type: boolean
          description: Indicator of whether the person is a primary parental contact
            for the Student.
        relationDescriptor:
          maxLength: 306
          type: string
          description: The nature of an individual's relationship to a student, primarily
            used to capture family relationships.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentPersonalIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    edFi_studentProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        services:
          type: array
          description: An unordered collection of studentProgramAssociationServices.
            Indicates the Service(s) being provided to the Student by the Program.
          items:
            $ref: "#/components/schemas/edFi_studentProgramAssociationService"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentProgramAssociationService:
      required:
      - serviceDescriptor
      type: object
      properties:
        serviceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the Service being provided to the student by the
            Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentProgramAttendanceEvent:
      required:
      - attendanceEventCategoryDescriptor
      - educationOrganizationReference
      - eventDate
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        attendanceEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
          x-Ed-Fi-isIdentity: true
        eventDate:
          type: string
          description: Date for this attendance event.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        attendanceEventReason:
          maxLength: 255
          type: string
          description: The reported reason for a student's absence.
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The setting in which a child receives education and related
            services. This attribute is only used if it differs from the EducationalEnvironment
            of the Section. This is only used in the AttendanceEvent if different
            from the associated Section.
        eventDuration:
          type: number
          description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
          format: double
        programAttendanceDuration:
          type: integer
          description: The duration in minutes of the program attendance event.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentReference:
      required:
      - studentUniqueId
      type: object
      properties:
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentSchoolAssociation:
      required:
      - entryDate
      - entryGradeLevelDescriptor
      - schoolReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        entryDate:
          type: string
          description: The month, day, and year on which an individual enters and
            begins to receive instructional services in a school.
          format: date
          x-Ed-Fi-isIdentity: true
        calendarReference:
          $ref: "#/components/schemas/edFi_calendarReference"
        classOfSchoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        graduationPlanReference:
          $ref: "#/components/schemas/edFi_graduationPlanReference"
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        alternativeGraduationPlans:
          type: array
          description: An unordered collection of studentSchoolAssociationAlternativeGraduationPlans.
            The secondary graduation plan or plans associated with the student enrolled
            in the school.
          items:
            $ref: "#/components/schemas/edFi_studentSchoolAssociationAlternativeGraduationPlan"
        educationPlans:
          type: array
          description: An unordered collection of studentSchoolAssociationEducationPlans.
            The type of education plan(s) the student is following, if appropriate.
          items:
            $ref: "#/components/schemas/edFi_studentSchoolAssociationEducationPlan"
        employedWhileEnrolled:
          type: boolean
          description: An individual who is a paid employee or works in his or her
            own business, profession, or farm and at the same time is enrolled in
            secondary, postsecondary, or adult education.
        entryGradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade level or primary instructional level at which a student
            enters and receives services in a school or an educational institution
            during a given academic session.
        entryGradeLevelReasonDescriptor:
          maxLength: 306
          type: string
          description: The primary reason as to why a staff member determined that
            a student should be promoted or not (or be demoted) at the end of a given
            school term.
        entryTypeDescriptor:
          maxLength: 306
          type: string
          description: The process by which a student enters a school during a given
            academic session.
        exitWithdrawDate:
          type: string
          description: The recorded exit or withdraw date for the student.
          format: date
        exitWithdrawTypeDescriptor:
          maxLength: 306
          type: string
          description: The circumstances under which the student exited from membership
            in an educational institution.
        fullTimeEquivalency:
          type: number
          description: The full-time equivalent ratio for the student s assignment
            to a school for services or instruction. For example, a full-time student
            would have an FTE value of 1 while a half-time student would have an
            FTE value of 0.5.
          format: double
        primarySchool:
          type: boolean
          description: Indicates if a given enrollment record should be considered
            the primary record for a student.
        repeatGradeIndicator:
          type: boolean
          description: An indicator of whether the student is enrolling to repeat
            a grade level, either by failure or an agreement to hold the student
            back.
        residencyStatusDescriptor:
          maxLength: 306
          type: string
          description: An indication of the location of a persons legal residence
            relative to (within or outside of) the boundaries of the public school
            attended and its administrative unit.
        schoolChoiceTransfer:
          type: boolean
          description: An indication of whether students transferred in or out of
            the school did so during the school year under the provisions for public
            school choice in accordance with Title I, Part A, Section 1116.
        termCompletionIndicator:
          type: boolean
          description: Idicates whether or not a student completed the most recent
            school term.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSchoolAssociationAlternativeGraduationPlan:
      required:
      - alternativeGraduationPlanReference
      type: object
      properties:
        alternativeGraduationPlanReference:
          $ref: "#/components/schemas/edFi_graduationPlanReference"
    edFi_studentSchoolAssociationEducationPlan:
      required:
      - educationPlanDescriptor
      type: object
      properties:
        educationPlanDescriptor:
          maxLength: 306
          type: string
          description: The type of education plan(s) the student is following, if
            appropriate.
          x-Ed-Fi-isIdentity: true
    edFi_studentSchoolAttendanceEvent:
      required:
      - attendanceEventCategoryDescriptor
      - eventDate
      - schoolReference
      - sessionReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        attendanceEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
          x-Ed-Fi-isIdentity: true
        eventDate:
          type: string
          description: Date for this attendance event.
          format: date
          x-Ed-Fi-isIdentity: true
        schoolReference:
          $ref: "#/components/schemas/edFi_schoolReference"
        sessionReference:
          $ref: "#/components/schemas/edFi_sessionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        arrivalTime:
          type: string
          description: The time of day the student arrived for the attendance event
            in ISO 8601 format.
        attendanceEventReason:
          maxLength: 255
          type: string
          description: The reported reason for a student's absence.
        departureTime:
          type: string
          description: The time of day the student departed for the attendance event
            in ISO 8601 format.
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The setting in which a child receives education and related
            services. This attribute is only used if it differs from the EducationalEnvironment
            of the Section. This is only used in the AttendanceEvent if different
            from the associated Section.
        eventDuration:
          type: number
          description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
          format: double
        schoolAttendanceDuration:
          type: integer
          description: The duration in minutes of the school attendance event.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSchoolFoodServiceProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        directCertification:
          type: boolean
          description: Indicates that the student's National School Lunch Program
            (NSLP) eligibility has been determined through direct certification.
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        schoolFoodServiceProgramServices:
          type: array
          description: An unordered collection of studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices.
            Indicates the service(s) being provided to the Student by the School Food
            Service Program.
          items:
            $ref: "#/components/schemas/edFi_studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService"
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService:
      required:
      - schoolFoodServiceProgramServiceDescriptor
      type: object
      properties:
        schoolFoodServiceProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            School Food Service Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentSectionAssociation:
      required:
      - beginDate
      - sectionReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: Month, day, and year of the Student's entry or assignment
            to the Section.
          format: date
          x-Ed-Fi-isIdentity: true
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        attemptStatusDescriptor:
          maxLength: 306
          type: string
          description: An indication of the student's completion status for the section.
        endDate:
          type: string
          description: Month, day, and year of the withdrawal or exit of the Student
            from the Section.
          format: date
        homeroomIndicator:
          type: boolean
          description: Indicates the Section is the student's homeroom. Homeroom period
            may the convention for taking daily attendance.
        repeatIdentifierDescriptor:
          maxLength: 306
          type: string
          description: An indication as to whether a student has previously taken
            a given course.        Repeated, counted in grade point average Repeated,
            not counted in grade point average        Not repeated        Other.
        teacherStudentDataLinkExclusion:
          type: boolean
          description: Indicates that the student-section combination is excluded
            from calculation of value-added or growth attribution calculations used
            for a particular teacher evaluation.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSectionAssociationReference:
      required:
      - beginDate
      - localCourseCode
      - schoolId
      - schoolYear
      - sectionIdentifier
      - sessionName
      - studentUniqueId
      type: object
      properties:
        beginDate:
          type: string
          description: Month, day, and year of the Student's entry or assignment
            to the Section.
          format: date
        localCourseCode:
          maxLength: 60
          type: string
          description: The local code assigned by the School that identifies the course
            offering provided for the instruction of students.
        schoolId:
          type: integer
          description: The identifier assigned to a school.
          format: int32
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sectionIdentifier:
          maxLength: 255
          type: string
          description: The local identifier assigned to a section.
        sessionName:
          maxLength: 60
          type: string
          description: The identifier for the calendar for the academic session (e.g.,
            2010/11, 2011 Summer).
        studentUniqueId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a student.
        link:
          $ref: "#/components/schemas/link"
    edFi_studentSectionAttendanceEvent:
      required:
      - attendanceEventCategoryDescriptor
      - eventDate
      - sectionReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        attendanceEventCategoryDescriptor:
          maxLength: 306
          type: string
          description: "A code describing the attendance event, for example: Present
            \ Unexcused absence        Excused absence        Tardy."
          x-Ed-Fi-isIdentity: true
        eventDate:
          type: string
          description: Date for this attendance event.
          format: date
          x-Ed-Fi-isIdentity: true
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        arrivalTime:
          type: string
          description: The time of day the student arrived for the attendance event
            in ISO 8601 format.
        attendanceEventReason:
          maxLength: 255
          type: string
          description: The reported reason for a student's absence.
        classPeriods:
          type: array
          description: An unordered collection of studentSectionAttendanceEventClassPeriods.
            The Class Period(s) to which the Section Attendance Event applies.
          items:
            $ref: "#/components/schemas/edFi_studentSectionAttendanceEventClassPeriod"
        departureTime:
          type: string
          description: The time of day the student departed for the attendance event
            in ISO 8601 format.
        educationalEnvironmentDescriptor:
          maxLength: 306
          type: string
          description: The setting in which a child receives education and related
            services. This attribute is only used if it differs from the EducationalEnvironment
            of the Section. This is only used in the AttendanceEvent if different
            from the associated Section.
        eventDuration:
          type: number
          description: "The amount of time for the event as recognized by the school:\
            \ 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33."
          format: double
        sectionAttendanceDuration:
          type: integer
          description: The duration in minutes of the section attendance event.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSectionAttendanceEventClassPeriod:
      required:
      - classPeriodReference
      type: object
      properties:
        classPeriodReference:
          $ref: "#/components/schemas/edFi_classPeriodReference"
    edFi_studentSpecialEducationProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        disabilities:
          type: array
          description: An unordered collection of studentSpecialEducationProgramAssociationDisabilities.
            The disability condition(s) that best describes an individual's impairment,
            as related to special education services received.
          items:
            $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociationDisability"
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        ideaEligibility:
          type: boolean
          description: Indicator of the eligibility of the student to receive special
            education services according to the Individuals with Disabilities Education
            Act (IDEA).
        iepBeginDate:
          type: string
          description: The effective date of the most recent IEP.
          format: date
        iepEndDate:
          type: string
          description: The end date of the most recent IEP.
          format: date
        iepReviewDate:
          type: string
          description: The date of the last IEP review.
          format: date
        lastEvaluationDate:
          type: string
          description: The date of the last special education evaluation.
          format: date
        medicallyFragile:
          type: boolean
          description: "Indicates whether the Student receiving special education\
            \ and related services is:        1) in the age range of birth to 22 years,\
            \ and        2) has a serious, ongoing illness or a chronic condition\
            \ that has lasted or is anticipated to last at least 12 or more months\
            \ or has required at least one month of hospitalization, and that requires\
            \ daily, ongoing medical treatments and monitoring by appropriately trained\
            \ personnel which may include parents or other family members, and\
            \     3) requires the routine use of medical device or of assistive technology\
            \ to compensate for the loss of usefulness of a body function needed to\
            \ participate in activities of daily living, and        4) lives with\
            \ ongoing threat to his or her continued well-being.        Aligns with\
            \ federal requirements."
        multiplyDisabled:
          type: boolean
          description: Indicates whether the Student receiving special education
            and related services has been designated as multiply disabled by the
            admission, review, and dismissal committee as aligned with federal requirements.
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        schoolHoursPerWeek:
          type: number
          description: Indicate the total number of hours of instructional time per
            week for the school that the student attends.
          format: double
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        serviceProviders:
          type: array
          description: An unordered collection of studentSpecialEducationProgramAssociationServiceProviders.
            The Staff providing special education services to the Student.
          items:
            $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociationServiceProvider"
        specialEducationHoursPerWeek:
          type: number
          description: The number of hours per week for special education instruction
            and therapy.
          format: double
        specialEducationProgramServices:
          type: array
          description: An unordered collection of studentSpecialEducationProgramAssociationSpecialEducationProgramServices.
            Indicates the Service(s) being provided to the Student by the Special
            Education Program.
          items:
            $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramService"
        specialEducationSettingDescriptor:
          maxLength: 306
          type: string
          description: The major instructional setting (more than 50 percent of a
            student's special education program).
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentSpecialEducationProgramAssociationDisability:
      required:
      - disabilityDescriptor
      type: object
      properties:
        disabilityDescriptor:
          maxLength: 306
          type: string
          description: A disability category that describes a child's impairment.
          x-Ed-Fi-isIdentity: true
        disabilityDeterminationSourceTypeDescriptor:
          maxLength: 306
          type: string
          description: The source that provided the disability determination.
        disabilityDiagnosis:
          maxLength: 80
          type: string
          description: A description of the disability diagnosis.
        orderOfDisability:
          type: integer
          description: "The order by severity of student's disabilities: 1- Primary,\
            \ 2 - Secondary, 3 - Tertiary, etc."
          format: int32
        designations:
          type: array
          description: An unordered collection of studentSpecialEducationProgramAssociationDisabilityDesignations.
            Whether the disability is IDEA, Section 504, or other disability designation.
          items:
            $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociationDisabilityDesignation"
    edFi_studentSpecialEducationProgramAssociationDisabilityDesignation:
      required:
      - disabilityDesignationDescriptor
      type: object
      properties:
        disabilityDesignationDescriptor:
          maxLength: 306
          type: string
          description: Whether the disability is IDEA, Section 504, or other disability
            designation.
          x-Ed-Fi-isIdentity: true
    edFi_studentSpecialEducationProgramAssociationServiceProvider:
      required:
      - staffReference
      type: object
      properties:
        primaryProvider:
          type: boolean
          description: Primary ServiceProvider.
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
    edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramService:
      required:
      - specialEducationProgramServiceDescriptor
      type: object
      properties:
        specialEducationProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            Special Education Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
        providers:
          type: array
          description: An unordered collection of studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders.
            The Staff providing the service to the Student.
          items:
            $ref: "#/components/schemas/edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider"
    edFi_studentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider:
      required:
      - staffReference
      type: object
      properties:
        primaryProvider:
          type: boolean
          description: Primary ServiceProvider.
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
    edFi_studentTitleIPartAProgramAssociation:
      required:
      - beginDate
      - educationOrganizationReference
      - programReference
      - studentReference
      - titleIPartAParticipantDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The earliest date the student is involved with the program.
            Typically, this is the date the student becomes eligible for the program.
          format: date
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        endDate:
          type: string
          description: The month, day, and year on which the Student exited the Program
            or stopped receiving services.
          format: date
        participationStatus:
          $ref: "#/components/schemas/edFi_generalStudentProgramAssociationParticipationStatus"
        programParticipationStatuses:
          type: array
          description: An unordered collection of generalStudentProgramAssociationProgramParticipationStatuses.
            The status of the student's program participation.
          items:
            $ref: "#/components/schemas/edFi_generalStudentProgramAssociationProgramParticipationStatus"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: The reason the child left the Program within a school or district.
        servedOutsideOfRegularSession:
          type: boolean
          description: Indicates whether the Student received services during the
            summer session or between sessions.
        services:
          type: array
          description: An unordered collection of studentTitleIPartAProgramAssociationServices.
            Indicates the Service(s) being provided to the Student by the Program.
          items:
            $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociationService"
        titleIPartAParticipantDescriptor:
          maxLength: 306
          type: string
          description: "An indication of the type of Title I program, if any, in which\
            \ the student is participating and by which the student is served: Public\
            \ Targeted Assistance Program        Public Schoolwide Program\
            \ Private School Students Participating        Local Neglected Program."
        titleIPartAProgramServices:
          type: array
          description: An unordered collection of studentTitleIPartAProgramAssociationTitleIPartAProgramServices.
            Indicates the service(s) being provided to the Student by the Title I
            Part A Program.
          items:
            $ref: "#/components/schemas/edFi_studentTitleIPartAProgramAssociationTitleIPartAProgramService"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_studentTitleIPartAProgramAssociationService:
      required:
      - serviceDescriptor
      type: object
      properties:
        serviceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the Service being provided to the student by the
            Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentTitleIPartAProgramAssociationTitleIPartAProgramService:
      required:
      - titleIPartAProgramServiceDescriptor
      type: object
      properties:
        titleIPartAProgramServiceDescriptor:
          maxLength: 306
          type: string
          description: Indicates the service being provided to the student by the
            Title I Part A Program.
          x-Ed-Fi-isIdentity: true
        primaryIndicator:
          type: boolean
          description: True if service is a primary service.
        serviceBeginDate:
          type: string
          description: First date the Student was in this option for the current school
            year.
          format: date
        serviceEndDate:
          type: string
          description: Last date the Student was in this option for the current school
            year.
          format: date
    edFi_studentVisa:
      required:
      - visaDescriptor
      type: object
      properties:
        visaDescriptor:
          maxLength: 306
          type: string
          description: An indicator of a non-US citizen's Visa type.
          x-Ed-Fi-isIdentity: true
    edFi_survey:
      required:
      - namespace
      - schoolYearTypeReference
      - surveyIdentifier
      - surveyTitle
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
          x-Ed-Fi-isIdentity: true
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        sessionReference:
          $ref: "#/components/schemas/edFi_sessionReference"
        numberAdministered:
          type: integer
          description: Number of persons to whom this survey was administered.
          format: int32
        surveyCategoryDescriptor:
          maxLength: 306
          type: string
          description: The category or type of survey.
        surveyTitle:
          maxLength: 255
          type: string
          description: The title of the survey.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyCourseAssociation:
      required:
      - courseReference
      - surveyReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        courseReference:
          $ref: "#/components/schemas/edFi_courseReference"
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyProgramAssociation:
      required:
      - programReference
      - surveyReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        programReference:
          $ref: "#/components/schemas/edFi_programReference"
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyQuestion:
      required:
      - questionCode
      - questionFormDescriptor
      - questionText
      - surveyReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        questionCode:
          maxLength: 60
          type: string
          description: The identifying code for the question, unique for the survey.
          x-Ed-Fi-isIdentity: true
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        surveySectionReference:
          $ref: "#/components/schemas/edFi_surveySectionReference"
        matrices:
          type: array
          description: An unordered collection of surveyQuestionMatrices. Information
            about the matrix element in the survey.
          items:
            $ref: "#/components/schemas/edFi_surveyQuestionMatrix"
        questionFormDescriptor:
          maxLength: 306
          type: string
          description: The form or type of question.
        questionText:
          maxLength: 1024
          type: string
          description: The text of the question.
        responseChoices:
          type: array
          description: An unordered collection of surveyQuestionResponseChoices. The
            optional list of possible responses to a survey question.
          items:
            $ref: "#/components/schemas/edFi_surveyQuestionResponseChoice"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyQuestionMatrix:
      required:
      - matrixElement
      type: object
      properties:
        matrixElement:
          maxLength: 255
          type: string
          description: For matrix questions, the text identifying each row of the
            matrix.
          x-Ed-Fi-isIdentity: true
        maxRawScore:
          type: integer
          description: The maximum score possible on a survey.
          format: int32
        minRawScore:
          type: integer
          description: The minimum score possible on a survey.
          format: int32
    edFi_surveyQuestionReference:
      required:
      - namespace
      - questionCode
      - surveyIdentifier
      type: object
      properties:
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
        questionCode:
          maxLength: 60
          type: string
          description: The identifying code for the question, unique for the survey.
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
        link:
          $ref: "#/components/schemas/link"
    edFi_surveyQuestionResponse:
      required:
      - surveyQuestionReference
      - surveyResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        surveyQuestionReference:
          $ref: "#/components/schemas/edFi_surveyQuestionReference"
        surveyResponseReference:
          $ref: "#/components/schemas/edFi_surveyResponseReference"
        comment:
          maxLength: 1024
          type: string
          description: Additional information provided by the responder about the
            question in the survey.
        noResponse:
          type: boolean
          description: Indicates there was no response to the question.
        surveyQuestionMatrixElementResponses:
          type: array
          description: An unordered collection of surveyQuestionResponseSurveyQuestionMatrixElementResponses.
            For matrix questions, the response for each row of the matrix.
          items:
            $ref: "#/components/schemas/edFi_surveyQuestionResponseSurveyQuestionMatrixElementResponse"
        values:
          type: array
          description: An unordered collection of surveyQuestionResponseValues. For
            free-form, single- or multiple-selection questions, one or more responses.
          items:
            $ref: "#/components/schemas/edFi_surveyQuestionResponseValue"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyQuestionResponseChoice:
      required:
      - sortOrder
      type: object
      properties:
        sortOrder:
          type: integer
          description: Sort order of this ResponseChoice within the complete list
            of choices attached to a SurveyQuestion. If sort order doesn't apply,
            the value of NumericValue or a unique, possibly sequential numeric value.
          format: int32
          x-Ed-Fi-isIdentity: true
        numericValue:
          type: integer
          description: A valid numeric response. If paired with a TextValue, the
            numeric equivalent of the TextValue.
          format: int32
        textValue:
          maxLength: 255
          type: string
          description: A valid text response. If paired with a NumericValue, the
            text equivalent of the NumericValue.
    edFi_surveyQuestionResponseSurveyQuestionMatrixElementResponse:
      required:
      - matrixElement
      type: object
      properties:
        matrixElement:
          maxLength: 255
          type: string
          description: For matrix questions, the text identifying each row of the
            matrix.
          x-Ed-Fi-isIdentity: true
        maxNumericResponse:
          type: integer
          description: The maximum score response to the question.
          format: int32
        minNumericResponse:
          type: integer
          description: The minimum score response to the question.
          format: int32
        noResponse:
          type: boolean
          description: Indicates there was no response to the question.
        numericResponse:
          type: integer
          description: The numeric response to the question.
          format: int32
        textResponse:
          maxLength: 2048
          type: string
          description: The text response(s) for the question.
    edFi_surveyQuestionResponseValue:
      required:
      - surveyQuestionResponseValueIdentifier
      type: object
      properties:
        surveyQuestionResponseValueIdentifier:
          type: integer
          description: Primary key for the response value; a unique, usually sequential
            numeric value for a collection of responses, or potentially the value
            of NumericResponse for a single response.
          format: int32
          x-Ed-Fi-isIdentity: true
        numericResponse:
          type: integer
          description: A numeric response to the question.
          format: int32
        textResponse:
          maxLength: 2048
          type: string
          description: A text response to the question.
    edFi_surveyReference:
      required:
      - namespace
      - surveyIdentifier
      type: object
      properties:
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
        link:
          $ref: "#/components/schemas/link"
    edFi_surveyResponse:
      required:
      - responseDate
      - surveyReference
      - surveyResponseIdentifier
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        surveyResponseIdentifier:
          maxLength: 60
          type: string
          description: The identifier of the survey typically from the survey application.
          x-Ed-Fi-isIdentity: true
        parentReference:
          $ref: "#/components/schemas/edFi_parentReference"
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        electronicMailAddress:
          maxLength: 128
          type: string
          description: Email address of the respondent.
        fullName:
          maxLength: 80
          type: string
          description: Full name of the respondent.
        location:
          maxLength: 75
          type: string
          description: Location of the respondent, often a city, district, or school.
        responseDate:
          type: string
          description: Date of the survey response.
          format: date
        responseTime:
          type: integer
          description: The amount of time (in seconds) it took for the respondent
            to complete the survey.
          format: int32
        surveyLevels:
          type: array
          description: An unordered collection of surveyResponseSurveyLevels. Provides
            information about the respondents of a survey and how they can be grouped
            together.
          items:
            $ref: "#/components/schemas/edFi_surveyResponseSurveyLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
        _ext:
          $ref: "#/components/schemas/surveyResponseExtensions"
    edFi_surveyResponseEducationOrganizationTargetAssociation:
      required:
      - educationOrganizationReference
      - surveyResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        surveyResponseReference:
          $ref: "#/components/schemas/edFi_surveyResponseReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyResponseReference:
      required:
      - namespace
      - surveyIdentifier
      - surveyResponseIdentifier
      type: object
      properties:
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
        surveyResponseIdentifier:
          maxLength: 60
          type: string
          description: The identifier of the survey typically from the survey application.
        link:
          $ref: "#/components/schemas/link"
    edFi_surveyResponseStaffTargetAssociation:
      required:
      - staffReference
      - surveyResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        surveyResponseReference:
          $ref: "#/components/schemas/edFi_surveyResponseReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveyResponseSurveyLevel:
      required:
      - surveyLevelDescriptor
      type: object
      properties:
        surveyLevelDescriptor:
          maxLength: 306
          type: string
          description: Provides information about the respondents of a survey and
            how they can be grouped together.
          x-Ed-Fi-isIdentity: true
    edFi_surveySection:
      required:
      - surveyReference
      - surveySectionTitle
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        surveySectionTitle:
          maxLength: 255
          type: string
          description: The title or label for the survey section.
          x-Ed-Fi-isIdentity: true
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveySectionAssociation:
      required:
      - sectionReference
      - surveyReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        surveyReference:
          $ref: "#/components/schemas/edFi_surveyReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveySectionReference:
      required:
      - namespace
      - surveyIdentifier
      - surveySectionTitle
      type: object
      properties:
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
        surveySectionTitle:
          maxLength: 255
          type: string
          description: The title or label for the survey section.
        link:
          $ref: "#/components/schemas/link"
    edFi_surveySectionResponse:
      required:
      - surveyResponseReference
      - surveySectionReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        surveyResponseReference:
          $ref: "#/components/schemas/edFi_surveyResponseReference"
        surveySectionReference:
          $ref: "#/components/schemas/edFi_surveySectionReference"
        sectionRating:
          type: number
          description: Numeric rating computed from the survey responses for the section.
          format: double
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveySectionResponseEducationOrganizationTargetAssociation:
      required:
      - educationOrganizationReference
      - surveySectionResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        surveySectionResponseReference:
          $ref: "#/components/schemas/edFi_surveySectionResponseReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    edFi_surveySectionResponseReference:
      required:
      - namespace
      - surveyIdentifier
      - surveyResponseIdentifier
      - surveySectionTitle
      type: object
      properties:
        namespace:
          maxLength: 255
          type: string
          description: Namespace for the Survey.
        surveyIdentifier:
          maxLength: 60
          type: string
          description: The unique survey identifier from the survey tool.
        surveyResponseIdentifier:
          maxLength: 60
          type: string
          description: The identifier of the survey typically from the survey application.
        surveySectionTitle:
          maxLength: 255
          type: string
          description: The title or label for the survey section.
        link:
          $ref: "#/components/schemas/link"
    edFi_surveySectionResponseStaffTargetAssociation:
      required:
      - staffReference
      - surveySectionResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        staffReference:
          $ref: "#/components/schemas/edFi_staffReference"
        surveySectionResponseReference:
          $ref: "#/components/schemas/edFi_surveySectionResponseReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    link:
      type: object
      properties:
        rel:
          type: string
          description: Describes the nature of the relationship to the referenced
            resource.
        href:
          type: string
          description: The URL to the related resource.
    schoolExtensions:
      type: object
      properties:
        tpdm:
          $ref: "#/components/schemas/tpdm_schoolExtension"
    surveyResponseExtensions:
      type: object
      properties:
        tpdm:
          $ref: "#/components/schemas/tpdm_surveyResponseExtension"
    tpdm_candidate:
      required:
      - birthDate
      - candidateIdentifier
      - firstName
      - lastSurname
      - sexDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        candidateIdentifier:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a candidate.
          x-Ed-Fi-isIdentity: true
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        addresses:
          type: array
          description: An unordered collection of candidateAddresses. The set of
            elements that describes an address, including the street address, city,
            state, and ZIP code.
          items:
            $ref: "#/components/schemas/tpdm_candidateAddress"
        birthCity:
          maxLength: 30
          type: string
          description: The city the student was born in.
        birthCountryDescriptor:
          maxLength: 306
          type: string
          description: The country in which an individual is born. It is strongly
            recommended that entries use only ISO 3166 2-letter country codes.
        birthDate:
          type: string
          description: The month, day, and year on which an individual was born.
          format: date
        birthInternationalProvince:
          maxLength: 150
          type: string
          description: For students born outside of the U.S., the Province or jurisdiction
            in which an individual is born.
        birthSexDescriptor:
          maxLength: 306
          type: string
          description: A person's gender at birth.
        birthStateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the name of the state (within the United
            States) or extra-state jurisdiction in which an individual was born.
        dateEnteredUS:
          type: string
          description: For students born outside of the U.S., the date the student
            entered the U.S.
          format: date
        disabilities:
          type: array
          description: An unordered collection of candidateDisabilities. The disability
            condition(s) that best describes an individual's impairment.
          items:
            $ref: "#/components/schemas/tpdm_candidateDisability"
        displacementStatus:
          maxLength: 30
          type: string
          description: Indicates a state health or weather related event that displaces
            a group of students, and may require additional funding, educational,
            or social services.
        economicDisadvantaged:
          type: boolean
          description: An indication of inadequate financial condition of an individual's
            family, as determined by family income, number of family members/dependents,
            participation in public assistance programs, and/or other characteristics
            considered relevant by federal, state, and local policy.
        electronicMails:
          type: array
          description: An unordered collection of candidateElectronicMails. The numbers,
            letters, and symbols used to identify an electronic mail (e-mail) user
            within the network to which the individual or organization belongs.
          items:
            $ref: "#/components/schemas/tpdm_candidateElectronicMail"
        englishLanguageExamDescriptor:
          maxLength: 306
          type: string
          description: Indicates that a person passed, failed, or did not take an
            English Language assessment (e.g., TOEFFL).
        firstGenerationStudent:
          type: boolean
          description: Indicator of whether individual is a first generation college
            student.
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        genderDescriptor:
          maxLength: 306
          type: string
          description: The gender of the candidate.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        hispanicLatinoEthnicity:
          type: boolean
          description: An indication that the individual traces his or her origin
            or descent to Mexico, Puerto Rico, Cuba, Central, and South America,
            and other Spanish cultures, regardless of race. The term, \"Spanish
            origin,\" can be used in addition to \"Hispanic or Latino.\"
        languages:
          type: array
          description: An unordered collection of candidateLanguages. The language(s)
            the individual uses to communicate.
          items:
            $ref: "#/components/schemas/tpdm_candidateLanguage"
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        limitedEnglishProficiencyDescriptor:
          maxLength: 306
          type: string
          description: An indication that the student has been identified as limited
            English proficient by the Language Proficiency Assessment Committee
            (LPAC), or English proficient.
        maidenName:
          maxLength: 75
          type: string
          description: The person's maiden name.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        multipleBirthStatus:
          type: boolean
          description: Indicator of whether the student was born with other siblings
            (i.e., twins, triplets, etc.)
        otherNames:
          type: array
          description: An unordered collection of candidateOtherNames. Other names
            (e.g., alias, nickname, previous legal name) associated with a person.
          items:
            $ref: "#/components/schemas/tpdm_candidateOtherName"
        personalIdentificationDocuments:
          type: array
          description: "An unordered collection of candidatePersonalIdentificationDocuments.\
            \ The documents presented as evident to verify one's personal identity;\
            \ for example: drivers license, passport, birth certificate, etc."
          items:
            $ref: "#/components/schemas/tpdm_candidatePersonalIdentificationDocument"
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
        races:
          type: array
          description: An unordered collection of candidateRaces. The general racial
            category which most clearly reflects the individual's recognition of his
            or her community or with which the individual most identifies. The data
            model allows for multiple entries so that each individual can specify
            all appropriate races.
          items:
            $ref: "#/components/schemas/tpdm_candidateRace"
        sexDescriptor:
          maxLength: 306
          type: string
          description: The sex of the candidate.
        telephones:
          type: array
          description: An unordered collection of candidateTelephones. The 10-digit
            telephone number, including the area code, for the person.
          items:
            $ref: "#/components/schemas/tpdm_candidateTelephone"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_candidateAddress:
      required:
      - addressTypeDescriptor
      - city
      - postalCode
      - stateAbbreviationDescriptor
      - streetNumberName
      type: object
      properties:
        addressTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of address listed for an individual or organization.\
              \ For example:  Physical Address, Mailing Address, Home Address, etc.)"
          x-Ed-Fi-isIdentity: true
        stateAbbreviationDescriptor:
          maxLength: 306
          type: string
          description: The abbreviation for the state (within the United States) or
            outlying area in which an address is located.
          x-Ed-Fi-isIdentity: true
        city:
          maxLength: 30
          type: string
          description: The name of the city in which an address is located.
          x-Ed-Fi-isIdentity: true
        postalCode:
          maxLength: 17
          type: string
          description: The five or nine digit zip code or overseas postal code portion
            of an address.
          x-Ed-Fi-isIdentity: true
        streetNumberName:
          maxLength: 150
          type: string
          description: The street number and street name or post office box number
            of an address.
          x-Ed-Fi-isIdentity: true
        localeDescriptor:
          maxLength: 306
          type: string
          description: A general geographic indicator that categorizes U.S. territory
            (e.g., City, Suburban).
        apartmentRoomSuiteNumber:
          maxLength: 50
          type: string
          description: The apartment, room, or suite number of an address.
        buildingSiteNumber:
          maxLength: 20
          type: string
          description: The number of the building on the site, if more than one building
            shares the same address.
        congressionalDistrict:
          maxLength: 30
          type: string
          description: The congressional district in which an address is located.
        countyFIPSCode:
          maxLength: 5
          type: string
          description: The Federal Information Processing Standards (FIPS) numeric
            code for the county issued by the National Institute of Standards and
            Technology (NIST). Counties are considered to be the \"first-order subdivisions\
            of each State and statistically equivalent entity, regardless of their
            local designations (county, parish, borough, etc.) Counties in different
            States will have the same code. A unique county number is created when
            combined with the 2-digit FIPS State Code.
        doNotPublishIndicator:
          type: boolean
          description: An indication that the address should not be published.
        latitude:
          maxLength: 20
          type: string
          description: The geographic latitude of the physical address.
        longitude:
          maxLength: 20
          type: string
          description: The geographic longitude of the physical address.
        nameOfCounty:
          maxLength: 30
          type: string
          description: The name of the county, parish, borough, or comparable unit
            (within a state) in                       'which an address is located.
        periods:
          type: array
          description: An unordered collection of candidateAddressPeriods. The time
            periods for which the address is valid. For physical addresses, the
            periods in which the person lived at that address.
          items:
            $ref: "#/components/schemas/tpdm_candidateAddressPeriod"
    tpdm_candidateAddressPeriod:
      required:
      - beginDate
      type: object
      properties:
        beginDate:
          type: string
          description: The month, day, and year for the start of the period.
          format: date
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year for the end of the period.
          format: date
    tpdm_candidateDisability:
      required:
      - disabilityDescriptor
      type: object
      properties:
        disabilityDescriptor:
          maxLength: 306
          type: string
          description: A disability category that describes a child's impairment.
          x-Ed-Fi-isIdentity: true
        disabilityDeterminationSourceTypeDescriptor:
          maxLength: 306
          type: string
          description: The source that provided the disability determination.
        disabilityDiagnosis:
          maxLength: 80
          type: string
          description: A description of the disability diagnosis.
        orderOfDisability:
          type: integer
          description: "The order by severity of student's disabilities: 1- Primary,\
            \ 2 - Secondary, 3 - Tertiary, etc."
          format: int32
        designations:
          type: array
          description: An unordered collection of candidateDisabilityDesignations.
            Whether the disability is IDEA, Section 504, or other disability designation.
          items:
            $ref: "#/components/schemas/tpdm_candidateDisabilityDesignation"
    tpdm_candidateDisabilityDesignation:
      required:
      - disabilityDesignationDescriptor
      type: object
      properties:
        disabilityDesignationDescriptor:
          maxLength: 306
          type: string
          description: Whether the disability is IDEA, Section 504, or other disability
            designation.
          x-Ed-Fi-isIdentity: true
    tpdm_candidateEducatorPreparationProgramAssociation:
      required:
      - beginDate
      - candidateReference
      - educatorPreparationProgramReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        beginDate:
          type: string
          description: The begin date for the association.
          format: date
          x-Ed-Fi-isIdentity: true
        candidateReference:
          $ref: "#/components/schemas/tpdm_candidateReference"
        educatorPreparationProgramReference:
          $ref: "#/components/schemas/tpdm_educatorPreparationProgramReference"
        cohortYears:
          type: array
          description: An unordered collection of candidateEducatorPreparationProgramAssociationCohortYears.
            The type and year of a cohort the student belongs to as determined by
            the year that student entered a specific grade.
          items:
            $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociationCohortYear"
        degreeSpecializations:
          type: array
          description: An unordered collection of candidateEducatorPreparationProgramAssociationDegreeSpecializations.
            Information around the area(s) of specialization for an individual.
          items:
            $ref: "#/components/schemas/tpdm_candidateEducatorPreparationProgramAssociationDegreeSpecialization"
        endDate:
          type: string
          description: The end date for the association.
          format: date
        eppProgramPathwayDescriptor:
          maxLength: 306
          type: string
          description: "The program pathway the candidate is following; for example:\
            \ Residency, Internship, Traditional"
        reasonExitedDescriptor:
          maxLength: 306
          type: string
          description: Reason exited for the association.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_candidateEducatorPreparationProgramAssociationCohortYear:
      required:
      - cohortYearTypeDescriptor
      - schoolYearTypeReference
      type: object
      properties:
        cohortYearTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of cohort year (9th grade, graduation).
          x-Ed-Fi-isIdentity: true
        termDescriptor:
          maxLength: 306
          type: string
          description: The term associated with the cohort year; for example, the
            intended term of graduation.
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
    tpdm_candidateEducatorPreparationProgramAssociationDegreeSpecialization:
      required:
      - majorSpecialization
      type: object
      properties:
        majorSpecialization:
          maxLength: 255
          type: string
          description: The major area for a degree or area of specialization for a
            certificate.
          x-Ed-Fi-isIdentity: true
        endDate:
          type: string
          description: The month, day, and year on which the Teacher Candidate exited
            the declared specialization.
          format: date
        minorSpecialization:
          maxLength: 255
          type: string
          description: The minor area for a degree or area of specialization for a
            certificate.
    tpdm_candidateElectronicMail:
      required:
      - electronicMailAddress
      - electronicMailTypeDescriptor
      type: object
      properties:
        electronicMailTypeDescriptor:
          maxLength: 306
          type: string
          description: "The type of email listed for an individual or organization.\
            \ For example: Home/Personal, Work, etc.)"
          x-Ed-Fi-isIdentity: true
        electronicMailAddress:
          maxLength: 128
          type: string
          description: The electronic mail (e-mail) address listed for an individual
            or organization.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the electronic email address should not
            be published.
        primaryEmailAddressIndicator:
          type: boolean
          description: An indication that the electronic mail address should be used
            as the principal electronic mail address for an individual or organization.
    tpdm_candidateLanguage:
      required:
      - languageDescriptor
      type: object
      properties:
        languageDescriptor:
          maxLength: 306
          type: string
          description: A specification of which written or spoken communication is
            being used.
          x-Ed-Fi-isIdentity: true
        uses:
          type: array
          description: An unordered collection of candidateLanguageUses. A description
            of how the language is used (e.g. Home Language, Native Language, Spoken
            Language).
          items:
            $ref: "#/components/schemas/tpdm_candidateLanguageUse"
    tpdm_candidateLanguageUse:
      required:
      - languageUseDescriptor
      type: object
      properties:
        languageUseDescriptor:
          maxLength: 306
          type: string
          description: A description of how the language is used (e.g. Home Language,
            Native Language, Spoken Language).
          x-Ed-Fi-isIdentity: true
    tpdm_candidateOtherName:
      required:
      - firstName
      - lastSurname
      - otherNameTypeDescriptor
      type: object
      properties:
        otherNameTypeDescriptor:
          maxLength: 306
          type: string
          description: The types of alternate names for a person.
          x-Ed-Fi-isIdentity: true
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
        generationCodeSuffix:
          maxLength: 10
          type: string
          description: An appendage, if any, used to denote an individual's generation
            in his family (e.g., Jr., Sr., III).
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
        middleName:
          maxLength: 75
          type: string
          description: A secondary name given to an individual at birth, baptism,
            or during another naming ceremony.
        personalTitlePrefix:
          maxLength: 30
          type: string
          description: A prefix used to denote the title, degree, position, or seniority
            of the person.
    tpdm_candidatePersonalIdentificationDocument:
      required:
      - identificationDocumentUseDescriptor
      - personalInformationVerificationDescriptor
      type: object
      properties:
        identificationDocumentUseDescriptor:
          maxLength: 306
          type: string
          description: The primary function of the document used for establishing
            identity.
          x-Ed-Fi-isIdentity: true
        personalInformationVerificationDescriptor:
          maxLength: 306
          type: string
          description: The category of the document relative to its purpose.
          x-Ed-Fi-isIdentity: true
        issuerCountryDescriptor:
          maxLength: 306
          type: string
          description: Country of origin of the document. It is strongly recommended
            that entries use only ISO 3166 2-letter country codes.
        documentExpirationDate:
          type: string
          description: The day when the document  expires, if null then never expires.
          format: date
        documentTitle:
          maxLength: 60
          type: string
          description: The title of the document given by the issuer.
        issuerDocumentIdentificationCode:
          maxLength: 60
          type: string
          description: The unique identifier on the issuer's identification system.
        issuerName:
          maxLength: 150
          type: string
          description: Name of the entity or institution that issued the document.
    tpdm_candidateRace:
      required:
      - raceDescriptor
      type: object
      properties:
        raceDescriptor:
          maxLength: 306
          type: string
          description: The general racial category which most clearly reflects the
            individual's recognition of his or her community or with which the individual
            most identifies. The data model allows for multiple entries so that each
            individual can specify all appropriate races.
          x-Ed-Fi-isIdentity: true
    tpdm_candidateReference:
      required:
      - candidateIdentifier
      type: object
      properties:
        candidateIdentifier:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a candidate.
        link:
          $ref: "#/components/schemas/link"
    tpdm_candidateTelephone:
      required:
      - telephoneNumber
      - telephoneNumberTypeDescriptor
      type: object
      properties:
        telephoneNumberTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of communication number listed for an individual or
            organization.
          x-Ed-Fi-isIdentity: true
        telephoneNumber:
          maxLength: 24
          type: string
          description: The telephone number including the area code, and extension,
            if applicable.
          x-Ed-Fi-isIdentity: true
        doNotPublishIndicator:
          type: boolean
          description: An indication that the telephone number should not be published.
        orderOfPriority:
          type: integer
          description: The order of priority assigned to telephone numbers to define
            which number to attempt first, second, etc.
          format: int32
        textMessageCapabilityIndicator:
          type: boolean
          description: An indication that the telephone number is technically capable
            of sending and receiving Short Message Service (SMS) text messages.
    tpdm_credentialExtension:
      type: object
      properties:
        certificationRouteDescriptor:
          maxLength: 306
          type: string
          description: The process, program, or pathway used to obtain certification.
        credentialStatusDescriptor:
          maxLength: 306
          type: string
          description: The current status of the credential (e.g., active, suspended,
            etc.).
        educatorRoleDescriptor:
          maxLength: 306
          type: string
          description: The specific roles or positions within an organization that
            the credential is intended to authorize (e.g., Principal, Reading Specialist),
            typically associated with service and administrative certifications.
        boardCertificationIndicator:
          type: boolean
          description: Indicator that the credential was granted under the authority
            of a national Board Certification.
        certificationTitle:
          maxLength: 64
          type: string
          description: The title of the certification obtained by the educator.
        credentialStatusDate:
          type: string
          description: The month, day, and year on which the credential status was
            effective.
          format: date
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        studentAcademicRecords:
          type: array
          description: An unordered collection of credentialStudentAcademicRecords.
            Reference to the person's Student Academic Records for the school(s) with
            which the Credential is associated.
          items:
            $ref: "#/components/schemas/tpdm_credentialStudentAcademicRecord"
    tpdm_credentialStudentAcademicRecord:
      required:
      - studentAcademicRecordReference
      type: object
      properties:
        studentAcademicRecordReference:
          $ref: "#/components/schemas/edFi_studentAcademicRecordReference"
    tpdm_educatorPreparationProgram:
      required:
      - educationOrganizationReference
      - programName
      - programTypeDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        programName:
          maxLength: 255
          type: string
          description: The name of the Educator Preparation Program.
          x-Ed-Fi-isIdentity: true
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        accreditationStatusDescriptor:
          maxLength: 306
          type: string
          description: The current accreditation status of the Educator Preparation
            Program.
        gradeLevels:
          type: array
          description: An unordered collection of educatorPreparationProgramGradeLevels.
            The grade levels served at the EPP Program.
          items:
            $ref: "#/components/schemas/tpdm_educatorPreparationProgramGradeLevel"
        programId:
          maxLength: 20
          type: string
          description: A unique number or alphanumeric code assigned to a program
            by a school, school system, a state, or other agency or entity.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_educatorPreparationProgramGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels served at the EPP Program.
          x-Ed-Fi-isIdentity: true
    tpdm_educatorPreparationProgramReference:
      required:
      - educationOrganizationId
      - programName
      - programTypeDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        programName:
          maxLength: 255
          type: string
          description: The name of the Educator Preparation Program.
        programTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of program.
        link:
          $ref: "#/components/schemas/link"
    tpdm_evaluation:
      required:
      - evaluationTitle
      - performanceEvaluationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
          x-Ed-Fi-isIdentity: true
        performanceEvaluationReference:
          $ref: "#/components/schemas/tpdm_performanceEvaluationReference"
        evaluationDescription:
          maxLength: 255
          type: string
          description: The long description of the Evaluation.
        evaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of the evaluation (e.g., observation, principal,
            peer, student survey, student growth).
        interRaterReliabilityScore:
          type: integer
          description: A score indicating how much homogeneity, or consensus, there
            is in the ratings given by judges. Most commonly a percentage scale
            (1-100)
          format: int32
        maxRating:
          type: number
          description: The maximum summary numerical rating or score for the evaluation.
          format: double
        minRating:
          type: number
          description: The minimum summary numerical rating or score for the evaluation.
            If omitted, assumed to be 0.0.
          format: double
        ratingLevels:
          type: array
          description: An unordered collection of evaluationRatingLevels. The descriptive
            level(s) of ratings (cut scores) for the evaluation.
          items:
            $ref: "#/components/schemas/tpdm_evaluationRatingLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationElement:
      required:
      - evaluationElementTitle
      - evaluationObjectiveReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationElementTitle:
          maxLength: 255
          type: string
          description: The name or title of the evaluation element.
          x-Ed-Fi-isIdentity: true
        evaluationObjectiveReference:
          $ref: "#/components/schemas/tpdm_evaluationObjectiveReference"
        evaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of the evaluation (e.g., observation, principal,
            peer, student survey, student growth).
        maxRating:
          type: number
          description: The maximum summary numerical rating or score for the evaluation
            element.
          format: double
        minRating:
          type: number
          description: The minimum summary numerical rating or score for the evaluation
            element. If omitted, assumed to be 0.0.
          format: double
        ratingLevels:
          type: array
          description: An unordered collection of evaluationElementRatingLevels. The
            descriptive level(s) of ratings (cut scores) for evaluation element.
          items:
            $ref: "#/components/schemas/tpdm_evaluationElementRatingLevel"
        sortOrder:
          type: integer
          description: The sort order of this Evaluation Element.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationElementRating:
      required:
      - evaluationElementReference
      - evaluationObjectiveRatingReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationElementReference:
          $ref: "#/components/schemas/tpdm_evaluationElementReference"
        evaluationObjectiveRatingReference:
          $ref: "#/components/schemas/tpdm_evaluationObjectiveRatingReference"
        areaOfRefinement:
          maxLength: 1024
          type: string
          description: Area identified for person to refine or improve as part of
            the evaluation.
        areaOfReinforcement:
          maxLength: 1024
          type: string
          description: Area identified for reinforcement or positive feedback as part
            of the evaluation.
        comments:
          maxLength: 1024
          type: string
          description: Any comments about the performance evaluation to be captured.
        evaluationElementRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The rating level achieved based upon the rating or score.
        feedback:
          maxLength: 2048
          type: string
          description: Feedback provided to the evaluated person.
        results:
          type: array
          description: An unordered collection of evaluationElementRatingResults.
            The numerical summary rating or score for the evaluation element.
          items:
            $ref: "#/components/schemas/tpdm_evaluationElementRatingResult"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationElementRatingLevel:
      required:
      - evaluationRatingLevelDescriptor
      type: object
      properties:
        evaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The title for a level of rating or evaluation band (e.g.,
            Excellent, Acceptable, Needs Improvement, Unacceptable).
          x-Ed-Fi-isIdentity: true
        maxRating:
          type: number
          description: The maximum numerical rating or score to achieve the evaluation
            rating level.
          format: double
        minRating:
          type: number
          description: The minimum numerical rating or score to achieve the evaluation
            rating level.
          format: double
    tpdm_evaluationElementRatingResult:
      required:
      - rating
      - ratingResultTitle
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        rating:
          type: number
          description: The numerical summary rating or score for the evaluation.
          format: double
          x-Ed-Fi-isIdentity: true
        ratingResultTitle:
          maxLength: 50
          type: string
          description: The title of Rating Result.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result.
    tpdm_evaluationElementReference:
      required:
      - educationOrganizationId
      - evaluationElementTitle
      - evaluationObjectiveTitle
      - evaluationPeriodDescriptor
      - evaluationTitle
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - schoolYear
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationElementTitle:
          maxLength: 255
          type: string
          description: The name or title of the evaluation element.
        evaluationObjectiveTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation Objective.
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_evaluationObjective:
      required:
      - evaluationObjectiveTitle
      - evaluationReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationObjectiveTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation Objective.
          x-Ed-Fi-isIdentity: true
        evaluationReference:
          $ref: "#/components/schemas/tpdm_evaluationReference"
        evaluationObjectiveDescription:
          maxLength: 255
          type: string
          description: The long description of the Evaluation Objective.
        evaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of the evaluation Objective (e.g., observation, principal,
            peer, student survey, student growth).
        maxRating:
          type: number
          description: The maximum summary numerical rating or score for the evaluation
            Objective.
          format: double
        minRating:
          type: number
          description: The minimum summary numerical rating or score for the evaluation
            Objective. If omitted, assumed to be 0.0.
          format: double
        ratingLevels:
          type: array
          description: An unordered collection of evaluationObjectiveRatingLevels.
            The descriptive level(s) of ratings (cut scores) for evaluation Objective.
          items:
            $ref: "#/components/schemas/tpdm_evaluationObjectiveRatingLevel"
        sortOrder:
          type: integer
          description: The sort order of this Evaluation Objective.
          format: int32
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationObjectiveRating:
      required:
      - evaluationObjectiveReference
      - evaluationRatingReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationObjectiveReference:
          $ref: "#/components/schemas/tpdm_evaluationObjectiveReference"
        evaluationRatingReference:
          $ref: "#/components/schemas/tpdm_evaluationRatingReference"
        comments:
          maxLength: 1024
          type: string
          description: Any comments about the performance evaluation to be captured.
        objectiveRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The rating level achieved based upon the rating or score.
        results:
          type: array
          description: An unordered collection of evaluationObjectiveRatingResults.
            The numerical summary rating or score for the evaluation Objective.
          items:
            $ref: "#/components/schemas/tpdm_evaluationObjectiveRatingResult"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationObjectiveRatingLevel:
      required:
      - evaluationRatingLevelDescriptor
      type: object
      properties:
        evaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The title for a level of rating or evaluation band (e.g.,
            Excellent, Acceptable, Needs Improvement, Unacceptable).
          x-Ed-Fi-isIdentity: true
        maxRating:
          type: number
          description: The maximum numerical rating or score to achieve the evaluation
            rating level.
          format: double
        minRating:
          type: number
          description: The minimum numerical rating or score to achieve the evaluation
            rating level.
          format: double
    tpdm_evaluationObjectiveRatingReference:
      required:
      - educationOrganizationId
      - evaluationDate
      - evaluationObjectiveTitle
      - evaluationPeriodDescriptor
      - evaluationTitle
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - personId
      - schoolYear
      - sourceSystemDescriptor
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationDate:
          type: string
          description: The date for the person's evaluation.
          format: date-time
        evaluationObjectiveTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation Objective.
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        personId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a person.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sourceSystemDescriptor:
          maxLength: 306
          type: string
          description: This descriptor defines the originating record source system
            for the person.
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_evaluationObjectiveRatingResult:
      required:
      - rating
      - ratingResultTitle
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        rating:
          type: number
          description: The numerical summary rating or score for the evaluation.
          format: double
          x-Ed-Fi-isIdentity: true
        ratingResultTitle:
          maxLength: 50
          type: string
          description: The title of Rating Result.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result.
    tpdm_evaluationObjectiveReference:
      required:
      - educationOrganizationId
      - evaluationObjectiveTitle
      - evaluationPeriodDescriptor
      - evaluationTitle
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - schoolYear
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationObjectiveTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation Objective.
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_evaluationRating:
      required:
      - evaluationDate
      - evaluationReference
      - performanceEvaluationRatingReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationDate:
          type: string
          description: The date for the person's evaluation.
          format: date-time
          x-Ed-Fi-isIdentity: true
        evaluationReference:
          $ref: "#/components/schemas/tpdm_evaluationReference"
        performanceEvaluationRatingReference:
          $ref: "#/components/schemas/tpdm_performanceEvaluationRatingReference"
        sectionReference:
          $ref: "#/components/schemas/edFi_sectionReference"
        evaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The rating level achieved based upon the rating or score.
        evaluationRatingStatusDescriptor:
          maxLength: 306
          type: string
          description: The Status of the poerformance evaluation.
        results:
          type: array
          description: An unordered collection of evaluationRatingResults. The numerical
            summary rating or score for the evaluation.
          items:
            $ref: "#/components/schemas/tpdm_evaluationRatingResult"
        reviewers:
          type: array
          description: An unordered collection of evaluationRatingReviewers. The person(s)
            that conducted the performance evaluation.
          items:
            $ref: "#/components/schemas/tpdm_evaluationRatingReviewer"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_evaluationRatingLevel:
      required:
      - evaluationRatingLevelDescriptor
      type: object
      properties:
        evaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The title for a level of rating or evaluation band (e.g.,
            Excellent, Acceptable, Needs Improvement, Unacceptable).
          x-Ed-Fi-isIdentity: true
        maxRating:
          type: number
          description: The maximum numerical rating or score to achieve the evaluation
            rating level.
          format: double
        minRating:
          type: number
          description: The minimum numerical rating or score to achieve the evaluation
            rating level.
          format: double
    tpdm_evaluationRatingReference:
      required:
      - educationOrganizationId
      - evaluationDate
      - evaluationPeriodDescriptor
      - evaluationTitle
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - personId
      - schoolYear
      - sourceSystemDescriptor
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationDate:
          type: string
          description: The date for the person's evaluation.
          format: date-time
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        personId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a person.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sourceSystemDescriptor:
          maxLength: 306
          type: string
          description: This descriptor defines the originating record source system
            for the person.
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_evaluationRatingResult:
      required:
      - rating
      - ratingResultTitle
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        rating:
          type: number
          description: The numerical summary rating or score for the evaluation.
          format: double
          x-Ed-Fi-isIdentity: true
        ratingResultTitle:
          maxLength: 50
          type: string
          description: The title of Rating Result.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result.
    tpdm_evaluationRatingReviewer:
      required:
      - firstName
      - lastSurname
      type: object
      properties:
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
          x-Ed-Fi-isIdentity: true
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
          x-Ed-Fi-isIdentity: true
        reviewerPersonReference:
          $ref: "#/components/schemas/edFi_personReference"
        receivedTraining:
          $ref: "#/components/schemas/tpdm_evaluationRatingReviewerReceivedTraining"
    tpdm_evaluationRatingReviewerReceivedTraining:
      type: object
      properties:
        interRaterReliabilityScore:
          type: integer
          description: A score indicating how much homogeneity, or consensus, there
            is in the ratings given by judges. Most commonly a percentage scale
            (1-100)
          format: int32
        receivedTrainingDate:
          type: string
          description: The date on which the person administering the performance
            meausre received training on how to conduct performance measures.
          format: date
    tpdm_evaluationReference:
      required:
      - educationOrganizationId
      - evaluationPeriodDescriptor
      - evaluationTitle
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - schoolYear
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        evaluationTitle:
          maxLength: 50
          type: string
          description: The name or title of the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_financialAid:
      required:
      - aidTypeDescriptor
      - beginDate
      - studentReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        aidTypeDescriptor:
          maxLength: 306
          type: string
          description: The classification of financial aid awarded to a person for
            the academic term/year.
          x-Ed-Fi-isIdentity: true
        beginDate:
          type: string
          description: The date the award was designated.
          format: date
          x-Ed-Fi-isIdentity: true
        studentReference:
          $ref: "#/components/schemas/edFi_studentReference"
        aidAmount:
          type: number
          description: The amount of financial aid awarded to a person for the term/year.
          format: double
        aidConditionDescription:
          maxLength: 1024
          type: string
          description: The description of the condition (e.g., placement in a high
            need school) under which the aid was given.
        endDate:
          type: string
          description: The date the award was removed.
          format: date
        pellGrantRecipient:
          type: boolean
          description: Indicates a person who receives Pell Grant aid.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_performanceEvaluation:
      required:
      - educationOrganizationReference
      - evaluationPeriodDescriptor
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - schoolYearTypeReference
      - termDescriptor
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
          x-Ed-Fi-isIdentity: true
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
          x-Ed-Fi-isIdentity: true
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
          x-Ed-Fi-isIdentity: true
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
          x-Ed-Fi-isIdentity: true
        educationOrganizationReference:
          $ref: "#/components/schemas/edFi_educationOrganizationReference"
        schoolYearTypeReference:
          $ref: "#/components/schemas/edFi_schoolYearTypeReference"
        academicSubjectDescriptor:
          maxLength: 306
          type: string
          description: The description of the content or subject area of a performance
            evaluation.
        gradeLevels:
          type: array
          description: An unordered collection of performanceEvaluationGradeLevels.
            The grade levels involved with the performance evaluation.
          items:
            $ref: "#/components/schemas/tpdm_performanceEvaluationGradeLevel"
        performanceEvaluationDescription:
          maxLength: 255
          type: string
          description: The long description of the Performance Evaluation.
        ratingLevels:
          type: array
          description: An unordered collection of performanceEvaluationRatingLevels.
            The descriptive level(s) of ratings (cut scores) for the evaluation.
          items:
            $ref: "#/components/schemas/tpdm_performanceEvaluationRatingLevel"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_performanceEvaluationGradeLevel:
      required:
      - gradeLevelDescriptor
      type: object
      properties:
        gradeLevelDescriptor:
          maxLength: 306
          type: string
          description: The grade levels involved with the performance evaluation.
          x-Ed-Fi-isIdentity: true
    tpdm_performanceEvaluationRating:
      required:
      - actualDate
      - performanceEvaluationReference
      - personReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        performanceEvaluationReference:
          $ref: "#/components/schemas/tpdm_performanceEvaluationReference"
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        actualDate:
          type: string
          description: The month, day, and year on which the performance evaluation
            was conducted.
          format: date
        actualDuration:
          type: integer
          description: The actual or estimated number of clock minutes during which
            the performance evaluation was conducted.
          format: int32
        actualTime:
          type: string
          description: An indication of the the time at which the performance evaluation
            was conducted.
        announced:
          type: boolean
          description: An indicator of whether the performance evaluation was announced
            or not.
        comments:
          maxLength: 1024
          type: string
          description: Any comments about the performance evaluation to be captured.
        coteachingStyleObservedDescriptor:
          maxLength: 306
          type: string
          description: A type of co-teaching observed as part of the performance evaluation.
        performanceEvaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The rating level achieved based upon the rating or score.
        results:
          type: array
          description: An unordered collection of performanceEvaluationRatingResults.
            The numerical summary rating or score for the performance evaluation.
          items:
            $ref: "#/components/schemas/tpdm_performanceEvaluationRatingResult"
        reviewers:
          type: array
          description: An unordered collection of performanceEvaluationRatingReviewers.
            The person(s) that conducted the performance evaluation.
          items:
            $ref: "#/components/schemas/tpdm_performanceEvaluationRatingReviewer"
        scheduleDate:
          type: string
          description: The month, day, and year on which the performance evaluation
            was scheduled.
          format: date
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_performanceEvaluationRatingLevel:
      required:
      - evaluationRatingLevelDescriptor
      type: object
      properties:
        evaluationRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The title for a level of rating or evaluation band (e.g.,
            Excellent, Acceptable, Needs Improvement, Unacceptable).
          x-Ed-Fi-isIdentity: true
        maxRating:
          type: number
          description: The maximum numerical rating or score to achieve the evaluation
            rating level.
          format: double
        minRating:
          type: number
          description: The minimum numerical rating or score to achieve the evaluation
            rating level.
          format: double
    tpdm_performanceEvaluationRatingReference:
      required:
      - educationOrganizationId
      - evaluationPeriodDescriptor
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - personId
      - schoolYear
      - sourceSystemDescriptor
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        personId:
          maxLength: 32
          type: string
          description: A unique alphanumeric code assigned to a person.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        sourceSystemDescriptor:
          maxLength: 306
          type: string
          description: This descriptor defines the originating record source system
            for the person.
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_performanceEvaluationRatingResult:
      required:
      - rating
      - ratingResultTitle
      - resultDatatypeTypeDescriptor
      type: object
      properties:
        rating:
          type: number
          description: The numerical summary rating or score for the evaluation.
          format: double
          x-Ed-Fi-isIdentity: true
        ratingResultTitle:
          maxLength: 50
          type: string
          description: The title of Rating Result.
          x-Ed-Fi-isIdentity: true
        resultDatatypeTypeDescriptor:
          maxLength: 306
          type: string
          description: The datatype of the result.
    tpdm_performanceEvaluationRatingReviewer:
      required:
      - firstName
      - lastSurname
      type: object
      properties:
        firstName:
          maxLength: 75
          type: string
          description: A name given to an individual at birth, baptism, or during
            another naming ceremony, or through legal change.
          x-Ed-Fi-isIdentity: true
        lastSurname:
          maxLength: 75
          type: string
          description: The name borne in common by members of a family.
          x-Ed-Fi-isIdentity: true
        reviewerPersonReference:
          $ref: "#/components/schemas/edFi_personReference"
        receivedTraining:
          $ref: "#/components/schemas/tpdm_performanceEvaluationRatingReviewerReceivedTraining"
    tpdm_performanceEvaluationRatingReviewerReceivedTraining:
      type: object
      properties:
        interRaterReliabilityScore:
          type: integer
          description: A score indicating how much homogeneity, or consensus, there
            is in the ratings given by judges. Most commonly a percentage scale
            (1-100)
          format: int32
        receivedTrainingDate:
          type: string
          description: The date on which the person administering the performance
            meausre received training on how to conduct performance measures.
          format: date
    tpdm_performanceEvaluationReference:
      required:
      - educationOrganizationId
      - evaluationPeriodDescriptor
      - performanceEvaluationTitle
      - performanceEvaluationTypeDescriptor
      - schoolYear
      - termDescriptor
      type: object
      properties:
        educationOrganizationId:
          type: integer
          description: The identifier assigned to an education organization.
          format: int32
        evaluationPeriodDescriptor:
          maxLength: 306
          type: string
          description: The period for the evaluation.
        performanceEvaluationTitle:
          maxLength: 50
          type: string
          description: An assigned unique identifier for the performance evaluation.
        performanceEvaluationTypeDescriptor:
          maxLength: 306
          type: string
          description: The type of performance evaluation conducted.
        schoolYear:
          type: integer
          description: The identifier for the school year.
          format: int32
        termDescriptor:
          maxLength: 306
          type: string
          description: The term for the session during the school year.
        link:
          $ref: "#/components/schemas/link"
    tpdm_rubricDimension:
      required:
      - criterionDescription
      - evaluationElementReference
      - rubricRating
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        rubricRating:
          type: integer
          description: The rating achieved for the rubric dimension.
          format: int32
          x-Ed-Fi-isIdentity: true
        evaluationElementReference:
          $ref: "#/components/schemas/tpdm_evaluationElementReference"
        criterionDescription:
          maxLength: 1024
          type: string
          description: The criterion description for the rubric dimension.
        dimensionOrder:
          type: integer
          description: The order for the rubric dimension.
          format: int32
        rubricRatingLevelDescriptor:
          maxLength: 306
          type: string
          description: The rating level achieved for the rubric dimension.
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_schoolExtension:
      type: object
      properties:
        postSecondaryInstitutionReference:
          $ref: "#/components/schemas/edFi_postSecondaryInstitutionReference"
    tpdm_surveyResponseExtension:
      type: object
      properties:
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
    tpdm_surveyResponsePersonTargetAssociation:
      required:
      - personReference
      - surveyResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        personReference:
          $ref: "#/components/schemas/edFi_personReference"
        surveyResponseReference:
          $ref: "#/components/schemas/edFi_surveyResponseReference"
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
    tpdm_surveySectionResponsePersonTargetAssociation:
      required:
      - personReference
      - surveySectionResponseReference
      type: object
      properties:
        id:
          type: string
          description: resource identifier
        personReference:
          $ref: ""#/components/parameters/edFi_personReference""
        surveySectionResponseReference:
          $ref: ""#/components/parameters/edFi_surveySectionResponseReference""
        _etag:
          type: string
          description: A unique system-generated value that identifies the version
            of the resource.
  responses:
    Created:
      description: The resource was created.  An ETag value is available in the ETag
        header, and the location of the resource is available in the Location header
        of the response.
      content: {}
    Updated:
      description: The resource was updated.  An updated ETag value is available in
        the ETag header of the response.
      content: {}
    Deleted:
      description: The resource was successfully deleted.
      content: {}
    NotModified:
      description: The resource's current server-side ETag value matched the If-None-Match
        header value supplied with the request indicating the resource has not been
        modified.
      content: {}
    BadRequest:
      description: Bad Request. The request was invalid and cannot be completed. See
        the response body for specific validation errors. This will typically be an
        issue with the query parameters or their values.
      content: {}
    Unauthorized:
      description: Unauthorized. The request requires authentication. The OAuth bearer
        token was either not provided or is invalid. The operation may succeed once
        authentication has been successfully completed.
      content: {}
    Forbidden:
      description: Forbidden. The request cannot be completed in the current authorization
        context. Contact your administrator if you believe this operation should be
        allowed.
      content: {}
    NotFound:
      description: The resource could not be found.
      content: {}
    Conflict:
      description: Conflict.  The request cannot be completed because it would result
        in an invalid state.  See the response body for details.
      content: {}
    PreconditionFailed:
      description: The resource's current server-side ETag value does not match the
        supplied If-Match header value in the request. This indicates the resource
        has been modified by another consumer.
      content: {}
    Error:
      description: An unhandled error occurred on the server. See the response body
        for details.
      content: {}
  parameters:
    offset:
      name: offset
      in: query
      description: Indicates how many items should be skipped before returning results.
      schema:
        type: integer
        format: int32
        default: 0
    limit:
      name: limit
      in: query
      description: Indicates the maximum number of items that should be returned in
        the results.
      schema:
        maximum: 500
        minimum: 0
        type: integer
        format: int32
        default: 25
    MinChangeVersion:
      name: minChangeVersion
      in: query
      description: Used in synchronization to set sequence minimum ChangeVersion
      schema:
        type: integer
        format: int64
    MaxChangeVersion:
      name: maxChangeVersion
      in: query
      description: Used in synchronization to set sequence maximum ChangeVersion
      schema:
        type: integer
        format: int64
    id:
      name: id
      in: path
      description: A resource identifier that uniquely identifies the resource.
      required: true
      schema:
        type: string
    IfMatch:
      name: If-Match
      in: header
      description: The ETag header value used to prevent the DELETE from removing
        a resource modified by another consumer.
      schema:
        type: string
    IfNoneMatch:
      name: If-None-Match
      in: header
      description: The previously returned ETag header value, used here to prevent
        the unnecessary data transfer of an unchanged resource.
      schema:
        type: string
    totalCount:
      name: totalCount
      in: query
      description: Indicates if the total number of items available should be returned
        in the 'Total-Count' header of the response.  If set to false, 'Total-Count
        header will not be provided.
      schema:
        type: boolean
        default: false
  securitySchemes:
    oauth2_client_credentials:
      type: oauth2
      description: Ed-Fi ODS/API OAuth 2.0 Client Credentials Grant Type authorization
      flows:
        clientCredentials:
          tokenUrl: ""
          scopes: {}
