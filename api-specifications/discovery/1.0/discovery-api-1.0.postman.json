{
	"info": {
		"_postman_id": "c7fe50c5-c9f5-4d92-8117-470673a9633c",
		"name": "Ed-Fi Discovery API (1.0)",
		"description": "The default response when retrieving the base endpoint on an Ed-Fi implementation\nmust be a JSON document that provides information about the application version,\nsupported data model(s), and URLs for additional metadata.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29458798"
	},
	"item": [
		{
			"name": "metadata",
			"item": [
				{
					"name": "data",
					"item": [
						{
							"name": "v3",
							"item": [
								{
									"name": "dependencies",
									"item": [
										{
											"name": "This endpoint will provide developers with the data needed to load resources in the appropriate order.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Validate status 2xx \r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Status code is 2xx\", function () {\r",
															"   pm.response.to.be.success;\r",
															"});\r",
															"\r",
															"// Validate if response header has matching content-type\r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Content-Type is application/json\", function () {\r",
															"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
															"});\r",
															"\r",
															"// Validate if response has JSON Body \r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Response has JSON Body\", function () {\r",
															"    pm.response.to.have.jsonBody();\r",
															"});\r",
															"\r",
															"// Response Validation\r",
															"const schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"resource\",\"order\",\"operations\"],\"properties\":{\"resource\":{\"type\":\"string\",\"example\":\"/ed-fi/absenceEventCategoryDescriptors\"},\"order\":{\"type\":\"integer\",\"example\":1},\"operations\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"example\":\"Create\"}}}}}\r",
															"\r",
															"// Validate if response matches JSON schema \r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Schema is valid\", function() {\r",
															"    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/v3/dependencies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"v3",
														"dependencies"
													]
												},
												"description": "This endpoint will provide developers with the data needed to load resources in the appropriate order."
											},
											"response": [
												{
													"name": "GET response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/metadata/data/v3/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"metadata",
																"data",
																"v3",
																"dependencies"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"resource\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"operations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"resource\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"operations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "(GraphML) This endpoint will provide developers with the data needed to load resources in the appropriate order.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// Validate status 2xx \r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Status code is 2xx\", function () {\r",
															"   pm.response.to.be.success;\r",
															"});\r",
															"\r",
															"// Validate if response header has matching content-type\r",
															"pm.test(\"[GET]::/api/metadata/data/v3/dependencies - Content-Type is application/graphml\", function () {\r",
															"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/graphml\");\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/graphml"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metadata/data/v3/dependencies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metadata",
														"data",
														"v3",
														"dependencies"
													]
												},
												"description": "This endpoint will provide developers with the data needed to load resources in the appropriate order."
											},
											"response": [
												{
													"name": "GET response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/metadata/data/v3/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"metadata",
																"data",
																"v3",
																"dependencies"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"resource\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"operations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"resource\": \"<string>\",\n    \"order\": \"<integer>\",\n    \"operations\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "OpenAPI specifications for interfaces supported by this application.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate status 2xx \r",
									"pm.test(\"[GET]::/api/metadata - Status code is 2xx\", function () {\r",
									"   pm.response.to.be.success;\r",
									"});\r",
									"\r",
									"// Validate if response header has matching content-type\r",
									"pm.test(\"[GET]::/api/metadata - Content-Type is application/json\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"// Validate if response has JSON Body \r",
									"pm.test(\"[GET]::/api/metadata - Response has JSON Body\", function () {\r",
									"    pm.response.to.have.jsonBody();\r",
									"});\r",
									"\r",
									"// Response Validation\r",
									"const schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"name\",\"endpointUri\",\"prefix\"],\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"Resources\"},\"endpointUri\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/v7.0/api/metadata/data/v3/resources/swagger.json\"},\"prefix\":{\"type\":\"string\"}}}}\r",
									"\r",
									"// Validate if response matches JSON schema \r",
									"pm.test(\"[GET]::/api/metadata - Schema is valid\", function() {\r",
									"    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metadata"
							]
						},
						"description": "OpenAPI specifications for interfaces supported by this application."
					},
					"response": [
						{
							"name": "GET response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"endpointUri\": \"<string>\",\n    \"prefix\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"endpointUri\": \"<string>\",\n    \"prefix\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "High-level metadata for the Ed-Fi API implementation.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate status 2xx \r",
							"pm.test(\"[GET]::/api - Status code is 2xx\", function () {\r",
							"   pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"// Validate if response header has matching content-type\r",
							"pm.test(\"[GET]::/api - Content-Type is application/json\", function () {\r",
							"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Validate if response has JSON Body \r",
							"pm.test(\"[GET]::/api - Response has JSON Body\", function () {\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							"\r",
							"// Response Validation\r",
							"const schema = {\"type\":\"object\",\"required\":[\"version\",\"suite\",\"dataModels\",\"urls\"],\"properties\":{\"version\":{\"type\":\"string\",\"example\":7},\"informationalVersion\":{\"type\":\"string\",\"example\":7},\"suite\":{\"type\":\"string\",\"example\":3},\"build\":{\"type\":\"string\",\"example\":\"7.0.2250.0\"},\"dataModels\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"name\",\"version\"],\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"Ed-Fi\"},\"version\":{\"type\":\"string\",\"example\":\"5.0.0\"},\"informationalVersion\":{\"type\":\"string\",\"example\":\"The Ed-Fi Data Model 5.0\"}}}},\"urls\":{\"type\":\"object\",\"required\":[\"dependencies\",\"openApiMetadata\",\"oauth\",\"dataManagementApi\"],\"properties\":{\"dependencies\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/v7.0/api/metadata/data/v3/dependencies\"},\"openApiMetadata\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/v7.0/api/metadata\"},\"oauth\":{\"type\":\"string\",\"example\":\"https://api.ed-fi.org/v7.0/api/oauth/token\"},\"dataManagementApi\":{\"type\":\"string\",\"description\":\"Base path for all resources\",\"example\":\"https://api.ed-fi.org/v7.0/api/data/v3\"},\"xsdMetadata\":{\"type\":\"string\",\"description\":\"link for downloading XSD files\",\"example\":\"https://api.ed-fi.org/v7.0/api/metadata/xsd\"},\"changeQueries\":{\"type\":\"string\",\"description\":\"Base path for the Change Queries API\",\"example\":\"https://api.ed-fi.org/v7.0/api/changeQueries/v1\"},\"composites\":{\"type\":\"string\",\"description\":\"Base path for the Composites API\",\"example\":\"https://api.ed-fi.org/v7.0/api/composites/v1\"},\"identity\":{\"type\":\"string\",\"description\":\"Base path for the Identity API\",\"example\":\"https://api.ed-fi.org/v7.0/api/identity/v2\"}}}}}\r",
							"\r",
							"// Validate if response matches JSON schema \r",
							"pm.test(\"[GET]::/api - Schema is valid\", function() {\r",
							"    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				},
				"description": "High-level metadata for the Ed-Fi API implementation."
			},
			"response": [
				{
					"name": "GET response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"version\": \"<string>\",\n  \"suite\": \"<string>\",\n  \"dataModels\": [\n    {\n      \"name\": \"<string>\",\n      \"version\": \"<string>\",\n      \"informationalVersion\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"version\": \"<string>\",\n      \"informationalVersion\": \"<string>\"\n    }\n  ],\n  \"urls\": {\n    \"dependencies\": \"<string>\",\n    \"oauth\": \"<string>\",\n    \"dataManagementApi\": \"<string>\",\n    \"openApiMetadata\": \"<string>\",\n    \"xsdMetadata\": \"<string>\",\n    \"changeQueries\": \"<string>\",\n    \"composites\": \"<string>\",\n    \"identity\": \"<string>\"\n  },\n  \"informationalVersion\": \"<string>\",\n  \"build\": \"<string>\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.ed-fi.org/v7.1",
			"disabled": true
		},
		{
			"key": "baseUrl",
			"value": "https://api.ed-fi.org/v7.0",
			"type": "string"
		}
	]
}
